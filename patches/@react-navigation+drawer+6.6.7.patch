diff --git a/node_modules/@react-navigation/drawer/lib/module/views/DrawerView.js b/node_modules/@react-navigation/drawer/lib/module/views/DrawerView.js
index 38765bb..95b2b23 100644
--- a/node_modules/@react-navigation/drawer/lib/module/views/DrawerView.js
+++ b/node_modules/@react-navigation/drawer/lib/module/views/DrawerView.js
@@ -49,7 +49,7 @@ function DrawerViewBase(_ref2) {
   if (useLegacyImplementation && legacyImplemenationNotAvailable) {
     throw new Error('The `useLegacyImplementation` prop is not available with Reanimated 3 as it no longer includes support for Reanimated 1 legacy API. Remove the `useLegacyImplementation` prop from `Drawer.Navigator` to be able to use it.');
   }
-  const Drawer = useLegacyImplementation ? require('./legacy/Drawer').default : require('./modern/Drawer').default;
+  const Drawer = require('./modern/Drawer').default;
   const focusedRouteKey = state.routes[state.index].key;
   const {
     drawerHideStatusBarOnOpen = false,
diff --git a/node_modules/@react-navigation/drawer/lib/module/views/legacy/Drawer.js b/node_modules/@react-navigation/drawer/lib/module/views/legacy/Drawer.js
deleted file mode 100644
index 9792719..0000000
--- a/node_modules/@react-navigation/drawer/lib/module/views/legacy/Drawer.js
+++ /dev/null
@@ -1,428 +0,0 @@
-function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
-import * as React from 'react';
-import { I18nManager, InteractionManager, Keyboard, Platform, StatusBar, StyleSheet, View } from 'react-native';
-import Animated from 'react-native-reanimated';
-import DrawerProgressContext from '../../utils/DrawerProgressContext';
-import { GestureState, PanGestureHandler } from '../GestureHandler';
-import Overlay from './Overlay';
-const {
-  Clock,
-  Value,
-  onChange,
-  clockRunning,
-  startClock,
-  stopClock,
-  spring,
-  abs,
-  add,
-  and,
-  block,
-  call,
-  cond,
-  divide,
-  eq,
-  event,
-  greaterThan,
-  lessThan,
-  max,
-  min,
-  multiply,
-  neq,
-  or,
-  set,
-  sub
-} = Animated;
-const TRUE = 1;
-const FALSE = 0;
-const NOOP = 0;
-const UNSET = -1;
-const DIRECTION_LEFT = 1;
-const DIRECTION_RIGHT = -1;
-const SWIPE_DISTANCE_MINIMUM = 5;
-const DEFAULT_DRAWER_WIDTH = '80%';
-const SPRING_CONFIG = {
-  stiffness: 1000,
-  damping: 500,
-  mass: 3,
-  overshootClamping: true,
-  restDisplacementThreshold: 0.01,
-  restSpeedThreshold: 0.01
-};
-const ANIMATED_ZERO = new Animated.Value(0);
-const ANIMATED_ONE = new Animated.Value(1);
-export default class DrawerView extends React.Component {
-  componentDidUpdate(prevProps) {
-    const {
-      open,
-      drawerPosition,
-      drawerType,
-      swipeDistanceThreshold,
-      swipeVelocityThreshold,
-      hideStatusBarOnOpen: hideStatusBar
-    } = this.props;
-    if (
-    // If we're not in the middle of a transition, sync the drawer's open state
-    typeof this.pendingOpenValue !== 'boolean' || open !== this.pendingOpenValue) {
-      this.toggleDrawer(open);
-    }
-    this.pendingOpenValue = undefined;
-    if (open !== prevProps.open && hideStatusBar) {
-      this.toggleStatusBar(open);
-    }
-    if (prevProps.drawerPosition !== drawerPosition) {
-      this.drawerPosition.setValue(drawerPosition === 'right' ? DIRECTION_RIGHT : DIRECTION_LEFT);
-    }
-    if (prevProps.drawerType !== drawerType) {
-      this.isDrawerTypeFront.setValue(drawerType === 'front' ? TRUE : FALSE);
-    }
-    if (prevProps.swipeDistanceThreshold !== swipeDistanceThreshold) {
-      this.swipeDistanceThreshold.setValue(swipeDistanceThreshold);
-    }
-    if (prevProps.swipeVelocityThreshold !== swipeVelocityThreshold) {
-      this.swipeVelocityThreshold.setValue(swipeVelocityThreshold);
-    }
-  }
-  componentWillUnmount() {
-    this.toggleStatusBar(false);
-    this.handleEndInteraction();
-  }
-  handleEndInteraction = () => {
-    if (this.interactionHandle !== undefined) {
-      InteractionManager.clearInteractionHandle(this.interactionHandle);
-      this.interactionHandle = undefined;
-    }
-  };
-  handleStartInteraction = () => {
-    if (this.interactionHandle === undefined) {
-      this.interactionHandle = InteractionManager.createInteractionHandle();
-    }
-  };
-  getDrawerWidth = () => {
-    const {
-      drawerStyle,
-      dimensions
-    } = this.props;
-    const {
-      width = DEFAULT_DRAWER_WIDTH
-    } = StyleSheet.flatten(drawerStyle) || {};
-    if (typeof width === 'string' && width.endsWith('%')) {
-      // Try to calculate width if a percentage is given
-      const percentage = Number(width.replace(/%$/, ''));
-      if (Number.isFinite(percentage)) {
-        return dimensions.width * (percentage / 100);
-      }
-    }
-    return typeof width === 'number' ? width : 0;
-  };
-  clock = new Clock();
-  isDrawerTypeFront = new Value(this.props.drawerType === 'front' ? TRUE : FALSE);
-  isOpen = new Value(this.props.open ? TRUE : FALSE);
-  nextIsOpen = new Value(UNSET);
-  isSwiping = new Value(FALSE);
-  initialDrawerWidth = this.getDrawerWidth();
-  gestureState = new Value(GestureState.UNDETERMINED);
-  touchX = new Value(0);
-  velocityX = new Value(0);
-  gestureX = new Value(0);
-  offsetX = new Value(0);
-  position = new Value(this.props.open ? this.initialDrawerWidth * (this.props.drawerPosition === 'right' ? DIRECTION_RIGHT : DIRECTION_LEFT) : 0);
-  containerWidth = new Value(this.props.dimensions.width);
-  drawerWidth = new Value(this.initialDrawerWidth);
-  drawerOpacity = new Value(this.props.drawerType === 'permanent' ? 1 : 0);
-  drawerPosition = new Value(this.props.drawerPosition === 'right' ? DIRECTION_RIGHT : DIRECTION_LEFT);
-
-  // Comment stolen from react-native-gesture-handler/DrawerLayout
-  //
-  // While closing the drawer when user starts gesture outside of its area (in greyed
-  // out part of the window), we want the drawer to follow only once finger reaches the
-  // edge of the drawer.
-  // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by
-  // dots. The touch gesture starts at '*' and moves left, touch path is indicated by
-  // an arrow pointing left
-  // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+
-  //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|
-  //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|
-  //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|
-  //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|
-  //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|
-  //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|
-  //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|
-  //    +---------------+    +---------------+    +---------------+    +---------------+
-  //
-  // For the above to work properly we define animated value that will keep start position
-  // of the gesture. Then we use that value to calculate how much we need to subtract from
-  // the dragX. If the gesture started on the greyed out area we take the distance from the
-  // edge of the drawer to the start position. Otherwise we don't subtract at all and the
-  // drawer be pulled back as soon as you start the pan.
-  //
-  // This is used only when drawerType is "front"
-  touchDistanceFromDrawer = cond(this.isDrawerTypeFront, cond(eq(this.drawerPosition, DIRECTION_LEFT), max(
-  // Distance of touch start from left screen edge - Drawer width
-  sub(sub(this.touchX, this.gestureX), this.drawerWidth), 0), min(multiply(
-  // Distance of drawer from left screen edge - Touch start point
-  sub(sub(this.containerWidth, this.drawerWidth), sub(this.touchX, this.gestureX)), DIRECTION_RIGHT), 0)), 0);
-  swipeDistanceThreshold = new Value(this.props.swipeDistanceThreshold);
-  swipeVelocityThreshold = new Value(this.props.swipeVelocityThreshold);
-  currentOpenValue = this.props.open;
-  isStatusBarHidden = false;
-  manuallyTriggerSpring = new Value(FALSE);
-  transitionTo = isOpen => {
-    const toValue = new Value(0);
-    const frameTime = new Value(0);
-    const state = {
-      position: this.position,
-      time: new Value(0),
-      finished: new Value(FALSE),
-      velocity: new Value(0)
-    };
-    return block([cond(clockRunning(this.clock), NOOP, [
-    // Animation wasn't running before
-    // Set the initial values and start the clock
-    set(toValue, multiply(isOpen, this.drawerWidth, this.drawerPosition)), set(frameTime, 0), set(state.time, 0), set(state.finished, FALSE), set(state.velocity, this.velocityX), set(this.isOpen, isOpen), startClock(this.clock), call([], this.handleStartInteraction), set(this.manuallyTriggerSpring, FALSE)]), spring(this.clock, state, {
-      ...SPRING_CONFIG,
-      toValue
-    }), cond(state.finished, [
-    // Reset gesture and velocity from previous gesture
-    set(this.touchX, 0), set(this.gestureX, 0), set(this.velocityX, 0), set(this.offsetX, 0),
-    // When the animation finishes, stop the clock
-    stopClock(this.clock), call([this.isOpen], _ref => {
-      let [value] = _ref;
-      const open = Boolean(value);
-      this.handleEndInteraction();
-      if (open !== this.props.open) {
-        // Sync drawer's state after animation finished
-        // This shouldn't be necessary, but there seems to be an issue on iOS
-        this.toggleDrawer(this.props.open);
-      }
-    })])]);
-  };
-  dragX = block([onChange(this.isOpen, call([this.isOpen], _ref2 => {
-    let [value] = _ref2;
-    const open = Boolean(value);
-    this.currentOpenValue = open;
-
-    // Without this check, the drawer can go to an infinite update <-> animate loop for sync updates
-    if (open !== this.props.open) {
-      // If the mode changed, update state
-      if (open) {
-        this.props.onOpen();
-      } else {
-        this.props.onClose();
-      }
-      this.pendingOpenValue = open;
-
-      // Force componentDidUpdate to fire, whether user does a setState or not
-      // This allows us to detect when the user drops the update and revert back
-      // It's necessary to make sure that the state stays in sync
-      this.forceUpdate();
-    }
-  })), onChange(this.nextIsOpen, cond(neq(this.nextIsOpen, UNSET), [
-  // Stop any running animations
-  cond(clockRunning(this.clock), stopClock(this.clock)),
-  // Update the open value to trigger the transition
-  set(this.isOpen, this.nextIsOpen), set(this.gestureX, 0), set(this.nextIsOpen, UNSET)])),
-  // This block must be after the this.isOpen listener since we check for current value
-  onChange(this.isSwiping,
-  // Listen to updates for this value only when it changes
-  // Without `onChange`, this will fire even if the value didn't change
-  // We don't want to call the listeners if the value didn't change
-  call([this.isSwiping], _ref3 => {
-    let [value] = _ref3;
-    const {
-      keyboardDismissMode
-    } = this.props;
-    if (value === TRUE) {
-      if (keyboardDismissMode === 'on-drag') {
-        Keyboard.dismiss();
-      }
-      this.toggleStatusBar(true);
-    } else {
-      this.toggleStatusBar(this.currentOpenValue);
-    }
-  })), onChange(this.gestureState, cond(eq(this.gestureState, GestureState.ACTIVE), call([], this.handleStartInteraction))), cond(eq(this.gestureState, GestureState.ACTIVE), [cond(this.isSwiping, NOOP, [
-  // We weren't dragging before, set it to true
-  set(this.isSwiping, TRUE),
-  // Also update the drag offset to the last position
-  set(this.offsetX, this.position)]),
-  // Update position with previous offset + gesture distance
-  set(this.position, add(this.offsetX, this.gestureX, this.touchDistanceFromDrawer)),
-  // Stop animations while we're dragging
-  stopClock(this.clock)], [set(this.isSwiping, FALSE), set(this.touchX, 0), this.transitionTo(cond(this.manuallyTriggerSpring, this.isOpen, cond(or(and(greaterThan(abs(this.gestureX), SWIPE_DISTANCE_MINIMUM), greaterThan(abs(this.velocityX), this.swipeVelocityThreshold)), greaterThan(abs(this.gestureX), this.swipeDistanceThreshold)), cond(eq(this.drawerPosition, DIRECTION_LEFT),
-  // If swiped to right, open the drawer, otherwise close it
-  greaterThan(cond(eq(this.velocityX, 0), this.gestureX, this.velocityX), 0),
-  // If swiped to left, open the drawer, otherwise close it
-  lessThan(cond(eq(this.velocityX, 0), this.gestureX, this.velocityX), 0)), this.isOpen)))]), this.position]);
-  translateX = cond(eq(this.drawerPosition, DIRECTION_RIGHT), min(max(multiply(this.drawerWidth, -1), this.dragX), 0), max(min(this.drawerWidth, this.dragX), 0));
-  progress = cond(
-  // Check if the drawer width is available to avoid division by zero
-  eq(this.drawerWidth, 0), 0, abs(divide(this.translateX, this.drawerWidth)));
-  handleGestureEvent = event([{
-    nativeEvent: {
-      x: this.touchX,
-      translationX: this.gestureX,
-      velocityX: this.velocityX
-    }
-  }]);
-  handleGestureStateChange = event([{
-    nativeEvent: {
-      state: s => set(this.gestureState, s)
-    }
-  }]);
-  handleContainerLayout = e => this.containerWidth.setValue(e.nativeEvent.layout.width);
-  handleDrawerLayout = e => {
-    this.drawerWidth.setValue(e.nativeEvent.layout.width);
-    this.toggleDrawer(this.props.open);
-
-    // Until layout is available, drawer is hidden with opacity: 0 by default
-    // Show it in the next frame when layout is available
-    // If we don't delay it until the next frame, there's a visible flicker
-    requestAnimationFrame(() => requestAnimationFrame(() => this.drawerOpacity.setValue(1)));
-  };
-  toggleDrawer = open => {
-    if (this.currentOpenValue !== open) {
-      this.nextIsOpen.setValue(open ? TRUE : FALSE);
-
-      // This value will also be set shortly after as changing this.nextIsOpen changes this.isOpen
-      // However, there's a race condition on Android, so we need to set a bit earlier
-      this.currentOpenValue = open;
-    }
-  };
-  toggleStatusBar = hidden => {
-    const {
-      hideStatusBarOnOpen: hideStatusBar,
-      statusBarAnimation
-    } = this.props;
-    if (hideStatusBar && this.isStatusBarHidden !== hidden) {
-      this.isStatusBarHidden = hidden;
-      StatusBar.setHidden(hidden, statusBarAnimation);
-    }
-  };
-  render() {
-    const {
-      open,
-      swipeEnabled,
-      drawerPosition,
-      drawerType,
-      swipeEdgeWidth,
-      drawerStyle,
-      overlayStyle,
-      renderDrawerContent,
-      renderSceneContent,
-      gestureHandlerProps,
-      overlayAccessibilityLabel
-    } = this.props;
-    const isOpen = drawerType === 'permanent' ? true : open;
-    const isRight = drawerPosition === 'right';
-    const contentTranslateX = drawerType === 'front' ? ANIMATED_ZERO : this.translateX;
-    const drawerTranslateX = drawerType === 'back' ? I18nManager.getConstants().isRTL ? multiply(sub(this.containerWidth, this.drawerWidth), isRight ? 1 : -1) : ANIMATED_ZERO : this.translateX;
-    const offset = drawerType === 'back' ? 0 : I18nManager.getConstants().isRTL ? '100%' : multiply(this.drawerWidth, -1);
-
-    // FIXME: Currently hitSlop is broken when on Android when drawer is on right
-    // https://github.com/software-mansion/react-native-gesture-handler/issues/569
-    const hitSlop = isRight ?
-    // Extend hitSlop to the side of the screen when drawer is closed
-    // This lets the user drag the drawer from the side of the screen
-    {
-      right: 0,
-      width: isOpen ? undefined : swipeEdgeWidth
-    } : {
-      left: 0,
-      width: isOpen ? undefined : swipeEdgeWidth
-    };
-    const progress = drawerType === 'permanent' ? ANIMATED_ONE : this.progress;
-    return /*#__PURE__*/React.createElement(DrawerProgressContext.Provider, {
-      value: progress
-    }, /*#__PURE__*/React.createElement(PanGestureHandler, _extends({
-      activeOffsetX: [-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM],
-      failOffsetY: [-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM],
-      onGestureEvent: this.handleGestureEvent,
-      onHandlerStateChange: this.handleGestureStateChange,
-      hitSlop: hitSlop,
-      enabled: drawerType !== 'permanent' && swipeEnabled
-    }, gestureHandlerProps), /*#__PURE__*/React.createElement(Animated.View, {
-      onLayout: this.handleContainerLayout,
-      style: [styles.main, {
-        flexDirection: drawerType === 'permanent' && !isRight ? 'row-reverse' : 'row'
-      }]
-    }, /*#__PURE__*/React.createElement(Animated.View, {
-      style: [styles.content, {
-        transform: drawerType === 'permanent' ?
-        // Reanimated needs the property to be present, but it results in Browser bug
-        // https://bugs.chromium.org/p/chromium/issues/detail?id=20574
-        [] : [{
-          translateX: contentTranslateX
-        }]
-      }]
-    }, /*#__PURE__*/React.createElement(View, {
-      accessibilityElementsHidden: isOpen && drawerType !== 'permanent',
-      importantForAccessibility: isOpen && drawerType !== 'permanent' ? 'no-hide-descendants' : 'auto',
-      style: styles.content
-    }, renderSceneContent()),
-    // Disable overlay if sidebar is permanent
-    drawerType === 'permanent' ? null : /*#__PURE__*/React.createElement(Overlay, {
-      progress: progress,
-      onPress: () => this.toggleDrawer(false),
-      accessibilityLabel: overlayAccessibilityLabel,
-      style: overlayStyle,
-      accessibilityElementsHidden: !isOpen,
-      importantForAccessibility: isOpen ? 'auto' : 'no-hide-descendants'
-    })), /*#__PURE__*/React.createElement(Animated.Code, {
-      // This is needed to make sure that container width updates with `setValue`
-      // Without this, it won't update when not used in styles
-      exec: this.containerWidth
-    }), drawerType === 'permanent' ? null : /*#__PURE__*/React.createElement(Animated.Code, {
-      exec: block([onChange(this.manuallyTriggerSpring, [cond(eq(this.manuallyTriggerSpring, TRUE), [set(this.nextIsOpen, FALSE), call([], () => this.currentOpenValue = false)])])])
-    }), /*#__PURE__*/React.createElement(Animated.View, {
-      removeClippedSubviews: Platform.OS !== 'ios',
-      onLayout: this.handleDrawerLayout,
-      style: [styles.container, {
-        transform: drawerType === 'permanent' ?
-        // Reanimated needs the property to be present, but it results in Browser bug
-        // https://bugs.chromium.org/p/chromium/issues/detail?id=20574
-        [] : [{
-          translateX: drawerTranslateX
-        }],
-        opacity: this.drawerOpacity
-      }, drawerType === 'permanent' ?
-      // Without this, the `left`/`right` values don't get reset
-      isRight ? {
-        right: 0
-      } : {
-        left: 0
-      } : [styles.nonPermanent, isRight ? {
-        right: offset
-      } : {
-        left: offset
-      }, {
-        zIndex: drawerType === 'back' ? -1 : 0
-      }], drawerStyle]
-    }, renderDrawerContent()))));
-  }
-}
-const styles = StyleSheet.create({
-  container: {
-    backgroundColor: 'white',
-    maxWidth: '100%'
-  },
-  nonPermanent: {
-    position: 'absolute',
-    top: 0,
-    bottom: 0,
-    width: DEFAULT_DRAWER_WIDTH
-  },
-  content: {
-    flex: 1
-  },
-  main: {
-    flex: 1,
-    ...Platform.select({
-      // FIXME: We need to hide `overflowX` on Web so the translated content doesn't show offscreen.
-      // But adding `overflowX: 'hidden'` prevents content from collapsing the URL bar.
-      web: null,
-      default: {
-        overflow: 'hidden'
-      }
-    })
-  }
-});
-//# sourceMappingURL=Drawer.js.map
\ No newline at end of file
diff --git a/node_modules/@react-navigation/drawer/lib/module/views/legacy/Drawer.js.map b/node_modules/@react-navigation/drawer/lib/module/views/legacy/Drawer.js.map
deleted file mode 100644
index d87e733..0000000
--- a/node_modules/@react-navigation/drawer/lib/module/views/legacy/Drawer.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"names":["React","I18nManager","InteractionManager","Keyboard","Platform","StatusBar","StyleSheet","View","Animated","DrawerProgressContext","GestureState","PanGestureHandler","Overlay","Clock","Value","onChange","clockRunning","startClock","stopClock","spring","abs","add","and","block","call","cond","divide","eq","event","greaterThan","lessThan","max","min","multiply","neq","or","set","sub","TRUE","FALSE","NOOP","UNSET","DIRECTION_LEFT","DIRECTION_RIGHT","SWIPE_DISTANCE_MINIMUM","DEFAULT_DRAWER_WIDTH","SPRING_CONFIG","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","ANIMATED_ZERO","ANIMATED_ONE","DrawerView","Component","componentDidUpdate","prevProps","open","drawerPosition","drawerType","swipeDistanceThreshold","swipeVelocityThreshold","hideStatusBarOnOpen","hideStatusBar","props","pendingOpenValue","toggleDrawer","undefined","toggleStatusBar","setValue","isDrawerTypeFront","componentWillUnmount","handleEndInteraction","interactionHandle","clearInteractionHandle","handleStartInteraction","createInteractionHandle","getDrawerWidth","drawerStyle","dimensions","width","flatten","endsWith","percentage","Number","replace","isFinite","clock","isOpen","nextIsOpen","isSwiping","initialDrawerWidth","gestureState","UNDETERMINED","touchX","velocityX","gestureX","offsetX","position","containerWidth","drawerWidth","drawerOpacity","touchDistanceFromDrawer","currentOpenValue","isStatusBarHidden","manuallyTriggerSpring","transitionTo","toValue","frameTime","state","time","finished","velocity","value","Boolean","dragX","onOpen","onClose","forceUpdate","keyboardDismissMode","dismiss","ACTIVE","translateX","progress","handleGestureEvent","nativeEvent","x","translationX","handleGestureStateChange","s","handleContainerLayout","e","layout","handleDrawerLayout","requestAnimationFrame","hidden","statusBarAnimation","setHidden","render","swipeEnabled","swipeEdgeWidth","overlayStyle","renderDrawerContent","renderSceneContent","gestureHandlerProps","overlayAccessibilityLabel","isRight","contentTranslateX","drawerTranslateX","getConstants","isRTL","offset","hitSlop","right","left","styles","main","flexDirection","content","transform","OS","container","opacity","nonPermanent","zIndex","create","backgroundColor","maxWidth","top","bottom","flex","select","web","default","overflow"],"sourceRoot":"../../../../src","sources":["views/legacy/Drawer.tsx"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@react-navigation/drawer/lib/module/views/legacy/Overlay.js b/node_modules/@react-navigation/drawer/lib/module/views/legacy/Overlay.js
deleted file mode 100644
index 27c9adc..0000000
--- a/node_modules/@react-navigation/drawer/lib/module/views/legacy/Overlay.js
+++ /dev/null
@@ -1,64 +0,0 @@
-function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
-import * as React from 'react';
-import { Platform, Pressable, StyleSheet } from 'react-native';
-import Animated from 'react-native-reanimated';
-const {
-  // @ts-expect-error: this is to support reanimated 1
-  interpolate: interpolateDeprecated,
-  interpolateNode,
-  cond,
-  greaterThan
-} = Animated;
-const interpolate = interpolateNode ?? interpolateDeprecated;
-const PROGRESS_EPSILON = 0.05;
-const Overlay = /*#__PURE__*/React.forwardRef(function Overlay(_ref, ref) {
-  let {
-    progress,
-    onPress,
-    style,
-    accessibilityLabel = 'Close drawer',
-    ...props
-  } = _ref;
-  const animatedStyle = {
-    opacity: interpolate(progress, {
-      // Default input range is [PROGRESS_EPSILON, 1]
-      // On Windows, the output value is 1 when input value is out of range for some reason
-      // The default value 0 will be interpolated to 1 in this case, which is not what we want.
-      // Therefore changing input range on Windows to [0,1] instead.
-      inputRange: Platform.OS === 'windows' || Platform.OS === 'macos' ? [0, 1] : [PROGRESS_EPSILON, 1],
-      outputRange: [0, 1]
-    }),
-    // We don't want the user to be able to press through the overlay when drawer is open
-    // One approach is to adjust the pointerEvents based on the progress
-    // But we can also send the overlay behind the screen, which works, and is much less code
-    zIndex: cond(greaterThan(progress, PROGRESS_EPSILON), 0, -1)
-  };
-  return /*#__PURE__*/React.createElement(Animated.View, _extends({}, props, {
-    ref: ref,
-    style: [styles.overlay, overlayStyle, animatedStyle, style]
-  }), /*#__PURE__*/React.createElement(Pressable, {
-    onPress: onPress,
-    style: styles.pressable,
-    accessibilityRole: "button",
-    accessibilityLabel: accessibilityLabel
-  }));
-});
-const overlayStyle = Platform.select({
-  web: {
-    // Disable touch highlight on mobile Safari.
-    // WebkitTapHighlightColor must be used outside of StyleSheet.create because react-native-web will omit the property.
-    WebkitTapHighlightColor: 'transparent'
-  },
-  default: {}
-});
-const styles = StyleSheet.create({
-  overlay: {
-    ...StyleSheet.absoluteFillObject,
-    backgroundColor: 'rgba(0, 0, 0, 0.5)'
-  },
-  pressable: {
-    flex: 1
-  }
-});
-export default Overlay;
-//# sourceMappingURL=Overlay.js.map
\ No newline at end of file
diff --git a/node_modules/@react-navigation/drawer/lib/module/views/legacy/Overlay.js.map b/node_modules/@react-navigation/drawer/lib/module/views/legacy/Overlay.js.map
deleted file mode 100644
index 44935fc..0000000
--- a/node_modules/@react-navigation/drawer/lib/module/views/legacy/Overlay.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"names":["React","Platform","Pressable","StyleSheet","Animated","interpolate","interpolateDeprecated","interpolateNode","cond","greaterThan","PROGRESS_EPSILON","Overlay","forwardRef","ref","progress","onPress","style","accessibilityLabel","props","animatedStyle","opacity","inputRange","OS","outputRange","zIndex","styles","overlay","overlayStyle","pressable","select","web","WebkitTapHighlightColor","default","create","absoluteFillObject","backgroundColor","flex"],"sourceRoot":"../../../../src","sources":["views/legacy/Overlay.tsx"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,cAAc;AAC9D,OAAOC,QAAQ,MAAM,yBAAyB;AAE9C,MAAM;EACJ;EACAC,WAAW,EAAEC,qBAAqB;EAClCC,eAAe;EACfC,IAAI;EACJC;AACF,CAAC,GAAGL,QAAQ;AAEZ,MAAMC,WAAmC,GACvCE,eAAe,IAAID,qBAAqB;AAE1C,MAAMI,gBAAgB,GAAG,IAAI;AAQ7B,MAAMC,OAAO,gBAAGX,KAAK,CAACY,UAAU,CAAC,SAASD,OAAO,OAQ/CE,GAA6B,EAC7B;EAAA,IARA;IACEC,QAAQ;IACRC,OAAO;IACPC,KAAK;IACLC,kBAAkB,GAAG,cAAc;IACnC,GAAGC;EACE,CAAC;EAGR,MAAMC,aAAa,GAAG;IACpBC,OAAO,EAAEf,WAAW,CAACS,QAAQ,EAAE;MAC7B;MACA;MACA;MACA;MACAO,UAAU,EACRpB,QAAQ,CAACqB,EAAE,KAAK,SAAS,IAAIrB,QAAQ,CAACqB,EAAE,KAAK,OAAO,GAChD,CAAC,CAAC,EAAE,CAAC,CAAC,GACN,CAACZ,gBAAgB,EAAE,CAAC,CAAC;MAC3Ba,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC;IACpB,CAAC,CAAC;IACF;IACA;IACA;IACAC,MAAM,EAAEhB,IAAI,CAACC,WAAW,CAACK,QAAQ,EAAEJ,gBAAgB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC7D,CAAC;EAED,oBACE,oBAAC,QAAQ,CAAC,IAAI,eACRQ,KAAK;IACT,GAAG,EAAEL,GAAI;IACT,KAAK,EAAE,CAACY,MAAM,CAACC,OAAO,EAAEC,YAAY,EAAER,aAAa,EAAEH,KAAK;EAAE,iBAE5D,oBAAC,SAAS;IACR,OAAO,EAAED,OAAQ;IACjB,KAAK,EAAEU,MAAM,CAACG,SAAU;IACxB,iBAAiB,EAAC,QAAQ;IAC1B,kBAAkB,EAAEX;EAAmB,EACvC,CACY;AAEpB,CAAC,CAAC;AAEF,MAAMU,YAAY,GAAG1B,QAAQ,CAAC4B,MAAM,CAAyB;EAC3DC,GAAG,EAAE;IACH;IACA;IACAC,uBAAuB,EAAE;EAC3B,CAAC;EACDC,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC;AAEF,MAAMP,MAAM,GAAGtB,UAAU,CAAC8B,MAAM,CAAC;EAC/BP,OAAO,EAAE;IACP,GAAGvB,UAAU,CAAC+B,kBAAkB;IAChCC,eAAe,EAAE;EACnB,CAAC;EACDP,SAAS,EAAE;IACTQ,IAAI,EAAE;EACR;AACF,CAAC,CAAC;AAEF,eAAezB,OAAO"}
\ No newline at end of file
