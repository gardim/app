{"version":3,"sources":["src/components/PreferencesContext.tsx","src/storage/index.ts","src/screens/Home.tsx","src/components/Header.tsx","src/screens/IdentificationMethod.tsx","src/components/DeletableImage.tsx","src/api/plant_id/index.ts","src/screens/ImageMethod.tsx","src/api/trefle/index.ts","src/screens/TextMethod.tsx","src/components/PlantOptionsList.tsx","src/context/index.tsx","src/utils/defaults.ts","src/utils/mapper.ts","src/screens/Result.tsx","src/screens/Name.tsx","src/screens/Code.tsx","src/navigation/RootStackNavigator.tsx","src/components/DrawerContent.tsx","src/navigation/RootNavigation.tsx","src/utils/colors.ts","src/utils/theme.tsx","src/App.tsx"],"names":["PreferencesContext","React","createContext","toggleTheme","isThemeDark","storeData","value","jsonValue","JSON","stringify","AsyncStorage","setItem","id","e","Error","getAllKeys","filter","it","startsWith","getMultiple","keys","values","multiGet","key","getItem","parse","removeItem","Home","navigation","route","useState","params","success","visibleAlert","setVisiblAlert","visible","setVisible","plants","setPlants","useEffect","loadPlants","result","View","style","styles","container","length","flex","justifyContent","map","plant","Item","title","name","titleStyle","fontSize","fontWeight","description","scientific_name","onPress","console","log","left","Text","label","size","FAB","icon","navigate","compressedFabStyle","variant","onLongPress","s","testID","row","fabStyle","Snackbar","action","onDismiss","marginBottom","StyleSheet","create","flexGrow","padding","flexDirection","alignItems","margin","position","right","bottom","MORE_ICON","Platform","OS","Header","back","options","theme","useTheme","menuVisible","setMenuVisible","Appbar","colors","primary","surface","BackAction","goBack","Content","Menu","anchor","Action","openDrawer","IdentificationMethod","textAlign","paddingHorizontal","fabVariant","DeletableImage","image","remove","Image","source","uri","top","color","containerStyle","badgeContainer","badgeStyle","badge","backgroundColor","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","alignSelf","error","images","Constants","manifest","extra","plantIdApiKey","plantIdApiUrl","base64Images","Promise","all","response","fetch","blob","resolve","reject","reader","FileReader","onerror","onload","readAsDataURL","method","headers","body","modifiers","plant_details","json","ImageMethod","setImages","buttonOnHold","setButtonOnHold","errorMessage","setErrorMessage","pickImage","mediaTypes","ImagePicker","Images","allowsEditing","canceled","newImage","assets","assetId","toString","some","removeImage","newImages","index","findIndex","splice","searchPlants","identifyPlant","is_plant","message","Dimensions","get","alignContent","pagingEnabled","snapEnabled","mode","modeConfig","snapDirection","loop","data","renderItem","item","disabled","query","gardimApiUrl","TextMethod","searchQuery","setSearchQuery","chips","setChips","Searchbar","placeholder","onChangeText","endsWith","queryString","trim","includes","prevChips","Set","addChip","HelperText","type","chipsContainer","chip","Chip","onClose","chipToDelete","currentChip","marginVertical","flexWrap","marginTop","PlantOptionsList","info","onOptionSelect","selectedId","setSelectedId","option","Card","optionId","card","probability","toFixed","PlantContext","PlantProvider","children","setPlant","updatePlant","updatePlantName","updatePlantCode","code","contextValue","useMemo","Provider","PH_MINIMUM","PH_MAXIMUM","LIGHT","ATMOSPHERIC_HUMIDITY","TEMPERATURE_MINIMUM","TEMPERATURE_MAXIMUM","HUMIDITY_MINIMUM","HUMIDITY_MAXIMUM","CELL_COUNT","mapToPlant","isTrefle","undefined","plantDetails","common_name","edible_parts","ph_maximum","ph_minimum","light","atmospheric_humidity","minimum_temperature","maximum_temperature","minimum_humidity","maximum_humidity","trefleData","edible_part","growth","deg_c","soil_humidity","plantIdData","plant_name","watering","min","max","Result","selectedOption","setSelectedOption","plantResult","suggestions","plantContext","useContext","handleSelect","handleContinue","getPlant","alert","plantSelected","find","ScrollView","maxHeight","Name","text","setText","handleSubmit","TextInput","onSubmitEditing","Code","setValue","ref","useBlurOnFulfill","cellCount","useClearByFocusCell","props","getCellOnLayoutHandler","rootStyle","codeFieldRoot","keyboardType","textContentType","onEndEditing","renderCell","symbol","isFocused","themedStyles","cell","focusCell","onLayout","display","minWidth","borderColor","secondaryContainer","maxWidth","marginHorizontal","lineHeight","borderWidth","outline","Stack","createStackNavigator","RootStackNavigator","Navigator","initialRouteName","screenOptions","header","Screen","component","DrawerContent","insets","useSafeAreaInsets","Section","paddingTop","background","TouchableRipple","preference","pointerEvents","Switch","drawerContent","paddingVertical","v3Preference","Drawer","createDrawerNavigator","RootNavigation","NavigationContainer","headerShown","drawerPosition","headerTintColor","onBackground","lightGreenColors","onPrimary","primaryContainer","onPrimaryContainer","secondary","onSecondary","onSecondaryContainer","tertiary","onTertiary","tertiaryContainer","onTertiaryContainer","onError","errorContainer","onErrorContainer","onSurface","surfaceVariant","onSurfaceVariant","outlineVariant","shadow","scrim","inverseSurface","inverseOnSurface","inversePrimary","level0","level1","level2","level3","level4","level5","surfaceDisabled","onSurfaceDisabled","backdrop","darkGreenColors","adaptNavigationTheme","reactNavigationLight","NavigationDefaultTheme","reactNavigationDark","NavigationDarkTheme","LightTheme","DarkTheme","CombinedDefaultTheme","MD3LightTheme","CombinedDarkTheme","MD3DarkTheme","registerRootComponent","setIsThemeDark","useCallback","preferences","StatusBar","barStyle"],"mappings":"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","file":"static/js/app.9dccb07b.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\nimport React from 'react';\n\nexport const PreferencesContext = React.createContext({\n\ttoggleTheme: () => {},\n\tisThemeDark: false,\n});\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Plant } from '../types/index';\n\nexport const storeData = async (value: Plant) => {\n\ttry {\n\t\tconst jsonValue = JSON.stringify(value);\n\t\tawait AsyncStorage.setItem(`@${value.id}`, jsonValue);\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao salvar o objeto');\n\t}\n};\n\nexport const getAllKeys = async () => {\n\ttry {\n\t\treturn (await AsyncStorage.getAllKeys()).filter((it) => it.startsWith('@'));\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao pegar as chaves dos objetos');\n\t}\n};\n\nexport const getMultiple = async (keys: readonly string[]) => {\n\tlet values;\n\ttry {\n\t\tvalues = await AsyncStorage.multiGet(keys);\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao pegar os objetos');\n\t}\n\treturn values;\n};\n\nexport const getOne = async (key: string) => {\n\ttry {\n\t\tconst jsonValue = await AsyncStorage.getItem(key);\n\t\treturn jsonValue != null ? (JSON.parse(jsonValue) as Plant) : null;\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao pegar o objeto');\n\t}\n};\n\nexport const removeValue = async (key: string) => {\n\ttry {\n\t\tawait AsyncStorage.removeItem(key);\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao remover o objeto');\n\t}\n};\n","import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Text, FAB, List, Avatar, Snackbar } from 'react-native-paper';\nimport { HomeProps, Plant } from '../types/index';\nimport { getAllKeys } from '../storage';\nimport { getMultiple } from '../storage/index';\n\nexport function Home({ navigation, route }: HomeProps) {\n\tconst [visibleAlert, setVisiblAlert] = React.useState(route.params?.success ? true : false);\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\n\tconst onDismissSnackBar = () => setVisiblAlert(false);\n\n\tconst [plants, setPlants] = useState([]);\n\n\tuseEffect(() => {\n\t\tsetVisiblAlert(route.params?.success ? true : false);\n\t}, [route.params?.success]);\n\n\tuseEffect(() => {\n\t\tconst loadPlants = async () => {\n\t\t\tconst keys = await getAllKeys();\n\t\t\tconst result = await getMultiple(keys);\n\t\t\tsetPlants(result);\n\t\t};\n\n\t\tloadPlants();\n\t}, [visibleAlert]);\n\n\treturn (\n\t\t<>\n\t\t\t<View style={styles.container}>\n\t\t\t\t{plants.length > 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<View style={{ flex: 1, justifyContent: 'flex-start' }}>\n\t\t\t\t\t\t\t{plants.map((it: [string, string]) => {\n\t\t\t\t\t\t\t\tconst plant = JSON.parse(it[1]) as Plant;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<List.Item\n\t\t\t\t\t\t\t\t\t\tkey={plant.id}\n\t\t\t\t\t\t\t\t\t\ttitle={plant.name}\n\t\t\t\t\t\t\t\t\t\ttitleStyle={{ fontSize: 18, fontWeight: 'bold' }}\n\t\t\t\t\t\t\t\t\t\tdescription={plant.scientific_name}\n\t\t\t\t\t\t\t\t\t\tonPress={() => console.log('click')}\n\t\t\t\t\t\t\t\t\t\tleft={() => <Avatar.Text label={plant.name[0]} size={40} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t<FAB\n\t\t\t\t\t\t\ticon=\"plus\"\n\t\t\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\t\t\tonPress={() => navigation.navigate('IdentificationMethod')}\n\t\t\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\t\t\ttestID=\"Add Plant\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<View style={styles.row}>\n\t\t\t\t\t\t<FAB\n\t\t\t\t\t\t\ticon=\"plus\"\n\t\t\t\t\t\t\tonPress={() => navigation.navigate('IdentificationMethod')}\n\t\t\t\t\t\t\tvisible\n\t\t\t\t\t\t\tstyle={[styles.fabStyle]}\n\t\t\t\t\t\t\ttestID=\"Add Plant\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Text variant=\"titleSmall\">Adicione sua primeira planta</Text>\n\t\t\t\t\t</View>\n\t\t\t\t)}\n\t\t\t</View>\n\t\t\t<Snackbar\n\t\t\t\tvisible={visibleAlert}\n\t\t\t\taction={{\n\t\t\t\t\tlabel: 'OK',\n\t\t\t\t}}\n\t\t\t\tonDismiss={onDismissSnackBar}\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginBottom: 30,\n\t\t\t\t}}>\n\t\t\t\tSua planta foi salva com sucesso!\n\t\t\t</Snackbar>\n\t\t</>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t\tpadding: 8,\n\t\tjustifyContent: 'center',\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tmarginBottom: 8,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tpadding: 10,\n\t},\n\tfabStyle: {\n\t\tmargin: 20,\n\t},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tright: 0,\n\t\tbottom: 0,\n\t\tmargin: 40,\n\t},\n});\n","import { DrawerNavigationProp } from '@react-navigation/drawer';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport React from 'react';\nimport { Platform } from 'react-native';\nimport { useTheme, Appbar, Menu } from 'react-native-paper';\n\nexport type RootStackParamList = {\n\tApp: undefined;\n};\n\nconst MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\n\nexport const Header = ({ navigation, back, options }: StackHeaderProps) => {\n\tconst theme = useTheme();\n\tconst [menuVisible, setMenuVisible] = React.useState(false);\n\n\treturn (\n\t\t<Appbar.Header\n\t\t\ttheme={{\n\t\t\t\tcolors: {\n\t\t\t\t\tprimary: theme?.colors.surface,\n\t\t\t\t},\n\t\t\t}}>\n\t\t\t{back ? <Appbar.BackAction onPress={navigation.goBack} testID=\"back icon\" /> : null}\n\t\t\t<Appbar.Content title={options.title} />\n\t\t\t<Menu\n\t\t\t\tvisible={menuVisible}\n\t\t\t\tonDismiss={() => setMenuVisible(false)}\n\t\t\t\tanchor={\n\t\t\t\t\t<Appbar.Action\n\t\t\t\t\t\ttestID=\"Appbar Menu\"\n\t\t\t\t\t\ticon={MORE_ICON}\n\t\t\t\t\t\tonPress={() =>\n\t\t\t\t\t\t\t(navigation as unknown as DrawerNavigationProp<{ any }>).openDrawer()\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t}>\n\t\t\t\t<></>\n\t\t\t</Menu>\n\t\t</Appbar.Header>\n\t);\n};\n","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Text, FAB } from 'react-native-paper';\nimport { IdentificationMethodProps } from '../types/index';\n\nexport default function IdentificationMethod({ navigation }: IdentificationMethodProps) {\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<View style={styles.row}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\t{' '}\n\t\t\t\t\tSelecione o método que deseja seguir para identificar sua plantinha!\n\t\t\t\t</Text>\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"camera\"\n\t\t\t\t\tlabel=\"Identificar por imagem\"\n\t\t\t\t\tonPress={() => navigation.navigate('ImageMethod')}\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tvisible\n\t\t\t\t/>\n\t\t\t\t<Text variant=\"titleMedium\"> ou </Text>\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"clipboard-edit-outline\"\n\t\t\t\t\tlabel=\"Identificar por texto\"\n\t\t\t\t\tonPress={() => navigation.navigate('TextMethod')}\n\t\t\t\t\tvisible\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 0.9,\n\t\tpaddingHorizontal: 8,\n\t\tjustifyContent: 'center',\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tmarginBottom: 8,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'space-evenly',\n\t\talignItems: 'center',\n\t},\n\tfabVariant: {},\n});\n","import React from 'react';\nimport { View, StyleSheet, Image } from 'react-native';\nimport { ImageType } from '../types/index';\nimport { Badge, Icon } from 'react-native-elements';\nimport { useTheme } from 'react-native-paper';\n\ntype DeletableImageType = {\n\timage: ImageType;\n\tremove: (id: string) => void;\n};\n\nexport function DeletableImage({ image, remove }: DeletableImageType) {\n\tconst theme = useTheme();\n\n\treturn (\n\t\t<View style={styles(theme).container}>\n\t\t\t<Image source={{ uri: image.uri }} style={styles(theme).image} />\n\t\t\t<View style={{ position: 'absolute', top: 0, right: 0 }}>\n\t\t\t\t<Badge\n\t\t\t\t\tvalue={<Icon name=\"close\" size={18} color=\"white\" testID=\"close badge\" />}\n\t\t\t\t\tcontainerStyle={styles(theme).badgeContainer}\n\t\t\t\t\tbadgeStyle={styles(theme).badge}\n\t\t\t\t\tonPress={() => remove(image.id)}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</View>\n\t);\n}\n\nconst styles = (theme) =>\n\tStyleSheet.create({\n\t\tcontainer: {\n\t\t\tbackgroundColor: '#fff',\n\t\t\tborderRadius: 10,\n\t\t\tshadowColor: '#000',\n\t\t\tshadowOffset: { width: 0, height: 2 },\n\t\t\tshadowOpacity: 0.25,\n\t\t\tshadowRadius: 3.84,\n\t\t\televation: 5,\n\t\t\twidth: '70%',\n\t\t\talignSelf: 'center',\n\t\t\theight: 200,\n\t\t\tmargin: 20,\n\t\t},\n\t\timage: {\n\t\t\twidth: '100%',\n\t\t\theight: 200,\n\t\t\tborderRadius: 10,\n\t\t},\n\t\tbadgeContainer: {\n\t\t\tposition: 'relative',\n\t\t\ttop: -10,\n\t\t\tright: -10,\n\t\t\tbackgroundColor: 'transparent',\n\t\t},\n\t\tbadge: {\n\t\t\theight: 30,\n\t\t\twidth: 30,\n\t\t\tbackgroundColor: theme.colors.error,\n\t\t},\n\t});\n","import { ImageType } from '../../types';\nimport { PlantIDResponse } from './types';\nimport Constants from 'expo-constants';\n\nexport async function identifyPlant(images: ImageType[]): Promise<PlantIDResponse> {\n\tconst { plantIdApiKey, plantIdApiUrl } = Constants.manifest.extra;\n\n\tconst base64Images = await Promise.all(\n\t\timages.map(async (image: ImageType) => {\n\t\t\tconst response = await fetch(image.uri);\n\t\t\tconst blob = await response.blob();\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tconst reader = new FileReader();\n\t\t\t\treader.onerror = () => reject('Failed to convert image to base64');\n\t\t\t\treader.onload = () => resolve(reader.result as string);\n\t\t\t\treader.readAsDataURL(blob);\n\t\t\t});\n\t\t})\n\t);\n\n\tconst response = await fetch(`${plantIdApiUrl}/identify`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Api-Key': plantIdApiKey,\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\timages: base64Images,\n\t\t\tmodifiers: ['similar_images'],\n\t\t\tplant_details: [\n\t\t\t\t'common_names',\n\t\t\t\t'wiki_description',\n\t\t\t\t'edible_parts',\n\t\t\t\t'propagation_methods',\n\t\t\t\t'name_authority',\n\t\t\t\t'taxonomy',\n\t\t\t\t'watering',\n\t\t\t],\n\t\t}),\n\t});\n\n\tconst result = await response.json();\n\treturn result;\n}\n","import * as ImagePicker from 'expo-image-picker';\nimport React, { useState } from 'react';\nimport { StyleSheet, View, Dimensions } from 'react-native';\nimport { ImageMethodProps, ImageType } from '../types/index';\nimport { DeletableImage } from '../components/DeletableImage';\nimport { FAB, Text, Snackbar } from 'react-native-paper';\nimport Carousel from 'react-native-reanimated-carousel';\nimport { identifyPlant } from '../api/plant_id';\n\nexport function ImageMethod({ navigation }: ImageMethodProps) {\n\tconst [images, setImages] = useState<ImageType[]>([]);\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\tconst [buttonOnHold, setButtonOnHold] = React.useState<boolean>(false);\n\tconst [visibleAlert, setVisiblAlert] = React.useState(false);\n\tconst [errorMessage, setErrorMessage] = React.useState('');\n\n\tconst onDismissSnackBar = () => setVisiblAlert(false);\n\n\tconst pickImage = async (method) => {\n\t\tconst options = {\n\t\t\tmediaTypes: ImagePicker.MediaTypeOptions.Images,\n\t\t\tallowsEditing: false,\n\t\t};\n\n\t\tlet result: ImagePicker.ImagePickerResult = null;\n\n\t\tif (method == 'camera') {\n\t\t\tresult = await ImagePicker.launchCameraAsync(options);\n\t\t} else {\n\t\t\tresult = await ImagePicker.launchImageLibraryAsync(options);\n\t\t}\n\n\t\tif (!result.canceled) {\n\t\t\tconst newImage = {\n\t\t\t\tid: result.assets[0].assetId ? result.assets[0].assetId : images.length.toString(),\n\t\t\t\turi: result.assets[0].uri,\n\t\t\t};\n\t\t\tif (!images.some((image) => image.id === newImage.id)) {\n\t\t\t\tsetImages([...images, newImage]);\n\t\t\t}\n\t\t} else {\n\t\t\tsetErrorMessage('Você não adicionou nenhuma imagem.');\n\t\t\tsetVisiblAlert(true);\n\t\t}\n\t};\n\tconst removeImage = (id: string) => {\n\t\tconst newImages = [...images];\n\t\tconst index = newImages.findIndex((image) => image.id === id);\n\t\tif (index !== -1) {\n\t\t\tnewImages.splice(index, 1);\n\t\t\tsetImages(newImages);\n\t\t}\n\t};\n\n\tconst searchPlants = async () => {\n\t\tif (!buttonOnHold) {\n\t\t\tsetButtonOnHold(true);\n\t\t\ttry {\n\t\t\t\tconst result = await identifyPlant(images);\n\t\t\t\tif (result.is_plant) {\n\t\t\t\t\tnavigation.navigate('Result', result);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Nenhuma planta foi encontrada');\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tsetErrorMessage(error.message);\n\t\t\t\tsetVisiblAlert(true);\n\t\t\t} finally {\n\t\t\t\tsetButtonOnHold(false);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst width = Dimensions.get('window').width;\n\n\treturn (\n\t\t<>\n\t\t\t<View style={styles.container}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\tAdicione algumas fotos para podermos identificar sua planta!\n\t\t\t\t</Text>\n\t\t\t\t<View style={styles.row}>\n\t\t\t\t\t<FAB\n\t\t\t\t\t\ticon=\"camera\"\n\t\t\t\t\t\tlabel=\"Tirar foto\"\n\t\t\t\t\t\tonPress={() => pickImage('camera')}\n\t\t\t\t\t\tvisible\n\t\t\t\t\t\tstyle={[styles.fabStyle]}\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\ttestID=\"Tirar foto\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FAB\n\t\t\t\t\t\ticon=\"image\"\n\t\t\t\t\t\tlabel=\"Adicionar da galeria\"\n\t\t\t\t\t\tonPress={() => pickImage('gallery')}\n\t\t\t\t\t\tvisible\n\t\t\t\t\t\tstyle={[styles.fabStyle]}\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\ttestID=\"Adicionar da galeria\"\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t\t{images.length > 0 && (\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\t\talignContent: 'center',\n\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<Carousel\n\t\t\t\t\t\t\tpagingEnabled={true}\n\t\t\t\t\t\t\tsnapEnabled={true}\n\t\t\t\t\t\t\tmode={'horizontal-stack'}\n\t\t\t\t\t\t\tmodeConfig={{\n\t\t\t\t\t\t\t\tsnapDirection: 'left',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tloop={true}\n\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\tdata={images}\n\t\t\t\t\t\t\trenderItem={({ item }) => <DeletableImage image={item} remove={removeImage} />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FAB\n\t\t\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\t\t\tonPress={() => searchPlants()}\n\t\t\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\t\t\tdisabled={buttonOnHold}\n\t\t\t\t\t\t\ttestID=\"Method Continue\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t)}\n\t\t\t</View>\n\t\t\t<Snackbar\n\t\t\t\tvisible={visibleAlert}\n\t\t\t\taction={{\n\t\t\t\t\tlabel: 'OK',\n\t\t\t\t}}\n\t\t\t\tonDismiss={onDismissSnackBar}\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginBottom: 30,\n\t\t\t\t}}>\n\t\t\t\t{errorMessage}\n\t\t\t</Snackbar>\n\t\t</>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t\tpadding: 40,\n\t\tjustifyContent: 'center',\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'space-evenly',\n\t},\n\tfabStyle: {},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tright: 0,\n\t\tbottom: 0,\n\t},\n});\n","import Constants from 'expo-constants';\nimport { TreflePlantSearchResponse, TrefleSpeciesResponse } from './types';\n\nexport async function identifyPlant(query: string[]): Promise<TreflePlantSearchResponse> {\n\tconst { gardimApiUrl } = Constants.manifest.extra;\n\tconst response = await fetch(`${gardimApiUrl}/.netlify/functions/api/trefle`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(query),\n\t});\n\n\tconst result = await response.json();\n\treturn result;\n}\n\nexport async function getPlant(id: number): Promise<TrefleSpeciesResponse> {\n\tconst { gardimApiUrl } = Constants.manifest.extra;\n\tconst response = await fetch(`${gardimApiUrl}/.netlify/functions/api/trefle?id=${id}`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t});\n\n\tconst result = await response.json();\n\treturn result;\n}\n","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Text, Searchbar, Chip, FAB, HelperText, Snackbar } from 'react-native-paper';\nimport { TextMethodProps } from '../types/index';\nimport { identifyPlant } from '../api/trefle';\n\nexport function TextMethod({ navigation }: TextMethodProps) {\n\tconst [searchQuery, setSearchQuery] = React.useState('');\n\tconst [chips, setChips] = React.useState([]);\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\tconst [buttonOnHold, setButtonOnHold] = React.useState<boolean>(false);\n\tconst [visibleAlert, setVisiblAlert] = React.useState(false);\n\tconst [errorMessage, setErrorMessage] = React.useState('');\n\n\tconst addChip = () => {\n\t\tconst queryString = searchQuery.trim();\n\n\t\tif (!chips.includes(queryString) && queryString) {\n\t\t\tsetChips((prevChips) => [...new Set([...prevChips, queryString])]);\n\t\t}\n\t\tsetSearchQuery('');\n\t};\n\n\tconst onDismissSnackBar = () => setVisiblAlert(false);\n\n\tconst removeChip = (chipToDelete) => {\n\t\tsetChips((prevChips) => prevChips.filter((currentChip) => currentChip !== chipToDelete));\n\t};\n\n\tconst onChangeSearch = (query) => {\n\t\tsetSearchQuery(query);\n\t\tif (query.endsWith(' ')) {\n\t\t\taddChip();\n\t\t}\n\t};\n\n\tconst searchPlants = async () => {\n\t\tif (!buttonOnHold) {\n\t\t\tsetButtonOnHold(true);\n\t\t\ttry {\n\t\t\t\tconst result = await identifyPlant(chips);\n\t\t\t\tif (result.data.length) {\n\t\t\t\t\tnavigation.navigate('Result', result);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Nenhuma planta foi encontrada');\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tsetErrorMessage(error.message);\n\t\t\t\tsetVisiblAlert(true);\n\t\t\t} finally {\n\t\t\t\tsetButtonOnHold(false);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<View style={styles.container}>\n\t\t\t\t<View style={styles.row}>\n\t\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\t\tDigite algumas palavras-chave que nos ajude a identificar sua planta!\n\t\t\t\t\t</Text>\n\n\t\t\t\t\t<Searchbar\n\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\tvalue={searchQuery}\n\t\t\t\t\t\tonChangeText={onChangeSearch}\n\t\t\t\t\t\tstyle={styles.fabVariant}\n\t\t\t\t\t/>\n\t\t\t\t\t<HelperText type=\"info\" visible>\n\t\t\t\t\t\tPressione espaço para dividir as palavras!\n\t\t\t\t\t</HelperText>\n\t\t\t\t\t<View style={styles.chipsContainer}>\n\t\t\t\t\t\t{chips.map((chip) => (\n\t\t\t\t\t\t\t<Chip key={chip} onClose={() => removeChip(chip)} style={styles.chip}>\n\t\t\t\t\t\t\t\t{chip}\n\t\t\t\t\t\t\t</Chip>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.row}>\n\t\t\t\t\t{chips.length > 0 && (\n\t\t\t\t\t\t<FAB\n\t\t\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\t\t\tonPress={() => searchPlants()}\n\t\t\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\t\t\tdisabled={buttonOnHold}\n\t\t\t\t\t\t\ttestID=\"Method Continue\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t\t<Snackbar\n\t\t\t\tvisible={visibleAlert}\n\t\t\t\taction={{\n\t\t\t\t\tlabel: 'OK',\n\t\t\t\t}}\n\t\t\t\tonDismiss={onDismissSnackBar}\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginBottom: 30,\n\t\t\t\t}}>\n\t\t\t\t{errorMessage}\n\t\t\t</Snackbar>\n\t\t</>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t\tpadding: 40,\n\t\tjustifyContent: 'space-around',\n\t},\n\trow: {\n\t\tflex: 1,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t},\n\tfabVariant: {\n\t\tmarginVertical: 20,\n\t},\n\tchipsContainer: {\n\t\tflexDirection: 'row',\n\t\tflexWrap: 'wrap',\n\t\tmarginTop: 8,\n\t\tjustifyContent: 'flex-start',\n\t},\n\tchip: {\n\t\tmargin: 4,\n\t},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tright: 0,\n\t\tbottom: 0,\n\t},\n});\n","import React, { useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, Text } from 'react-native-paper';\n\ntype PlantOptionsListProps = {\n\tinfo: {\n\t\tid: number;\n\t\tname: string;\n\t\tprobability: number | null;\n\t}[];\n\tonOptionSelect: (id: string) => void;\n};\n\nexport const PlantOptionsList = ({ info, onOptionSelect }: PlantOptionsListProps) => {\n\tconst [selectedId, setSelectedId] = useState(null);\n\n\tconst handleOptionSelect = (optionId) => {\n\t\tonOptionSelect(optionId);\n\t\tif (selectedId == optionId) {\n\t\t\tsetSelectedId(null);\n\t\t} else {\n\t\t\tsetSelectedId(optionId);\n\t\t}\n\t};\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t{info.map((option) => (\n\t\t\t\t<Card\n\t\t\t\t\tonPress={() => handleOptionSelect(option.id)}\n\t\t\t\t\tkey={option.id}\n\t\t\t\t\tstyle={styles.card}\n\t\t\t\t\tmode={selectedId === option.id ? 'contained' : 'elevated'}\n\t\t\t\t\ttestID=\"CardComponent\">\n\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t<Text variant=\"titleMedium\">{option.name}</Text>\n\t\t\t\t\t\t{option.probability ? (\n\t\t\t\t\t\t\t<Text style={styles.probability}>\n\t\t\t\t\t\t\t\tProbabilidade de acerto: {option.probability.toFixed(2)}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</Card.Content>\n\t\t\t\t</Card>\n\t\t\t))}\n\t\t</View>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tpadding: 16,\n\t},\n\tcard: {\n\t\tmarginBottom: 8,\n\t},\n\tprobability: {\n\t\tmarginTop: 4,\n\t\tfontSize: 12,\n\t\tcolor: '#666',\n\t},\n});\n","import React, { createContext, useState, useMemo, ReactNode } from 'react';\nimport { Plant, PlantContextType } from '../types/index';\n\nexport const PlantContext = createContext<PlantContextType | null>(null);\n\ninterface PlantProviderProps {\n\tchildren: ReactNode;\n}\n\nexport const PlantProvider = ({ children }: PlantProviderProps) => {\n\tconst [plant, setPlant] = useState<Plant>(null);\n\n\tconst updatePlant = (plant: Plant) => {\n\t\tsetPlant(plant);\n\t};\n\n\tconst updatePlantName = (name: string) => {\n\t\tsetPlant({\n\t\t\t...plant,\n\t\t\tname: name,\n\t\t});\n\t};\n\n\tconst updatePlantCode = (code: string) => {\n\t\tsetPlant({\n\t\t\t...plant,\n\t\t\tcode: code,\n\t\t});\n\t};\n\n\tconst contextValue = useMemo(() => {\n\t\treturn { plant, updatePlant, updatePlantName, updatePlantCode };\n\t}, [plant, updatePlantName, updatePlantCode]);\n\n\treturn <PlantContext.Provider value={contextValue}>{children}</PlantContext.Provider>;\n};\n","export const PH_MINIMUM = 4;\nexport const PH_MAXIMUM = 5;\n\nexport const LIGHT = 5;\n\nexport const ATMOSPHERIC_HUMIDITY = 5;\n\nexport const TEMPERATURE_MINIMUM = 15;\nexport const TEMPERATURE_MAXIMUM = 27;\n\nexport const HUMIDITY_MINIMUM = 5;\nexport const HUMIDITY_MAXIMUM = 5;\n\nexport const CELL_COUNT = 6;\n","import { TrefleSpeciesResponse } from '../api/trefle/types';\nimport { Suggestion } from '../api/plant_id/types';\nimport { Plant } from '../types/index';\nimport {\n\tPH_MAXIMUM,\n\tPH_MINIMUM,\n\tLIGHT,\n\tATMOSPHERIC_HUMIDITY,\n\tTEMPERATURE_MINIMUM,\n\tTEMPERATURE_MAXIMUM,\n\tHUMIDITY_MINIMUM,\n\tHUMIDITY_MAXIMUM,\n} from './defaults';\n\nexport const mapToPlant = (info: TrefleSpeciesResponse | Suggestion): Plant => {\n\tconst isTrefle = (info as TrefleSpeciesResponse)?.data !== undefined;\n\tconst plantDetails: Plant = {\n\t\tid: null,\n\t\tname: null,\n\t\tcode: null,\n\t\tcommon_name: null,\n\t\tscientific_name: null,\n\t\tedible_parts: null,\n\t\tph_maximum: PH_MAXIMUM,\n\t\tph_minimum: PH_MINIMUM,\n\t\tlight: LIGHT,\n\t\tatmospheric_humidity: ATMOSPHERIC_HUMIDITY,\n\t\tminimum_temperature: TEMPERATURE_MINIMUM,\n\t\tmaximum_temperature: TEMPERATURE_MAXIMUM,\n\t\tminimum_humidity: HUMIDITY_MINIMUM,\n\t\tmaximum_humidity: HUMIDITY_MAXIMUM,\n\t};\n\n\tif (isTrefle) {\n\t\tconst trefleData = (info as TrefleSpeciesResponse).data;\n\t\tplantDetails.id = trefleData.id.toString();\n\t\tplantDetails.common_name = trefleData.common_name ?? plantDetails.common_name;\n\t\tplantDetails.scientific_name = trefleData.scientific_name ?? plantDetails.scientific_name;\n\t\tplantDetails.edible_parts = trefleData.edible_part ?? plantDetails.edible_parts;\n\t\tplantDetails.ph_maximum = trefleData.growth?.ph_maximum ?? plantDetails.ph_maximum;\n\t\tplantDetails.ph_minimum = trefleData.growth?.ph_minimum ?? plantDetails.ph_minimum;\n\t\tplantDetails.light = trefleData.growth?.light ?? plantDetails.light;\n\t\tplantDetails.atmospheric_humidity =\n\t\t\ttrefleData.growth?.atmospheric_humidity ?? plantDetails.atmospheric_humidity;\n\t\tplantDetails.minimum_temperature =\n\t\t\ttrefleData.growth?.minimum_temperature?.deg_c ?? plantDetails.minimum_temperature;\n\t\tplantDetails.maximum_temperature =\n\t\t\ttrefleData.growth?.maximum_temperature?.deg_c ?? plantDetails.maximum_temperature;\n\t\tplantDetails.minimum_humidity = trefleData.growth?.soil_humidity\n\t\t\t? trefleData.growth.soil_humidity - 2\n\t\t\t: plantDetails.minimum_humidity;\n\t\tplantDetails.maximum_humidity = trefleData.growth?.soil_humidity\n\t\t\t? trefleData.growth.soil_humidity + 2\n\t\t\t: plantDetails.maximum_humidity;\n\t} else {\n\t\tconst plantIdData = info as Suggestion;\n\t\tplantDetails.id = plantIdData.plant_name;\n\t\tplantDetails.common_name = plantIdData.plant_name ?? plantDetails.common_name;\n\t\tplantDetails.scientific_name =\n\t\t\tplantIdData.plant_details?.scientific_name ?? plantDetails.scientific_name;\n\t\tplantDetails.edible_parts =\n\t\t\tplantIdData.plant_details?.edible_parts ?? plantDetails.edible_parts;\n\t\tplantDetails.minimum_humidity =\n\t\t\tplantIdData.plant_details?.watering?.min ?? plantDetails.minimum_humidity;\n\t\tplantDetails.maximum_humidity =\n\t\t\tplantIdData.plant_details?.watering?.max ?? plantDetails.maximum_humidity;\n\t}\n\n\treturn plantDetails;\n};\n","import React, { useState, useContext } from 'react';\nimport { View, StyleSheet, ScrollView, Dimensions, Platform } from 'react-native';\nimport { PlantOptionsList } from '../components/PlantOptionsList';\nimport { ResultProps } from '../types/index';\nimport { Text, FAB } from 'react-native-paper';\nimport { PlantIDResponse } from '../api/plant_id/types';\nimport { TreflePlantSearchResponse } from '../api/trefle/types';\nimport { getPlant } from '../api/trefle';\nimport { PlantContext } from '../context';\nimport { mapToPlant } from '../utils/mapper';\n\nexport function Result({ navigation, route }: ResultProps) {\n\tconst [selectedOption, setSelectedOption] = useState(null);\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\tconst [buttonOnHold, setButtonOnHold] = React.useState<boolean>(false);\n\n\tconst plantResult = route.params;\n\tconst isTrefle = (plantResult as PlantIDResponse).suggestions ? false : true;\n\tlet height = Dimensions.get('window').height;\n\n\tconst plantContext = useContext(PlantContext);\n\n\tif (Platform.OS === 'web') {\n\t\theight -= 100;\n\t}\n\n\tconst handleSelect = (optionId) => {\n\t\tif (selectedOption == optionId) {\n\t\t\tsetSelectedOption(null);\n\t\t} else {\n\t\t\tsetSelectedOption(optionId);\n\t\t}\n\t};\n\n\tconst handleContinue = async () => {\n\t\tlet plant = null;\n\t\tif (isTrefle) {\n\t\t\tif (!buttonOnHold) {\n\t\t\t\tsetButtonOnHold(true);\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await getPlant(selectedOption);\n\t\t\t\t\tif (result.data) {\n\t\t\t\t\t\tplant = mapToPlant(result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Trefle Species not found');\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert('Oops! Algo deu errado');\n\t\t\t\t} finally {\n\t\t\t\t\tsetButtonOnHold(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst plantSelected = (plantResult as PlantIDResponse).suggestions.find(\n\t\t\t\t(it) => it.id === selectedOption\n\t\t\t);\n\n\t\t\tconsole.log(JSON.stringify(plantSelected));\n\n\t\t\tplant = mapToPlant(plantSelected);\n\t\t}\n\n\t\tplantContext.updatePlant(plant);\n\t\tnavigation.navigate('Name');\n\t};\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<View style={styles.row}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\tSelecione o resultado da busca\n\t\t\t\t</Text>\n\t\t\t\t<ScrollView style={{ maxHeight: height }}>\n\t\t\t\t\t{(plantResult as PlantIDResponse).suggestions ? (\n\t\t\t\t\t\t<PlantOptionsList\n\t\t\t\t\t\t\tinfo={(plantResult as PlantIDResponse).suggestions.map((it) => ({\n\t\t\t\t\t\t\t\tid: it.id,\n\t\t\t\t\t\t\t\tname: it.plant_name,\n\t\t\t\t\t\t\t\tprobability: it.probability,\n\t\t\t\t\t\t\t}))}\n\t\t\t\t\t\t\tonOptionSelect={handleSelect}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<PlantOptionsList\n\t\t\t\t\t\t\tinfo={(plantResult as TreflePlantSearchResponse).data\n\t\t\t\t\t\t\t\t.filter((it) => it.common_name != null)\n\t\t\t\t\t\t\t\t.map((it) => ({\n\t\t\t\t\t\t\t\t\tid: it.id,\n\t\t\t\t\t\t\t\t\tname: it.common_name,\n\t\t\t\t\t\t\t\t\tprobability: null,\n\t\t\t\t\t\t\t\t}))}\n\t\t\t\t\t\t\tonOptionSelect={handleSelect}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</ScrollView>\n\t\t\t</View>\n\t\t\t{selectedOption && (\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\tonPress={() => handleContinue()}\n\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\tdisabled={buttonOnHold}\n\t\t\t\t\ttestID=\"Result Continue\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t\tjustifyContent: 'flex-start',\n\t},\n\trow: {\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'space-evenly',\n\t},\n\tfabStyle: {},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tright: 0,\n\t\tbottom: 0,\n\t\tmargin: 40,\n\t},\n});\n","import React, { useContext } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Text, TextInput, FAB } from 'react-native-paper';\nimport { NameProps } from '../types/index';\nimport { PlantContext } from '../context';\n\nexport function Name({ navigation }: NameProps) {\n\tconst [text, setText] = React.useState('');\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\n\tconst plantContext = useContext(PlantContext);\n\n\tconst handleSubmit = () => {\n\t\tplantContext.updatePlantName(text);\n\t\tnavigation.navigate('Code');\n\t};\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<View style={styles.row}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\t{' '}\n\t\t\t\t\tDê um nome à sua planta!\n\t\t\t\t</Text>\n\t\t\t\t<TextInput\n\t\t\t\t\tmode=\"flat\"\n\t\t\t\t\tvalue={text}\n\t\t\t\t\tonChangeText={(text) => setText(text)}\n\t\t\t\t\tstyle={styles.fabVariant}\n\t\t\t\t\tonSubmitEditing={() => handleSubmit()}\n\t\t\t\t\ttestID=\"input-nome\"\n\t\t\t\t/>\n\t\t\t</View>\n\t\t\t{text.length > 0 && (\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\tonPress={() => handleSubmit()}\n\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\ttestID=\"Name Continue\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t</View>\n\t);\n}\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t\tpadding: 40,\n\t},\n\tfabVariant: {\n\t\tmarginVertical: 20,\n\t},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tmargin: 40,\n\t\tright: 0,\n\t\tbottom: 0,\n\t},\n});\n","import React, { useState, useContext, useEffect } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n\tCodeField,\n\tCursor,\n\tuseBlurOnFulfill,\n\tuseClearByFocusCell,\n} from 'react-native-confirmation-code-field';\nimport { Text, useTheme, FAB } from 'react-native-paper';\nimport { CELL_COUNT } from '../utils/defaults';\nimport { CodeProps } from '../types/index';\nimport { PlantContext } from '../context';\nimport { storeData } from '../storage/index';\n\nexport function Code({ navigation }: CodeProps) {\n\tconst [value, setValue] = useState('');\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\tconst ref = useBlurOnFulfill({ value, cellCount: CELL_COUNT });\n\tconst [props, getCellOnLayoutHandler] = useClearByFocusCell({\n\t\tvalue,\n\t\tsetValue,\n\t});\n\n\tconst theme = useTheme();\n\tconst plantContext = useContext(PlantContext);\n\n\tuseEffect(() => {\n\t\tif (plantContext.plant && plantContext.plant.code) {\n\t\t\tstoreData(plantContext.plant);\n\t\t}\n\t}, [plantContext.plant]);\n\n\tconst onPress = () => {\n\t\tplantContext.updatePlantCode(value);\n\t\tnavigation.navigate('Home', { success: true });\n\t};\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<View style={styles.row}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\t{' '}\n\t\t\t\t\tDigite o código do componente\n\t\t\t\t</Text>\n\t\t\t\t<CodeField\n\t\t\t\t\tref={ref}\n\t\t\t\t\t{...props}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChangeText={setValue}\n\t\t\t\t\tcellCount={CELL_COUNT}\n\t\t\t\t\trootStyle={styles.codeFieldRoot}\n\t\t\t\t\tkeyboardType=\"numeric\"\n\t\t\t\t\ttextContentType=\"oneTimeCode\"\n\t\t\t\t\tonEndEditing={onPress}\n\t\t\t\t\ttestID=\"code-field\"\n\t\t\t\t\trenderCell={({ index, symbol, isFocused }) => (\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tstyle={[themedStyles(theme).cell, isFocused && themedStyles(theme).focusCell]}\n\t\t\t\t\t\t\tonLayout={getCellOnLayoutHandler(index)}>\n\t\t\t\t\t\t\t{symbol || (isFocused ? <Cursor /> : null)}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t\t{value.length >= 6 && (\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\tonPress={onPress}\n\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\ttestID=\"Code Continue\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t\tpadding: 40,\n\t},\n\tfabVariant: {\n\t\tmarginVertical: 20,\n\t},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tmargin: 40,\n\t\tright: 0,\n\t\tbottom: 0,\n\t},\n\tcodeFieldRoot: { margin: 20, display: 'flex', minWidth: '50%', alignSelf: 'center' },\n});\n\nconst themedStyles = (theme) =>\n\tStyleSheet.create({\n\t\tfocusCell: {\n\t\t\tborderColor: theme.colors.secondaryContainer,\n\t\t},\n\t\tcell: {\n\t\t\tmaxWidth: 40,\n\t\t\twidth: '15%',\n\t\t\tmarginHorizontal: 5,\n\t\t\theight: 50,\n\t\t\tlineHeight: 38,\n\t\t\tfontSize: 24,\n\t\t\tborderWidth: 2,\n\t\t\tborderColor: theme.colors.outline,\n\t\t\tborderRadius: 10,\n\t\t\ttextAlign: 'center',\n\t\t},\n\t});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport { Home } from '../screens/Home';\nimport { Header } from '../components/Header';\nimport IdentificationMethod from '../screens/IdentificationMethod';\nimport { ImageMethod } from '../screens/ImageMethod';\nimport { TextMethod } from '../screens/TextMethod';\nimport { Result } from '../screens/Result';\nimport { Name } from '../screens/Name';\nimport { Code } from '../screens/Code';\n\nconst Stack = createStackNavigator();\n\nexport default function RootStackNavigator() {\n\treturn (\n\t\t<Stack.Navigator\n\t\t\tinitialRouteName=\"Home\"\n\t\t\tscreenOptions={{\n\t\t\t\theader: Header,\n\t\t\t}}>\n\t\t\t<Stack.Screen name=\"Home\" component={Home} options={{ title: 'Suas Plantas' }} />\n\t\t\t<Stack.Screen\n\t\t\t\tname=\"IdentificationMethod\"\n\t\t\t\tcomponent={IdentificationMethod}\n\t\t\t\toptions={{ title: 'Método de Identificação' }}\n\t\t\t/>\n\t\t\t<Stack.Screen\n\t\t\t\tname=\"ImageMethod\"\n\t\t\t\tcomponent={ImageMethod}\n\t\t\t\toptions={{ title: 'Identificação por imagem' }}\n\t\t\t/>\n\t\t\t<Stack.Screen\n\t\t\t\tname=\"TextMethod\"\n\t\t\t\tcomponent={TextMethod}\n\t\t\t\toptions={{ title: 'Identificação por texto' }}\n\t\t\t/>\n\t\t\t<Stack.Screen name=\"Result\" component={Result} options={{ title: 'Resultado' }} />\n\t\t\t<Stack.Screen name=\"Name\" component={Name} options={{ title: 'Nome' }} />\n\t\t\t<Stack.Screen name=\"Code\" component={Code} options={{ title: 'Código' }} />\n\t\t</Stack.Navigator>\n\t);\n}\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Drawer, Switch, Text, TouchableRipple, useTheme } from 'react-native-paper';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { PreferencesContext } from './PreferencesContext';\n\nexport default function DrawerContent() {\n\tconst insets = useSafeAreaInsets();\n\n\tconst { toggleTheme, isThemeDark } = React.useContext(PreferencesContext);\n\tconst theme = useTheme();\n\n\treturn (\n\t\t<Drawer.Section\n\t\t\ttitle=\"Preferences\"\n\t\t\tstyle={{\n\t\t\t\tflex: 1,\n\t\t\t\tpaddingTop: insets.top + 4,\n\t\t\t\tbackgroundColor: theme.colors.background,\n\t\t\t\tmarginBottom: 0,\n\t\t\t}}>\n\t\t\t<TouchableRipple onPress={toggleTheme}>\n\t\t\t\t<View style={[styles.preference]}>\n\t\t\t\t\t<Text variant=\"labelLarge\">Dark Theme</Text>\n\t\t\t\t\t<View pointerEvents=\"none\">\n\t\t\t\t\t\t<Switch value={isThemeDark} testID=\"theme switch\" />\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</TouchableRipple>\n\t\t</Drawer.Section>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tdrawerContent: {\n\t\tflex: 1,\n\t},\n\tpreference: {\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'space-between',\n\t\talignItems: 'center',\n\t\tpaddingVertical: 12,\n\t\tpaddingHorizontal: 16,\n\t},\n\tv3Preference: {\n\t\theight: 56,\n\t\tpaddingHorizontal: 28,\n\t},\n\tbadge: {\n\t\talignSelf: 'center',\n\t},\n});\n","/* eslint-disable react/prop-types */\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport React from 'react';\n\nimport RootStackNavigator from './RootStackNavigator';\nimport DrawerContent from '../components/DrawerContent';\n\nconst Drawer = createDrawerNavigator();\n\nexport default function RootNavigation({ theme }) {\n\treturn (\n\t\t<NavigationContainer theme={theme}>\n\t\t\t<Drawer.Navigator\n\t\t\t\tinitialRouteName=\"Home\"\n\t\t\t\tdrawerContent={DrawerContent}\n\t\t\t\tscreenOptions={{\n\t\t\t\t\theaderShown: false,\n\t\t\t\t\tdrawerPosition: 'right',\n\t\t\t\t}}>\n\t\t\t\t<Drawer.Screen\n\t\t\t\t\tname=\"Root\"\n\t\t\t\t\tcomponent={RootStackNavigator}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\theaderTintColor: theme.colors.onBackground,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Drawer.Navigator>\n\t\t</NavigationContainer>\n\t);\n}\n","export const lightGreenColors = {\n\tcolors: {\n\t\tprimary: 'rgb(0, 107, 86)',\n\t\tonPrimary: 'rgb(255, 255, 255)',\n\t\tprimaryContainer: 'rgb(126, 248, 212)',\n\t\tonPrimaryContainer: 'rgb(0, 32, 24)',\n\t\tsecondary: 'rgb(75, 99, 91)',\n\t\tonSecondary: 'rgb(255, 255, 255)',\n\t\tsecondaryContainer: 'rgb(206, 233, 221)',\n\t\tonSecondaryContainer: 'rgb(7, 32, 25)',\n\t\ttertiary: 'rgb(65, 99, 118)',\n\t\tonTertiary: 'rgb(255, 255, 255)',\n\t\ttertiaryContainer: 'rgb(196, 231, 255)',\n\t\tonTertiaryContainer: 'rgb(0, 30, 44)',\n\t\terror: 'rgb(186, 26, 26)',\n\t\tonError: 'rgb(255, 255, 255)',\n\t\terrorContainer: 'rgb(255, 218, 214)',\n\t\tonErrorContainer: 'rgb(65, 0, 2)',\n\t\tbackground: 'rgb(251, 253, 250)',\n\t\tonBackground: 'rgb(25, 28, 27)',\n\t\tsurface: 'rgb(251, 253, 250)',\n\t\tonSurface: 'rgb(25, 28, 27)',\n\t\tsurfaceVariant: 'rgb(219, 229, 223)',\n\t\tonSurfaceVariant: 'rgb(63, 73, 69)',\n\t\toutline: 'rgb(111, 121, 117)',\n\t\toutlineVariant: 'rgb(191, 201, 195)',\n\t\tshadow: 'rgb(0, 0, 0)',\n\t\tscrim: 'rgb(0, 0, 0)',\n\t\tinverseSurface: 'rgb(46, 49, 47)',\n\t\tinverseOnSurface: 'rgb(239, 241, 238)',\n\t\tinversePrimary: 'rgb(96, 219, 185)',\n\t\televation: {\n\t\t\tlevel0: 'transparent',\n\t\t\tlevel1: 'rgb(238, 246, 242)',\n\t\t\tlevel2: 'rgb(231, 241, 237)',\n\t\t\tlevel3: 'rgb(223, 237, 232)',\n\t\t\tlevel4: 'rgb(221, 236, 230)',\n\t\t\tlevel5: 'rgb(216, 233, 227)',\n\t\t},\n\t\tsurfaceDisabled: 'rgba(25, 28, 27, 0.12)',\n\t\tonSurfaceDisabled: 'rgba(25, 28, 27, 0.38)',\n\t\tbackdrop: 'rgba(41, 50, 47, 0.4)',\n\t},\n};\n\nexport const darkGreenColors = {\n\tcolors: {\n\t\tprimary: 'rgb(96, 219, 185)',\n\t\tonPrimary: 'rgb(0, 56, 43)',\n\t\tprimaryContainer: 'rgb(0, 81, 64)',\n\t\tonPrimaryContainer: 'rgb(126, 248, 212)',\n\t\tsecondary: 'rgb(178, 204, 193)',\n\t\tonSecondary: 'rgb(29, 53, 45)',\n\t\tsecondaryContainer: 'rgb(52, 76, 67)',\n\t\tonSecondaryContainer: 'rgb(206, 233, 221)',\n\t\ttertiary: 'rgb(168, 203, 226)',\n\t\tonTertiary: 'rgb(13, 52, 70)',\n\t\ttertiaryContainer: 'rgb(40, 75, 94)',\n\t\tonTertiaryContainer: 'rgb(196, 231, 255)',\n\t\terror: 'rgb(255, 180, 171)',\n\t\tonError: 'rgb(105, 0, 5)',\n\t\terrorContainer: 'rgb(147, 0, 10)',\n\t\tonErrorContainer: 'rgb(255, 180, 171)',\n\t\tbackground: 'rgb(25, 28, 27)',\n\t\tonBackground: 'rgb(225, 227, 224)',\n\t\tsurface: 'rgb(25, 28, 27)',\n\t\tonSurface: 'rgb(225, 227, 224)',\n\t\tsurfaceVariant: 'rgb(63, 73, 69)',\n\t\tonSurfaceVariant: 'rgb(191, 201, 195)',\n\t\toutline: 'rgb(137, 147, 142)',\n\t\toutlineVariant: 'rgb(63, 73, 69)',\n\t\tshadow: 'rgb(0, 0, 0)',\n\t\tscrim: 'rgb(0, 0, 0)',\n\t\tinverseSurface: 'rgb(225, 227, 224)',\n\t\tinverseOnSurface: 'rgb(46, 49, 47)',\n\t\tinversePrimary: 'rgb(0, 107, 86)',\n\t\televation: {\n\t\t\tlevel0: 'transparent',\n\t\t\tlevel1: 'rgb(29, 38, 35)',\n\t\t\tlevel2: 'rgb(31, 43, 40)',\n\t\t\tlevel3: 'rgb(33, 49, 44)',\n\t\t\tlevel4: 'rgb(34, 51, 46)',\n\t\t\tlevel5: 'rgb(35, 55, 49)',\n\t\t},\n\t\tsurfaceDisabled: 'rgba(225, 227, 224, 0.12)',\n\t\tonSurfaceDisabled: 'rgba(225, 227, 224, 0.38)',\n\t\tbackdrop: 'rgba(41, 50, 47, 0.4)',\n\t},\n};\n","import 'react-native-gesture-handler';\n\nimport {\n\tDarkTheme as NavigationDarkTheme,\n\tDefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { MD3DarkTheme, MD3LightTheme, adaptNavigationTheme } from 'react-native-paper';\n\nimport { darkGreenColors, lightGreenColors } from './colors';\n\nconst { LightTheme, DarkTheme } = adaptNavigationTheme({\n\treactNavigationLight: NavigationDefaultTheme,\n\treactNavigationDark: NavigationDarkTheme,\n});\n\nexport const CombinedDefaultTheme = {\n\t...MD3LightTheme,\n\t...LightTheme,\n\t...lightGreenColors,\n};\n\nexport const CombinedDarkTheme = {\n\t...MD3DarkTheme,\n\t...DarkTheme,\n\t...darkGreenColors,\n};\n","import 'react-native-gesture-handler';\n\nimport { registerRootComponent } from 'expo';\nimport React from 'react';\nimport { Provider as PaperProvider } from 'react-native-paper';\n\nimport { PreferencesContext } from './components/PreferencesContext';\nimport RootNavigation from './navigation/RootNavigation';\nimport { CombinedDarkTheme, CombinedDefaultTheme } from './utils/theme';\nimport { StatusBar } from 'react-native';\nimport { PlantProvider } from './context';\n\nfunction App() {\n\tconst [isThemeDark, setIsThemeDark] = React.useState(false);\n\n\tconst theme = isThemeDark ? CombinedDarkTheme : CombinedDefaultTheme;\n\n\tconst toggleTheme = React.useCallback(() => {\n\t\treturn setIsThemeDark(!isThemeDark);\n\t}, [isThemeDark]);\n\n\tconst preferences = React.useMemo(\n\t\t() => ({\n\t\t\ttoggleTheme,\n\t\t\tisThemeDark,\n\t\t}),\n\t\t[toggleTheme, isThemeDark]\n\t);\n\n\treturn (\n\t\t<PaperProvider theme={theme}>\n\t\t\t<PreferencesContext.Provider value={preferences}>\n\t\t\t\t<>\n\t\t\t\t\t<PlantProvider>\n\t\t\t\t\t\t<StatusBar barStyle={isThemeDark ? 'light-content' : 'dark-content'} />\n\t\t\t\t\t\t<RootNavigation theme={theme} />\n\t\t\t\t\t</PlantProvider>\n\t\t\t\t</>\n\t\t\t</PreferencesContext.Provider>\n\t\t</PaperProvider>\n\t);\n}\n\nexport default registerRootComponent(App);\n"],"sourceRoot":""}