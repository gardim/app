{"version":3,"sources":["src/components/PreferencesContext.tsx","src/storage/index.ts","src/context/index.tsx","src/screens/Home.tsx","src/components/Header.tsx","src/screens/IdentificationMethod.tsx","src/components/DeletableImage.tsx","src/api/plant_id/index.ts","src/api/location/index.tsx","src/screens/ImageMethod.tsx","src/api/trefle/index.ts","src/screens/TextMethod.tsx","src/components/PlantOptionsList.tsx","src/utils/defaults.ts","src/utils/index.ts","src/utils/mapper.ts","src/screens/Result.tsx","src/screens/Name.tsx","src/screens/Code.tsx","src/components/LinearGaugeChart.tsx","src/api/socket/index.tsx","src/api/weatherstack/index.tsx","src/screens/Status.tsx","src/navigation/RootTabNavigation.tsx","src/navigation/RootStackNavigator.tsx","src/components/DrawerContent.tsx","src/navigation/RootNavigation.tsx","src/utils/colors.ts","src/utils/theme.tsx","src/App.tsx"],"names":["PreferencesContext","React","createContext","toggleTheme","isThemeDark","storeData","value","jsonValue","JSON","stringify","AsyncStorage","setItem","id","e","Error","getAllKeys","filter","it","startsWith","getMultiple","keys","values","multiGet","key","getItem","parse","removeItem","PlantContext","PlantProvider","children","useState","plant","setPlant","updatePlant","updatePlantName","name","updatePlantCode","code","contextValue","useMemo","Provider","Home","navigation","route","params","success","visibleAlert","setVisiblAlert","visible","setVisible","plants","setPlants","plantContext","useContext","useEffect","loadPlants","result","View","style","styles","container","length","flex","justifyContent","map","Item","title","titleStyle","fontSize","fontWeight","description","scientific_name","onPress","navigate","handleOnPress","left","Text","label","size","FAB","icon","compressedFabStyle","variant","onLongPress","s","testID","row","fabStyle","Snackbar","action","onDismiss","marginBottom","StyleSheet","create","flexGrow","padding","flexDirection","alignItems","margin","position","right","bottom","MORE_ICON","Platform","OS","Header","back","options","theme","useTheme","menuVisible","setMenuVisible","Appbar","colors","primary","surface","BackAction","goBack","Content","Menu","anchor","Action","openDrawer","IdentificationMethod","textAlign","paddingHorizontal","fabVariant","DeletableImage","image","remove","Image","source","uri","top","color","containerStyle","badgeContainer","badgeStyle","badge","backgroundColor","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","alignSelf","error","images","latitude","longitude","Constants","manifest","extra","plantIdApiKey","plantIdApiUrl","base64Images","Promise","all","response","fetch","blob","resolve","reject","reader","FileReader","onerror","onload","readAsDataURL","requestBody","modifiers","plant_details","plant_language","undefined","method","headers","body","json","LocationContext","granted","LocationProvider","location","setLocation","setGranted","status","Location","console","log","coords","ImageMethod","setImages","buttonOnHold","setButtonOnHold","errorMessage","setErrorMessage","locationContext","pickImage","mediaTypes","ImagePicker","Images","allowsEditing","canceled","newImage","assets","assetId","toString","some","removeImage","newImages","index","findIndex","splice","searchPlants","identifyPlant","is_plant","message","Dimensions","get","alignContent","pagingEnabled","snapEnabled","mode","modeConfig","snapDirection","loop","data","renderItem","item","disabled","query","gardimApiUrl","TextMethod","searchQuery","setSearchQuery","chips","setChips","addChip","queryString","trim","includes","prevChips","Set","Searchbar","placeholder","onChangeText","endsWith","onSubmitEditing","HelperText","type","chipsContainer","chip","Chip","onClose","chipToDelete","currentChip","marginVertical","flexWrap","marginTop","PlantOptionsList","info","onOptionSelect","selectedId","setSelectedId","option","Card","optionId","card","probability","toFixed","PH_MINIMUM","PH_MAXIMUM","LIGHT_MINIMUM","LIGHT_MAXIMUM","ATMOSPHERIC_HUMIDITY_MINIMUM","ATMOSPHERIC_HUMIDITY_MAXIMUM","TEMPERATURE_MINIMUM","TEMPERATURE_MAXIMUM","SOIL_HUMIDITY_MINIMUM","SOIL_HUMIDITY_MAXIMUM","CELL_COUNT","PERCENTAGE","min","max","LUX","TEMPERATURE","convertScale","num","Math","round","temperatureToValue","temperature","minTemp","maxTemp","t","mapToPlant","isTrefle","plantDetails","uuid","v4","common_name","edible_parts","ph_maximum","ph_minimum","light_minimum","light_maximum","atmospheric_humidity_minimum","atmospheric_humidity_maximum","temperature_minimum","temperature_maximum","soil_humidity_minimum","soil_humidity_maximum","trefleData","edible_part","growth","light","atmospheric_humidity","minimum_temperature","deg_c","maximum_temperature","soil_humidity","plantIdData","plant_name","watering","Result","selectedOption","setSelectedOption","plantResult","suggestions","handleSelect","handleContinue","getPlant","alert","plantSelected","find","ScrollView","maxHeight","Name","text","setText","handleSubmit","TextInput","Code","setValue","ref","useBlurOnFulfill","cellCount","useClearByFocusCell","props","getCellOnLayoutHandler","rootStyle","codeFieldRoot","keyboardType","textContentType","onEndEditing","renderCell","symbol","isFocused","themedStyles","cell","focusCell","onLayout","display","minWidth","borderColor","secondaryContainer","maxWidth","marginHorizontal","lineHeight","borderWidth","outline","LinearGaugeChart","range","conversor","sliderValue","setSliderValue","scaledRange","rangeSize","scaleFactor","ceil","scaleRange","scaledMin","scaledMax","sectionColors","Array","from","_","i","sliderRef","useRef","line","section","minimumValue","maximumValue","step","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","thumbStyle","gradientContainer","overflow","SocketContext","soilValue","luxValue","SocketProvider","setSoilValue","setLuxValue","setCode","socketUrl","enableSocket","userId","socket","io","transports","on","parsedData","Number","parsed","disconnect","getWeather","WeahterContext","weather","isLoading","WeatherProvider","setWeather","setIsLoading","setError","err","fetchWeather","Status","renderSoil","renderLux","Loading","ActivityIndicator","animating","NoData","AntDesign","SoilCard","Title","Icon","Actions","LuxCard","UmidityCard","current","humidity","TemperatureCard","Tab","createMaterialBottomTabNavigator","RootTabNavigation","useLayoutEffect","setOptions","Navigator","Screen","component","tabBarLabel","tabBarIcon","Fontisto","Stack","createStackNavigator","RootStackNavigator","initialRouteName","screenOptions","header","DrawerContent","insets","useSafeAreaInsets","Section","paddingTop","background","TouchableRipple","preference","pointerEvents","Switch","drawerContent","paddingVertical","v3Preference","Drawer","createDrawerNavigator","RootNavigation","NavigationContainer","headerShown","drawerPosition","headerTintColor","onBackground","lightGreenColors","onPrimary","primaryContainer","onPrimaryContainer","secondary","onSecondary","onSecondaryContainer","tertiary","onTertiary","tertiaryContainer","onTertiaryContainer","onError","errorContainer","onErrorContainer","onSurface","surfaceVariant","onSurfaceVariant","outlineVariant","shadow","scrim","inverseSurface","inverseOnSurface","inversePrimary","level0","level1","level2","level3","level4","level5","surfaceDisabled","onSurfaceDisabled","backdrop","darkGreenColors","adaptNavigationTheme","reactNavigationLight","NavigationDefaultTheme","reactNavigationDark","NavigationDarkTheme","LightTheme","DarkTheme","CombinedDefaultTheme","MD3LightTheme","CombinedDarkTheme","MD3DarkTheme","registerRootComponent","setIsThemeDark","useCallback","preferences","StatusBar","barStyle"],"mappings":"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","file":"static/js/app.c035ce15.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\nimport React from 'react';\n\nexport const PreferencesContext = React.createContext({\n\ttoggleTheme: () => {},\n\tisThemeDark: false,\n});\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Plant } from '../types';\n\nexport const storeData = async (value: Plant) => {\n\ttry {\n\t\tconst jsonValue = JSON.stringify(value);\n\t\tawait AsyncStorage.setItem(`@${value.id}`, jsonValue);\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao salvar o objeto');\n\t}\n};\n\nexport const getAllKeys = async () => {\n\ttry {\n\t\treturn (await AsyncStorage.getAllKeys()).filter((it) => it.startsWith('@'));\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao pegar as chaves dos objetos');\n\t}\n};\n\nexport const getMultiple = async (keys: readonly string[]) => {\n\tlet values;\n\ttry {\n\t\tvalues = await AsyncStorage.multiGet(keys);\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao pegar os objetos');\n\t}\n\treturn values;\n};\n\nexport const getOne = async (key: string) => {\n\ttry {\n\t\tconst jsonValue = await AsyncStorage.getItem(key);\n\t\treturn jsonValue != null ? (JSON.parse(jsonValue) as Plant) : null;\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao pegar o objeto');\n\t}\n};\n\nexport const removeValue = async (key: string) => {\n\ttry {\n\t\tawait AsyncStorage.removeItem(key);\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao remover o objeto');\n\t}\n};\n","import React, { createContext, useState, useMemo, ReactNode } from 'react';\nimport { Plant, PlantContextType } from '../types';\n\nexport const PlantContext = createContext<PlantContextType | null>(null);\n\ninterface PlantProviderProps {\n\tchildren: ReactNode;\n}\n\nexport const PlantProvider = ({ children }: PlantProviderProps) => {\n\tconst [plant, setPlant] = useState<Plant>(null);\n\n\tconst updatePlant = (plant: Plant) => {\n\t\tsetPlant(plant);\n\t};\n\n\tconst updatePlantName = (name: string) => {\n\t\tsetPlant({\n\t\t\t...plant,\n\t\t\tname: name,\n\t\t});\n\t};\n\n\tconst updatePlantCode = (code: string) => {\n\t\tsetPlant({\n\t\t\t...plant,\n\t\t\tcode: code,\n\t\t});\n\t};\n\n\tconst contextValue = useMemo(() => {\n\t\treturn { plant, updatePlant, updatePlantName, updatePlantCode };\n\t}, [plant, updatePlantName, updatePlantCode]);\n\n\treturn <PlantContext.Provider value={contextValue}>{children}</PlantContext.Provider>;\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Text, FAB, List, Avatar, Snackbar } from 'react-native-paper';\nimport { Plant } from '../types';\nimport { HomeProps } from '../types/stack';\nimport { getAllKeys } from '../storage';\nimport { getMultiple } from '../storage/index';\nimport { PlantContext } from '../context';\n\nexport function Home({ navigation, route }: HomeProps) {\n\tconst [visibleAlert, setVisiblAlert] = React.useState(route.params?.success ? true : false);\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\n\tconst onDismissSnackBar = () => setVisiblAlert(false);\n\n\tconst [plants, setPlants] = useState([]);\n\n\tconst plantContext = useContext(PlantContext);\n\n\tuseEffect(() => {\n\t\tsetVisiblAlert(route.params?.success ? true : false);\n\t}, [route.params?.success]);\n\n\tuseEffect(() => {\n\t\tconst loadPlants = async () => {\n\t\t\tconst keys = await getAllKeys();\n\t\t\tconst result = await getMultiple(keys);\n\t\t\tsetPlants(result);\n\t\t};\n\n\t\tloadPlants();\n\t}, [visibleAlert]);\n\n\tconst handleOnPress = (plant: Plant) => {\n\t\tplantContext.updatePlant(plant);\n\t\tnavigation.navigate('RootTabNavigation');\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<View style={styles.container}>\n\t\t\t\t{plants.length > 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<View style={{ flex: 1, justifyContent: 'flex-start' }}>\n\t\t\t\t\t\t\t{plants.map((it: [string, string]) => {\n\t\t\t\t\t\t\t\tconst plant = JSON.parse(it[1]) as Plant;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<List.Item\n\t\t\t\t\t\t\t\t\t\tkey={plant.id}\n\t\t\t\t\t\t\t\t\t\ttitle={plant.name}\n\t\t\t\t\t\t\t\t\t\ttitleStyle={{ fontSize: 18, fontWeight: 'bold' }}\n\t\t\t\t\t\t\t\t\t\tdescription={plant.scientific_name}\n\t\t\t\t\t\t\t\t\t\tonPress={() => handleOnPress(plant)}\n\t\t\t\t\t\t\t\t\t\tleft={() => <Avatar.Text label={plant.name[0]} size={40} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t<FAB\n\t\t\t\t\t\t\ticon=\"plus\"\n\t\t\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\t\t\tonPress={() => navigation.navigate('IdentificationMethod')}\n\t\t\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\t\t\ttestID=\"Add Plant\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<View style={styles.row}>\n\t\t\t\t\t\t<FAB\n\t\t\t\t\t\t\ticon=\"plus\"\n\t\t\t\t\t\t\tonPress={() => navigation.navigate('IdentificationMethod')}\n\t\t\t\t\t\t\tvisible\n\t\t\t\t\t\t\tstyle={[styles.fabStyle]}\n\t\t\t\t\t\t\ttestID=\"Add Plant\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Text variant=\"titleSmall\">Adicione sua primeira planta</Text>\n\t\t\t\t\t</View>\n\t\t\t\t)}\n\t\t\t</View>\n\t\t\t<Snackbar\n\t\t\t\tvisible={visibleAlert}\n\t\t\t\taction={{\n\t\t\t\t\tlabel: 'OK',\n\t\t\t\t}}\n\t\t\t\tonDismiss={onDismissSnackBar}\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginBottom: 30,\n\t\t\t\t}}>\n\t\t\t\tSua planta foi salva com sucesso!\n\t\t\t</Snackbar>\n\t\t</>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t\tpadding: 8,\n\t\tjustifyContent: 'center',\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tmarginBottom: 8,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tpadding: 10,\n\t},\n\tfabStyle: {\n\t\tmargin: 20,\n\t},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tright: 0,\n\t\tbottom: 0,\n\t\tmargin: 40,\n\t},\n});\n","import { DrawerNavigationProp } from '@react-navigation/drawer';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport React from 'react';\nimport { Platform } from 'react-native';\nimport { useTheme, Appbar, Menu } from 'react-native-paper';\n\nexport type RootStackParamList = {\n\tApp: undefined;\n};\n\nconst MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\n\nexport const Header = ({ navigation, back, options }: StackHeaderProps) => {\n\tconst theme = useTheme();\n\tconst [menuVisible, setMenuVisible] = React.useState(false);\n\n\treturn (\n\t\t<Appbar.Header\n\t\t\ttheme={{\n\t\t\t\tcolors: {\n\t\t\t\t\tprimary: theme?.colors.surface,\n\t\t\t\t},\n\t\t\t}}>\n\t\t\t{back ? <Appbar.BackAction onPress={navigation.goBack} testID=\"back icon\" /> : null}\n\t\t\t<Appbar.Content title={options.title} />\n\t\t\t<Menu\n\t\t\t\tvisible={menuVisible}\n\t\t\t\tonDismiss={() => setMenuVisible(false)}\n\t\t\t\tanchor={\n\t\t\t\t\t<Appbar.Action\n\t\t\t\t\t\ttestID=\"Appbar Menu\"\n\t\t\t\t\t\ticon={MORE_ICON}\n\t\t\t\t\t\tonPress={() =>\n\t\t\t\t\t\t\t(navigation as unknown as DrawerNavigationProp<{ any }>).openDrawer()\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t}>\n\t\t\t\t<></>\n\t\t\t</Menu>\n\t\t</Appbar.Header>\n\t);\n};\n","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Text, FAB } from 'react-native-paper';\nimport { IdentificationMethodProps } from '../types/stack';\n\nexport default function IdentificationMethod({ navigation }: IdentificationMethodProps) {\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<View style={styles.row}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\t{' '}\n\t\t\t\t\tSelecione o método que deseja seguir para identificar sua plantinha!\n\t\t\t\t</Text>\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"camera\"\n\t\t\t\t\tlabel=\"Identificar por imagem\"\n\t\t\t\t\tonPress={() => navigation.navigate('ImageMethod')}\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tvisible\n\t\t\t\t/>\n\t\t\t\t<Text variant=\"titleMedium\"> ou </Text>\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"clipboard-edit-outline\"\n\t\t\t\t\tlabel=\"Identificar por texto\"\n\t\t\t\t\tonPress={() => navigation.navigate('TextMethod')}\n\t\t\t\t\tvisible\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 0.9,\n\t\tpaddingHorizontal: 8,\n\t\tjustifyContent: 'center',\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tmarginBottom: 8,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'space-evenly',\n\t\talignItems: 'center',\n\t},\n\tfabVariant: {},\n});\n","import React from 'react';\nimport { View, StyleSheet, Image } from 'react-native';\nimport { ImageType } from '../types';\nimport { Badge, Icon } from 'react-native-elements';\nimport { useTheme } from 'react-native-paper';\n\ntype DeletableImageType = {\n\timage: ImageType;\n\tremove: (id: string) => void;\n};\n\nexport function DeletableImage({ image, remove }: DeletableImageType) {\n\tconst theme = useTheme();\n\n\treturn (\n\t\t<View style={styles(theme).container}>\n\t\t\t<Image source={{ uri: image.uri }} style={styles(theme).image} />\n\t\t\t<View style={{ position: 'absolute', top: 0, right: 0 }}>\n\t\t\t\t<Badge\n\t\t\t\t\tvalue={<Icon name=\"close\" size={18} color=\"white\" testID=\"close badge\" />}\n\t\t\t\t\tcontainerStyle={styles(theme).badgeContainer}\n\t\t\t\t\tbadgeStyle={styles(theme).badge}\n\t\t\t\t\tonPress={() => remove(image.id)}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</View>\n\t);\n}\n\nconst styles = (theme) =>\n\tStyleSheet.create({\n\t\tcontainer: {\n\t\t\tbackgroundColor: '#fff',\n\t\t\tborderRadius: 10,\n\t\t\tshadowColor: '#000',\n\t\t\tshadowOffset: { width: 0, height: 2 },\n\t\t\tshadowOpacity: 0.25,\n\t\t\tshadowRadius: 3.84,\n\t\t\televation: 5,\n\t\t\twidth: '70%',\n\t\t\talignSelf: 'center',\n\t\t\theight: 200,\n\t\t\tmargin: 20,\n\t\t},\n\t\timage: {\n\t\t\twidth: '100%',\n\t\t\theight: 200,\n\t\t\tborderRadius: 10,\n\t\t},\n\t\tbadgeContainer: {\n\t\t\tposition: 'relative',\n\t\t\ttop: -10,\n\t\t\tright: -10,\n\t\t\tbackgroundColor: 'transparent',\n\t\t},\n\t\tbadge: {\n\t\t\theight: 30,\n\t\t\twidth: 30,\n\t\t\tbackgroundColor: theme.colors.error,\n\t\t},\n\t});\n","import { ImageType } from '../../types';\nimport { PlantIDResponse } from './types';\nimport Constants from 'expo-constants';\n\ninterface RequestBody {\n\timages: string[];\n\tlatitude?: string;\n\tlongitude?: string;\n\tmodifiers: string[];\n\tplant_details: string[];\n\tplant_language: string;\n}\n\nexport async function identifyPlant(\n\timages: ImageType[],\n\tlatitude?: string,\n\tlongitude?: string\n): Promise<PlantIDResponse> {\n\tconst { plantIdApiKey, plantIdApiUrl } = Constants.manifest.extra;\n\n\tconst base64Images: string[] = await Promise.all(\n\t\timages.map(async (image: ImageType) => {\n\t\t\tconst response = await fetch(image.uri);\n\t\t\tconst blob = await response.blob();\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tconst reader = new FileReader();\n\t\t\t\treader.onerror = () => reject('Failed to convert image to base64');\n\t\t\t\treader.onload = () => resolve(reader.result as string);\n\t\t\t\treader.readAsDataURL(blob);\n\t\t\t});\n\t\t})\n\t);\n\n\tconst requestBody: RequestBody = {\n\t\timages: base64Images,\n\t\tmodifiers: ['similar_images'],\n\t\tplant_details: [\n\t\t\t'common_names',\n\t\t\t'wiki_description',\n\t\t\t'edible_parts',\n\t\t\t'propagation_methods',\n\t\t\t'name_authority',\n\t\t\t'taxonomy',\n\t\t\t'watering',\n\t\t],\n\t\tplant_language: 'pt',\n\t};\n\n\tif (latitude !== undefined && longitude !== undefined) {\n\t\trequestBody.latitude = latitude;\n\t\trequestBody.longitude = longitude;\n\t}\n\n\tconst response = await fetch(`${plantIdApiUrl}/identify`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Api-Key': plantIdApiKey,\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(requestBody),\n\t});\n\n\tconst result = await response.json();\n\treturn result;\n}\n","import React, { createContext, useState, useEffect, ReactNode, useMemo } from 'react';\nimport * as Location from 'expo-location';\n\ntype Location = {\n\tlatitude: string;\n\tlongitude: string;\n\tgranted: boolean;\n};\n\nexport const LocationContext = createContext<Location>({\n\tlatitude: null,\n\tlongitude: null,\n\tgranted: false,\n});\n\ninterface LocationProviderProps {\n\tchildren: ReactNode;\n}\n\nconst LocationProvider = ({ children }: LocationProviderProps) => {\n\tconst [location, setLocation] = useState(null);\n\tconst [granted, setGranted] = useState(null);\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tconst { status } = await Location.requestForegroundPermissionsAsync();\n\t\t\tif (status !== 'granted') {\n\t\t\t\tconsole.log('Permission to access location was denied');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetGranted(true);\n\t\t\tconst location = await Location.getCurrentPositionAsync({});\n\t\t\tsetLocation(location);\n\t\t})();\n\t}, []);\n\n\tconst latitude = location?.coords?.latitude;\n\tconst longitude = location?.coords?.longitude;\n\n\tconst contextValue = useMemo(() => {\n\t\treturn { latitude: latitude, longitude: longitude, granted: granted };\n\t}, [location]);\n\n\treturn <LocationContext.Provider value={contextValue}>{children}</LocationContext.Provider>;\n};\n\nexport default LocationProvider;\n","import * as ImagePicker from 'expo-image-picker';\nimport React, { useState, useContext } from 'react';\nimport { StyleSheet, View, Dimensions } from 'react-native';\nimport { ImageMethodProps, ImageType } from '../types/stack';\nimport { DeletableImage } from '../components/DeletableImage';\nimport { FAB, Text, Snackbar } from 'react-native-paper';\nimport Carousel from 'react-native-reanimated-carousel';\nimport { identifyPlant } from '../api/plant_id';\nimport { LocationContext } from '../api/location';\n\nexport function ImageMethod({ navigation }: ImageMethodProps) {\n\tconst [images, setImages] = useState<ImageType[]>([]);\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\tconst [buttonOnHold, setButtonOnHold] = React.useState<boolean>(false);\n\tconst [visibleAlert, setVisiblAlert] = React.useState(false);\n\tconst [errorMessage, setErrorMessage] = React.useState('');\n\tconst locationContext = useContext(LocationContext);\n\n\tconst onDismissSnackBar = () => setVisiblAlert(false);\n\n\tconst pickImage = async (method) => {\n\t\tconst options = {\n\t\t\tmediaTypes: ImagePicker.MediaTypeOptions.Images,\n\t\t\tallowsEditing: false,\n\t\t};\n\n\t\tlet result: ImagePicker.ImagePickerResult = null;\n\n\t\tif (method == 'camera') {\n\t\t\tresult = await ImagePicker.launchCameraAsync(options);\n\t\t} else {\n\t\t\tresult = await ImagePicker.launchImageLibraryAsync(options);\n\t\t}\n\n\t\tif (!result.canceled) {\n\t\t\tconst newImage = {\n\t\t\t\tid: result.assets[0].assetId ? result.assets[0].assetId : images.length.toString(),\n\t\t\t\turi: result.assets[0].uri,\n\t\t\t};\n\t\t\tif (!images.some((image) => image.id === newImage.id)) {\n\t\t\t\tsetImages([...images, newImage]);\n\t\t\t}\n\t\t} else {\n\t\t\tsetErrorMessage('Você não adicionou nenhuma imagem.');\n\t\t\tsetVisiblAlert(true);\n\t\t}\n\t};\n\tconst removeImage = (id: string) => {\n\t\tconst newImages = [...images];\n\t\tconst index = newImages.findIndex((image) => image.id === id);\n\t\tif (index !== -1) {\n\t\t\tnewImages.splice(index, 1);\n\t\t\tsetImages(newImages);\n\t\t}\n\t};\n\n\tconst searchPlants = async () => {\n\t\tif (!buttonOnHold) {\n\t\t\tsetButtonOnHold(true);\n\t\t\ttry {\n\t\t\t\tconst result = await identifyPlant(\n\t\t\t\t\timages,\n\t\t\t\t\tlocationContext.latitude,\n\t\t\t\t\tlocationContext.longitude\n\t\t\t\t);\n\t\t\t\tif (result.is_plant) {\n\t\t\t\t\tnavigation.navigate('Result', result);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Nenhuma planta foi encontrada');\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tsetErrorMessage(error.message);\n\t\t\t\tsetVisiblAlert(true);\n\t\t\t} finally {\n\t\t\t\tsetButtonOnHold(false);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst width = Dimensions.get('window').width;\n\n\treturn (\n\t\t<>\n\t\t\t<View style={styles.container}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\tAdicione algumas fotos para podermos identificar sua planta!\n\t\t\t\t</Text>\n\t\t\t\t<View style={styles.row}>\n\t\t\t\t\t<FAB\n\t\t\t\t\t\ticon=\"camera\"\n\t\t\t\t\t\tlabel=\"Tirar foto\"\n\t\t\t\t\t\tonPress={() => pickImage('camera')}\n\t\t\t\t\t\tvisible\n\t\t\t\t\t\tstyle={[styles.fabStyle]}\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\ttestID=\"Tirar foto\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FAB\n\t\t\t\t\t\ticon=\"image\"\n\t\t\t\t\t\tlabel=\"Adicionar da galeria\"\n\t\t\t\t\t\tonPress={() => pickImage('gallery')}\n\t\t\t\t\t\tvisible\n\t\t\t\t\t\tstyle={[styles.fabStyle]}\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\ttestID=\"Adicionar da galeria\"\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t\t{images.length > 0 && (\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\t\talignContent: 'center',\n\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<Carousel\n\t\t\t\t\t\t\tpagingEnabled={true}\n\t\t\t\t\t\t\tsnapEnabled={true}\n\t\t\t\t\t\t\tmode={'horizontal-stack'}\n\t\t\t\t\t\t\tmodeConfig={{\n\t\t\t\t\t\t\t\tsnapDirection: 'left',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tloop={true}\n\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\tdata={images}\n\t\t\t\t\t\t\trenderItem={({ item }) => <DeletableImage image={item} remove={removeImage} />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FAB\n\t\t\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\t\t\tonPress={() => searchPlants()}\n\t\t\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\t\t\tdisabled={buttonOnHold}\n\t\t\t\t\t\t\ttestID=\"Method Continue\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t)}\n\t\t\t</View>\n\t\t\t<Snackbar\n\t\t\t\tvisible={visibleAlert}\n\t\t\t\taction={{\n\t\t\t\t\tlabel: 'OK',\n\t\t\t\t}}\n\t\t\t\tonDismiss={onDismissSnackBar}\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginBottom: 30,\n\t\t\t\t}}>\n\t\t\t\t{errorMessage}\n\t\t\t</Snackbar>\n\t\t</>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t\tpadding: 40,\n\t\tjustifyContent: 'center',\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'space-evenly',\n\t},\n\tfabStyle: {},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tright: 0,\n\t\tbottom: 0,\n\t},\n});\n","import Constants from 'expo-constants';\nimport { TreflePlantSearchResponse, TrefleSpeciesResponse } from './types';\n\nexport async function identifyPlant(query: string[]): Promise<TreflePlantSearchResponse> {\n\tconst { gardimApiUrl } = Constants.manifest.extra;\n\tconst response = await fetch(`${gardimApiUrl}/.netlify/functions/api/trefle`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(query),\n\t});\n\n\tconst result = await response.json();\n\treturn result;\n}\n\nexport async function getPlant(id: number): Promise<TrefleSpeciesResponse> {\n\tconst { gardimApiUrl } = Constants.manifest.extra;\n\tconst response = await fetch(`${gardimApiUrl}/.netlify/functions/api/trefle?id=${id}`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t});\n\n\tconst result = await response.json();\n\treturn result;\n}\n","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Text, Searchbar, Chip, FAB, HelperText, Snackbar } from 'react-native-paper';\nimport { TextMethodProps } from '../types/stack';\nimport { identifyPlant } from '../api/trefle';\n\nexport function TextMethod({ navigation }: TextMethodProps) {\n\tconst [searchQuery, setSearchQuery] = React.useState('');\n\tconst [chips, setChips] = React.useState([]);\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\tconst [buttonOnHold, setButtonOnHold] = React.useState<boolean>(false);\n\tconst [visibleAlert, setVisiblAlert] = React.useState(false);\n\tconst [errorMessage, setErrorMessage] = React.useState('');\n\n\tconst addChip = () => {\n\t\tconst queryString = searchQuery.trim();\n\n\t\tif (!chips.includes(queryString) && queryString) {\n\t\t\tsetChips((prevChips) => [...new Set([...prevChips, queryString])]);\n\t\t}\n\t\tsetSearchQuery('');\n\t};\n\n\tconst onDismissSnackBar = () => setVisiblAlert(false);\n\n\tconst removeChip = (chipToDelete) => {\n\t\tsetChips((prevChips) => prevChips.filter((currentChip) => currentChip !== chipToDelete));\n\t};\n\n\tconst onChangeSearch = (query) => {\n\t\tsetSearchQuery(query);\n\t\tif (query.endsWith(' ')) {\n\t\t\taddChip();\n\t\t}\n\t};\n\n\tconst onSubmit = (query) => {\n\t\tsetSearchQuery(query);\n\t\taddChip();\n\t};\n\n\tconst searchPlants = async () => {\n\t\tif (!buttonOnHold) {\n\t\t\tsetButtonOnHold(true);\n\t\t\ttry {\n\t\t\t\tconst result = await identifyPlant(chips);\n\t\t\t\tif (result.data.length) {\n\t\t\t\t\tnavigation.navigate('Result', result);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Nenhuma planta foi encontrada');\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tsetErrorMessage(error.message);\n\t\t\t\tsetVisiblAlert(true);\n\t\t\t} finally {\n\t\t\t\tsetButtonOnHold(false);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<View style={styles.container}>\n\t\t\t\t<View style={styles.row}>\n\t\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\t\tDigite algumas palavras-chave que nos ajude a identificar sua planta!\n\t\t\t\t\t</Text>\n\n\t\t\t\t\t<Searchbar\n\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\tvalue={searchQuery}\n\t\t\t\t\t\tonChangeText={onChangeSearch}\n\t\t\t\t\t\tstyle={styles.fabVariant}\n\t\t\t\t\t\tonSubmitEditing={onSubmit}\n\t\t\t\t\t/>\n\t\t\t\t\t<HelperText type=\"info\" visible>\n\t\t\t\t\t\tPressione enter ou espaço para dividir as palavras!\n\t\t\t\t\t</HelperText>\n\t\t\t\t\t<View style={styles.chipsContainer}>\n\t\t\t\t\t\t{chips.map((chip) => (\n\t\t\t\t\t\t\t<Chip key={chip} onClose={() => removeChip(chip)} style={styles.chip}>\n\t\t\t\t\t\t\t\t{chip}\n\t\t\t\t\t\t\t</Chip>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.row}>\n\t\t\t\t\t{chips.length > 0 && (\n\t\t\t\t\t\t<FAB\n\t\t\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\t\t\tonPress={() => searchPlants()}\n\t\t\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\t\t\tdisabled={buttonOnHold}\n\t\t\t\t\t\t\ttestID=\"Method Continue\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t\t<Snackbar\n\t\t\t\tvisible={visibleAlert}\n\t\t\t\taction={{\n\t\t\t\t\tlabel: 'OK',\n\t\t\t\t}}\n\t\t\t\tonDismiss={onDismissSnackBar}\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginBottom: 30,\n\t\t\t\t}}>\n\t\t\t\t{errorMessage}\n\t\t\t</Snackbar>\n\t\t</>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t\tpadding: 40,\n\t\tjustifyContent: 'space-around',\n\t},\n\trow: {\n\t\tflex: 1,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t},\n\tfabVariant: {\n\t\tmarginVertical: 20,\n\t},\n\tchipsContainer: {\n\t\tflexDirection: 'row',\n\t\tflexWrap: 'wrap',\n\t\tmarginTop: 8,\n\t\tjustifyContent: 'flex-start',\n\t},\n\tchip: {\n\t\tmargin: 4,\n\t},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tright: 0,\n\t\tbottom: 0,\n\t},\n});\n","import React, { useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, Text } from 'react-native-paper';\n\ntype PlantOptionsListProps = {\n\tinfo: {\n\t\tid: number;\n\t\tname: string;\n\t\tprobability: number | null;\n\t}[];\n\tonOptionSelect: (id: string) => void;\n};\n\nexport const PlantOptionsList = ({ info, onOptionSelect }: PlantOptionsListProps) => {\n\tconst [selectedId, setSelectedId] = useState(null);\n\n\tconst handleOptionSelect = (optionId) => {\n\t\tonOptionSelect(optionId);\n\t\tif (selectedId == optionId) {\n\t\t\tsetSelectedId(null);\n\t\t} else {\n\t\t\tsetSelectedId(optionId);\n\t\t}\n\t};\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t{info.map((option) => (\n\t\t\t\t<Card\n\t\t\t\t\tonPress={() => handleOptionSelect(option.id)}\n\t\t\t\t\tkey={option.id}\n\t\t\t\t\tstyle={styles.card}\n\t\t\t\t\tmode={selectedId === option.id ? 'contained' : 'elevated'}\n\t\t\t\t\ttestID=\"CardComponent\">\n\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t<Text variant=\"titleMedium\">{option.name}</Text>\n\t\t\t\t\t\t{option.probability ? (\n\t\t\t\t\t\t\t<Text style={styles.probability}>\n\t\t\t\t\t\t\t\tProbabilidade de acerto: {option.probability.toFixed(2)}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</Card.Content>\n\t\t\t\t</Card>\n\t\t\t))}\n\t\t</View>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tpadding: 16,\n\t},\n\tcard: {\n\t\tmarginBottom: 8,\n\t},\n\tprobability: {\n\t\tmarginTop: 4,\n\t\tfontSize: 12,\n\t\tcolor: '#666',\n\t},\n});\n","import { Range } from '../types';\n\nexport const PH_MINIMUM = 4;\nexport const PH_MAXIMUM = 5;\n\nexport const LIGHT_MINIMUM = 1000;\nexport const LIGHT_MAXIMUM = 10000;\n\nexport const ATMOSPHERIC_HUMIDITY_MINIMUM = 7;\nexport const ATMOSPHERIC_HUMIDITY_MAXIMUM = 4;\n\nexport const TEMPERATURE_MINIMUM = 15;\nexport const TEMPERATURE_MAXIMUM = 27;\n\nexport const SOIL_HUMIDITY_MINIMUM = 4;\nexport const SOIL_HUMIDITY_MAXIMUM = 6;\n\nexport const CELL_COUNT = 6;\n\nexport const PERCENTAGE: Range = {\n\tmin: 0,\n\tmax: 100,\n};\n\nexport const LUX: Range = {\n\tmin: 0,\n\tmax: 100000,\n};\n\nexport const TEMPERATURE: Range = {\n\tmin: -60,\n\tmax: 60,\n};\n","import { Range } from '../types';\nimport { TEMPERATURE } from './defaults';\n\nexport function convertScale(num: number): number {\n\tnum -= 1;\n\treturn Math.round(num * 3.33) + 1;\n}\n\nexport function temperatureToValue(temperature: number): number {\n\tconst minTemp = TEMPERATURE.min;\n\tconst maxTemp = TEMPERATURE.max;\n\n\tif (temperature < minTemp || temperature > maxTemp) {\n\t\tthrow new Error(`Temperature value ${temperature} is out of range.`);\n\t}\n\n\tconst t = (temperature - minTemp) / (maxTemp - minTemp);\n\n\tconst value = 1 + t * 9;\n\n\treturn Math.round(value);\n}\n\nexport function percentageToValue(value: number): number {\n\tconst base10 = Math.round(value / 10);\n\treturn Math.max(base10, 1);\n}\n\nexport function scaleRange(range: Range): Range {\n\tconst rangeSize = range.max - range.min;\n\tconst scaleFactor = 10 / rangeSize;\n\treturn {\n\t\tmin: 0,\n\t\tmax: Math.ceil((range.max - range.min) * scaleFactor),\n\t};\n}\n\nexport function luxToValue(value: number): number {\n\tlet scaleValue = value / 10000;\n\tif (scaleValue > 10) {\n\t\tscaleValue = 10;\n\t}\n\treturn scaleValue;\n}\n","import { TrefleSpeciesResponse } from '../api/trefle/types';\nimport { Suggestion } from '../api/plant_id/types';\nimport uuid from 'react-native-uuid';\n\nimport { Plant } from '../types';\nimport {\n\tPH_MINIMUM,\n\tPH_MAXIMUM,\n\tLIGHT_MINIMUM,\n\tLIGHT_MAXIMUM,\n\tATMOSPHERIC_HUMIDITY_MINIMUM,\n\tATMOSPHERIC_HUMIDITY_MAXIMUM,\n\tTEMPERATURE_MINIMUM,\n\tTEMPERATURE_MAXIMUM,\n\tSOIL_HUMIDITY_MINIMUM,\n\tSOIL_HUMIDITY_MAXIMUM,\n} from './defaults';\nimport { convertScale } from '.';\n\nexport const mapToPlant = (info: TrefleSpeciesResponse | Suggestion): Plant => {\n\tconst isTrefle = (info as TrefleSpeciesResponse)?.data !== undefined;\n\tconst plantDetails: Plant = {\n\t\tid: uuid.v4().toString(),\n\t\tname: null,\n\t\tcode: null,\n\t\tcommon_name: null,\n\t\tscientific_name: null,\n\t\tedible_parts: null,\n\t\tph_maximum: PH_MAXIMUM,\n\t\tph_minimum: PH_MINIMUM,\n\t\tlight_minimum: LIGHT_MINIMUM,\n\t\tlight_maximum: LIGHT_MAXIMUM,\n\t\tatmospheric_humidity_minimum: ATMOSPHERIC_HUMIDITY_MINIMUM,\n\t\tatmospheric_humidity_maximum: ATMOSPHERIC_HUMIDITY_MAXIMUM,\n\t\ttemperature_minimum: TEMPERATURE_MINIMUM,\n\t\ttemperature_maximum: TEMPERATURE_MAXIMUM,\n\t\tsoil_humidity_minimum: SOIL_HUMIDITY_MINIMUM,\n\t\tsoil_humidity_maximum: SOIL_HUMIDITY_MAXIMUM,\n\t};\n\n\tif (isTrefle) {\n\t\tconst trefleData = (info as TrefleSpeciesResponse).data;\n\t\tplantDetails.id = uuid.v4().toString();\n\t\tplantDetails.common_name = trefleData.common_name ?? plantDetails.common_name;\n\t\tplantDetails.scientific_name = trefleData.scientific_name ?? plantDetails.scientific_name;\n\t\tplantDetails.edible_parts = trefleData.edible_part ?? plantDetails.edible_parts;\n\t\tplantDetails.ph_maximum = trefleData.growth?.ph_maximum ?? plantDetails.ph_maximum;\n\t\tplantDetails.ph_minimum = trefleData.growth?.ph_minimum ?? plantDetails.ph_minimum;\n\t\tplantDetails.light_minimum = trefleData.growth?.light - 2 ?? plantDetails.light_minimum;\n\t\tplantDetails.light_maximum = trefleData.growth?.light + 2 ?? plantDetails.light_maximum;\n\n\t\tplantDetails.atmospheric_humidity_minimum =\n\t\t\ttrefleData.growth?.atmospheric_humidity - 2 ?? plantDetails.atmospheric_humidity_minimum;\n\n\t\tplantDetails.atmospheric_humidity_maximum =\n\t\t\ttrefleData.growth?.atmospheric_humidity + 2 ?? plantDetails.atmospheric_humidity_maximum;\n\n\t\tplantDetails.temperature_minimum =\n\t\t\ttrefleData.growth?.minimum_temperature?.deg_c ?? plantDetails.temperature_minimum;\n\n\t\tplantDetails.temperature_maximum =\n\t\t\ttrefleData.growth?.maximum_temperature?.deg_c ?? plantDetails.temperature_maximum;\n\n\t\tplantDetails.soil_humidity_minimum = trefleData.growth?.soil_humidity\n\t\t\t? trefleData.growth.soil_humidity - 2\n\t\t\t: plantDetails.soil_humidity_minimum;\n\n\t\tplantDetails.soil_humidity_maximum = trefleData.growth?.soil_humidity\n\t\t\t? trefleData.growth.soil_humidity + 2\n\t\t\t: plantDetails.soil_humidity_maximum;\n\t} else {\n\t\tconst plantIdData = info as Suggestion;\n\t\tplantDetails.id = plantIdData.plant_name;\n\t\tplantDetails.common_name = plantIdData.plant_name ?? plantDetails.common_name;\n\t\tplantDetails.scientific_name =\n\t\t\tplantIdData.plant_details?.scientific_name ?? plantDetails.scientific_name;\n\t\tplantDetails.edible_parts =\n\t\t\tplantIdData.plant_details?.edible_parts ?? plantDetails.edible_parts;\n\t\tplantDetails.soil_humidity_minimum =\n\t\t\tconvertScale(plantIdData.plant_details?.watering?.min) ??\n\t\t\tplantDetails.soil_humidity_minimum;\n\t\tplantDetails.soil_humidity_maximum =\n\t\t\tconvertScale(plantIdData.plant_details?.watering?.max) ??\n\t\t\tplantDetails.soil_humidity_maximum;\n\t}\n\n\treturn plantDetails;\n};\n","import React, { useState, useContext } from 'react';\nimport { View, StyleSheet, ScrollView, Dimensions, Platform } from 'react-native';\nimport { PlantOptionsList } from '../components/PlantOptionsList';\nimport { ResultProps } from '../types/stack';\nimport { Text, FAB } from 'react-native-paper';\nimport { PlantIDResponse } from '../api/plant_id/types';\nimport { TreflePlantSearchResponse } from '../api/trefle/types';\nimport { getPlant } from '../api/trefle';\nimport { PlantContext } from '../context';\nimport { mapToPlant } from '../utils/mapper';\n\nexport function Result({ navigation, route }: ResultProps) {\n\tconst [selectedOption, setSelectedOption] = useState(null);\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\tconst [buttonOnHold, setButtonOnHold] = React.useState<boolean>(false);\n\n\tconst plantResult = route.params;\n\tconst isTrefle = (plantResult as PlantIDResponse).suggestions ? false : true;\n\tlet height = Dimensions.get('window').height;\n\n\tconst plantContext = useContext(PlantContext);\n\n\tif (Platform.OS === 'web') {\n\t\theight -= 100;\n\t}\n\n\tconst handleSelect = (optionId) => {\n\t\tif (selectedOption == optionId) {\n\t\t\tsetSelectedOption(null);\n\t\t} else {\n\t\t\tsetSelectedOption(optionId);\n\t\t}\n\t};\n\n\tconst handleContinue = async () => {\n\t\tlet plant = null;\n\t\tif (isTrefle) {\n\t\t\tif (!buttonOnHold) {\n\t\t\t\tsetButtonOnHold(true);\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await getPlant(selectedOption);\n\t\t\t\t\tif (result.data) {\n\t\t\t\t\t\tplant = mapToPlant(result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Trefle Species not found');\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert('Oops! Algo deu errado');\n\t\t\t\t} finally {\n\t\t\t\t\tsetButtonOnHold(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst plantSelected = (plantResult as PlantIDResponse).suggestions.find(\n\t\t\t\t(it) => it.id === selectedOption\n\t\t\t);\n\n\t\t\tconsole.log(JSON.stringify(plantSelected));\n\n\t\t\tplant = mapToPlant(plantSelected);\n\t\t}\n\n\t\tplantContext.updatePlant(plant);\n\t\tnavigation.navigate('Name');\n\t};\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<View style={styles.row}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\tSelecione o resultado da busca\n\t\t\t\t</Text>\n\t\t\t\t<ScrollView style={{ maxHeight: height }}>\n\t\t\t\t\t{(plantResult as PlantIDResponse).suggestions ? (\n\t\t\t\t\t\t<PlantOptionsList\n\t\t\t\t\t\t\tinfo={(plantResult as PlantIDResponse).suggestions.map((it) => ({\n\t\t\t\t\t\t\t\tid: it.id,\n\t\t\t\t\t\t\t\tname: it.plant_name,\n\t\t\t\t\t\t\t\tprobability: it.probability,\n\t\t\t\t\t\t\t}))}\n\t\t\t\t\t\t\tonOptionSelect={handleSelect}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<PlantOptionsList\n\t\t\t\t\t\t\tinfo={(plantResult as TreflePlantSearchResponse).data\n\t\t\t\t\t\t\t\t.filter((it) => it.common_name != null)\n\t\t\t\t\t\t\t\t.map((it) => ({\n\t\t\t\t\t\t\t\t\tid: it.id,\n\t\t\t\t\t\t\t\t\tname: it.common_name,\n\t\t\t\t\t\t\t\t\tprobability: null,\n\t\t\t\t\t\t\t\t}))}\n\t\t\t\t\t\t\tonOptionSelect={handleSelect}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</ScrollView>\n\t\t\t</View>\n\t\t\t{selectedOption && (\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\tonPress={() => handleContinue()}\n\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\tdisabled={buttonOnHold}\n\t\t\t\t\ttestID=\"Result Continue\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t\tjustifyContent: 'flex-start',\n\t},\n\trow: {\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'space-evenly',\n\t},\n\tfabStyle: {},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tright: 0,\n\t\tbottom: 0,\n\t\tmargin: 40,\n\t},\n});\n","import React, { useContext } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Text, TextInput, FAB } from 'react-native-paper';\nimport { NameProps } from '../types/stack';\nimport { PlantContext } from '../context';\n\nexport function Name({ navigation }: NameProps) {\n\tconst [text, setText] = React.useState('');\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\n\tconst plantContext = useContext(PlantContext);\n\n\tconst handleSubmit = () => {\n\t\tplantContext.updatePlantName(text);\n\t\tnavigation.navigate('Code');\n\t};\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<View style={styles.row}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\t{' '}\n\t\t\t\t\tDê um nome à sua planta!\n\t\t\t\t</Text>\n\t\t\t\t<TextInput\n\t\t\t\t\tmode=\"flat\"\n\t\t\t\t\tvalue={text}\n\t\t\t\t\tonChangeText={(text) => setText(text)}\n\t\t\t\t\tstyle={styles.fabVariant}\n\t\t\t\t\tonSubmitEditing={() => handleSubmit()}\n\t\t\t\t\ttestID=\"input-nome\"\n\t\t\t\t/>\n\t\t\t</View>\n\t\t\t{text.length > 0 && (\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\tonPress={() => handleSubmit()}\n\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\ttestID=\"Name Continue\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t</View>\n\t);\n}\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t\tpadding: 40,\n\t},\n\tfabVariant: {\n\t\tmarginVertical: 20,\n\t},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tmargin: 40,\n\t\tright: 0,\n\t\tbottom: 0,\n\t},\n});\n","import React, { useState, useContext, useEffect } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n\tCodeField,\n\tCursor,\n\tuseBlurOnFulfill,\n\tuseClearByFocusCell,\n} from 'react-native-confirmation-code-field';\nimport { Text, useTheme, FAB } from 'react-native-paper';\nimport { CELL_COUNT } from '../utils/defaults';\nimport { CodeProps } from '../types/stack';\nimport { PlantContext } from '../context';\nimport { storeData } from '../storage/index';\n\nexport function Code({ navigation }: CodeProps) {\n\tconst [value, setValue] = useState('');\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\tconst ref = useBlurOnFulfill({ value, cellCount: CELL_COUNT });\n\tconst [props, getCellOnLayoutHandler] = useClearByFocusCell({\n\t\tvalue,\n\t\tsetValue,\n\t});\n\n\tconst theme = useTheme();\n\tconst plantContext = useContext(PlantContext);\n\n\tuseEffect(() => {\n\t\tif (plantContext.plant && plantContext.plant.code) {\n\t\t\tstoreData(plantContext.plant);\n\t\t}\n\t}, [plantContext.plant]);\n\n\tconst onPress = () => {\n\t\tplantContext.updatePlantCode(value);\n\t\tnavigation.navigate('Home', { success: true });\n\t};\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<View style={styles.row}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\t{' '}\n\t\t\t\t\tDigite o código do componente\n\t\t\t\t</Text>\n\t\t\t\t<CodeField\n\t\t\t\t\tref={ref}\n\t\t\t\t\t{...props}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChangeText={setValue}\n\t\t\t\t\tcellCount={CELL_COUNT}\n\t\t\t\t\trootStyle={styles.codeFieldRoot}\n\t\t\t\t\tkeyboardType=\"numeric\"\n\t\t\t\t\ttextContentType=\"oneTimeCode\"\n\t\t\t\t\tonEndEditing={onPress}\n\t\t\t\t\ttestID=\"code-field\"\n\t\t\t\t\trenderCell={({ index, symbol, isFocused }) => (\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tstyle={[themedStyles(theme).cell, isFocused && themedStyles(theme).focusCell]}\n\t\t\t\t\t\t\tonLayout={getCellOnLayoutHandler(index)}>\n\t\t\t\t\t\t\t{symbol || (isFocused ? <Cursor /> : null)}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t\t{value.length >= 6 && (\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\tonPress={onPress}\n\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\ttestID=\"Code Continue\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t\tpadding: 40,\n\t},\n\tfabVariant: {\n\t\tmarginVertical: 20,\n\t},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tmargin: 40,\n\t\tright: 0,\n\t\tbottom: 0,\n\t},\n\tcodeFieldRoot: { margin: 20, display: 'flex', minWidth: '50%', alignSelf: 'center' },\n});\n\nconst themedStyles = (theme) =>\n\tStyleSheet.create({\n\t\tfocusCell: {\n\t\t\tborderColor: theme.colors.secondaryContainer,\n\t\t},\n\t\tcell: {\n\t\t\tmaxWidth: 40,\n\t\t\twidth: '15%',\n\t\t\tmarginHorizontal: 5,\n\t\t\theight: 50,\n\t\t\tlineHeight: 38,\n\t\t\tfontSize: 24,\n\t\t\tborderWidth: 2,\n\t\t\tborderColor: theme.colors.outline,\n\t\t\tborderRadius: 10,\n\t\t\ttextAlign: 'center',\n\t\t},\n\t});\n","import { Slider } from '@miblanchard/react-native-slider';\nimport React, { useRef, useEffect, useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Range } from '../types';\nimport { scaleRange } from '../utils';\n\ntype LinearGaugeChartProps = {\n\tmin: number;\n\tmax: number;\n\tvalue: number;\n\trange: Range;\n\tconversor?: (value: number) => number | null;\n};\n\nexport const LinearGaugeChart = ({ min, max, value, range, conversor }: LinearGaugeChartProps) => {\n\tconst [sliderValue, setSliderValue] = useState(value);\n\n\tuseEffect(() => {\n\t\tsetSliderValue(value);\n\t}, [value]);\n\n\tconst scaledRange = scaleRange(range);\n\n\tlet scaledMin = min;\n\tlet scaledMax = max;\n\n\tif (conversor) {\n\t\tscaledMin = conversor(min);\n\t\tscaledMax = conversor(max);\n\t}\n\n\tconst sectionColors = Array.from({ length: scaledRange.max }, (_, i) => {\n\t\tconst value = i + 1;\n\t\tif (value >= scaledMin && value <= scaledMax) {\n\t\t\treturn '#B0D8A4';\n\t\t} else if ((value === scaledMin - 1 && value !== 0) || value === scaledMax + 1) {\n\t\t\treturn '#FEE191';\n\t\t} else {\n\t\t\treturn '#E84258';\n\t\t}\n\t});\n\n\tconst sliderRef = useRef(null);\n\n\treturn (\n\t\t<View style={{ position: 'relative' }}>\n\t\t\t<View style={[styles.line]}>\n\t\t\t\t{sectionColors.map((color, i) => (\n\t\t\t\t\t<View key={i} style={[styles.section, { backgroundColor: color }]} />\n\t\t\t\t))}\n\t\t\t</View>\n\t\t\t<Slider\n\t\t\t\tref={sliderRef}\n\t\t\t\tminimumValue={range.min}\n\t\t\t\tmaximumValue={range.max}\n\t\t\t\tstep={1}\n\t\t\t\tvalue={sliderValue}\n\t\t\t\tminimumTrackTintColor=\"transparent\"\n\t\t\t\tmaximumTrackTintColor=\"transparent\"\n\t\t\t\tthumbTintColor=\"white\"\n\t\t\t\tthumbStyle={styles.thumbStyle}\n\t\t\t\tdisabled={true}\n\t\t\t/>\n\t\t</View>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tline: {\n\t\tflexDirection: 'row',\n\t\tposition: 'absolute',\n\t\ttop: 16,\n\t\tleft: 0,\n\t\tright: 0,\n\t},\n\tsection: {\n\t\tflex: 1,\n\t\theight: 10,\n\t},\n\tthumbStyle: {\n\t\tbackgroundColor: 'white',\n\t\televation: 5,\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tgradientContainer: {\n\t\tposition: 'absolute',\n\t\ttop: '50%',\n\t\tleft: 0,\n\t\tright: 0,\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\televation: 5,\n\t\toverflow: 'hidden',\n\t},\n});\n","import React, { createContext, useEffect, useState, ReactNode, useMemo, useContext } from 'react';\nimport io from 'socket.io-client';\nimport Constants from 'expo-constants';\nimport { SocketPayload } from './types';\nimport uuid from 'react-native-uuid';\nimport { PlantContext } from '../../context';\n\ntype SocketResponse = {\n\tsoilValue: number;\n\tluxValue: number;\n\tcode: string;\n};\n\nexport const SocketContext = createContext<SocketResponse>({\n\tsoilValue: null,\n\tluxValue: null,\n\tcode: null,\n});\n\ninterface SocketProviderProps {\n\tchildren: ReactNode;\n}\n\nexport const SocketProvider = ({ children }: SocketProviderProps) => {\n\tconst [soilValue, setSoilValue] = useState<number>(null);\n\tconst [luxValue, setLuxValue] = useState<number>(null);\n\tconst [code, setCode] = useState<string>(null);\n\tconst { socketUrl, enableSocket } = Constants.manifest.extra;\n\tconst plantContext = useContext(PlantContext);\n\n\tconst userId = uuid.v4();\n\n\tconst socket = io(socketUrl, {\n\t\ttransports: ['websocket'],\n\t\tquery: {\n\t\t\tuserId: userId,\n\t\t},\n\t});\n\n\tuseEffect(() => {\n\t\tif (enableSocket){\n\t\t\tsocket.on('connect', () => {\n\t\t\t\tconsole.log('Connected to server');\n\t\t\t});\n\n\t\t\tsocket.on('disconnect', () => {\n\t\t\t\tconsole.log('Disconnected from server');\n\t\t\t});\n\n\t\t\tif (plantContext.plant?.code) {\n\t\t\t\tconsole.log(plantContext.plant.code);\n\t\t\t\tsetCode(plantContext.plant.code);\n\t\t\t\tsocket.on(`gardim/esp32/${plantContext.plant.code}/soil`, (data: SocketPayload) => {\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\tconst parsedData = data;\n\t\t\t\t\tsetSoilValue(Number(parsedData.parsed.toFixed(2)));\n\t\t\t\t});\n\n\t\t\t\tsocket.on(`gardim/esp32/${plantContext.plant.code}/lux`, (data: SocketPayload) => {\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\tconst parsedData = data;\n\t\t\t\t\tsetLuxValue(parsedData.parsed);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsocket.on('error', (error: unknown) => {\n\t\t\t\tconsole.log('Socket error:', error);\n\t\t\t});\n\n\t\t\treturn () => {\n\t\t\t\tsocket.disconnect();\n\t\t\t};}\n\t}, [plantContext.plant?.code]);\n\n\tconst contextValue = useMemo(() => {\n\t\treturn {\n\t\t\tsoilValue,\n\t\t\tluxValue,\n\t\t\tcode,\n\t\t};\n\t}, [soilValue, luxValue]);\n\n\treturn <SocketContext.Provider value={contextValue}>{children}</SocketContext.Provider>;\n};\n","import React, { createContext, useEffect, useState, ReactNode, useMemo, useContext } from 'react';\nimport Constants from 'expo-constants';\nimport { WeatherstackResponse } from './types';\nimport { LocationContext } from '../location';\n\nasync function getWeather(latitude: string, longitude: string): Promise<WeatherstackResponse> {\n\tconst { gardimApiUrl } = Constants.manifest.extra;\n\tconst response = await fetch(`${gardimApiUrl}/.netlify/functions/api/weather`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'text/plain',\n\t\t},\n\t\tbody: `${latitude},${longitude}`,\n\t});\n\n\tconst result = await response.json();\n\tconsole.log(result);\n\treturn result;\n}\n\ntype WeatherContextType = {\n\tweather: WeatherstackResponse | null;\n\tisLoading: boolean;\n\terror: Error | null;\n};\n\nexport const WeahterContext = createContext<WeatherContextType>({\n\tweather: null,\n\tisLoading: null,\n\terror: null,\n});\n\ninterface WeatherProviderProps {\n\tchildren: ReactNode;\n}\n\nexport const WeatherProvider = ({ children }: WeatherProviderProps) => {\n\tconst [weather, setWeather] = useState<WeatherstackResponse | null>(null);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [error, setError] = useState<Error | null>(null);\n\tconst { latitude, longitude, granted } = useContext(LocationContext);\n\n\tuseEffect(() => {\n\t\tasync function fetchWeather() {\n\t\t\ttry {\n\t\t\t\tif (latitude != undefined && longitude != undefined) {\n\t\t\t\t\tconst result = await getWeather(latitude, longitude);\n\t\t\t\t\tconsole.log(result);\n\t\t\t\t\tsetWeather(result);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tsetError(err);\n\t\t\t} finally {\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t}\n\t\tif (granted) {\n\t\t\tsetIsLoading(true);\n\t\t\tfetchWeather();\n\t\t}\n\t}, [latitude, longitude, granted]);\n\n\tconst contextValue = useMemo(() => {\n\t\treturn { weather, isLoading, error };\n\t}, [weather, isLoading, error]);\n\n\treturn <WeahterContext.Provider value={contextValue}>{children}</WeahterContext.Provider>;\n};\n","import React, { useContext } from 'react';\nimport { View, ScrollView } from 'react-native';\nimport { Text, Card, Avatar, ActivityIndicator } from 'react-native-paper';\nimport { LinearGaugeChart } from '../components/LinearGaugeChart';\nimport { PlantContext } from '../context';\nimport { SocketContext } from '../api/socket';\nimport { WeahterContext } from '../api/weatherstack';\nimport { temperatureToValue } from '../utils/index';\nimport { LUX, PERCENTAGE, TEMPERATURE } from '../utils/defaults';\nimport { AntDesign } from '@expo/vector-icons';\nimport { Plant } from '../types';\nimport { WeatherstackResponse } from '../api/weatherstack/types';\n\nexport function Status() {\n\tconst { plant } = useContext(PlantContext);\n\tconst { soilValue, luxValue, code } = useContext(SocketContext);\n\tconst { weather, isLoading } = useContext(WeahterContext);\n\n\tconst renderSoil = !!(soilValue && code == plant.code);\n\tconst renderLux = !!(luxValue && code == plant.code);\n\n\treturn (\n\t\t<View style={{ flex: 1 }}>\n\t\t\t{!renderLux && !renderSoil && !weather ? (\n\t\t\t\t(isLoading && <Loading />) || <NoData />\n\t\t\t) : (\n\t\t\t\t<ScrollView>\n\t\t\t\t\t{renderSoil && <SoilCard plant={plant} soilValue={soilValue} />}\n\t\t\t\t\t{renderLux && <LuxCard plant={plant} luxValue={luxValue} />}\n\t\t\t\t\t{weather && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<UmidityCard weather={weather} plant={plant} />\n\t\t\t\t\t\t\t<TemperatureCard weather={weather} plant={plant} />\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</ScrollView>\n\t\t\t)}\n\t\t</View>\n\t);\n}\n\ninterface SoilCardProps {\n\tsoilValue: number;\n\tplant: Plant;\n}\n\ninterface LuxCardProps {\n\tluxValue: number;\n\tplant: Plant;\n}\n\ninterface WeatherCardProps {\n\tweather: WeatherstackResponse;\n\tplant: Plant;\n}\n\nconst Loading = () => {\n\treturn (\n\t\t<View\n\t\t\tstyle={{\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\talignContent: 'center',\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tflex: 1,\n\t\t\t\tflexDirection: 'column',\n\t\t\t}}>\n\t\t\t<ActivityIndicator animating={true} size={'large'} />\n\t\t</View>\n\t);\n};\n\nconst NoData = () => {\n\treturn (\n\t\t<View\n\t\t\tstyle={{\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\talignContent: 'center',\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tflex: 1,\n\t\t\t\tflexDirection: 'column',\n\t\t\t}}>\n\t\t\t<AntDesign name=\"frowno\" size={24} color=\"black\" style={{ alignSelf: 'center' }} />\n\t\t\t<Text variant=\"titleLarge\" style={{ alignSelf: 'center' }}>\n\t\t\t\tOops! Parece que você não tem nada habilitado para essa planta\n\t\t\t</Text>\n\t\t</View>\n\t);\n};\n\nconst SoilCard = ({ soilValue, plant }: SoilCardProps) => {\n\treturn (\n\t\t<Card style={{ marginVertical: 10, marginHorizontal: 20 }}>\n\t\t\t<Card.Title\n\t\t\t\ttitle=\"Umidade do Solo\"\n\t\t\t\tleft={(props) => <Avatar.Icon {...props} icon=\"water-alert-outline\" />}\n\t\t\t/>\n\t\t\t<Card.Content>\n\t\t\t\t<LinearGaugeChart\n\t\t\t\t\tmin={plant.soil_humidity_minimum}\n\t\t\t\t\tmax={plant.soil_humidity_maximum}\n\t\t\t\t\tvalue={soilValue}\n\t\t\t\t\trange={PERCENTAGE}\n\t\t\t\t/>\n\t\t\t</Card.Content>\n\t\t\t<Card.Actions>\n\t\t\t\t<Text>{soilValue}%</Text>\n\t\t\t</Card.Actions>\n\t\t</Card>\n\t);\n};\n\nconst LuxCard = ({ luxValue, plant }: LuxCardProps) => {\n\treturn (\n\t\t<Card style={{ marginVertical: 10, marginHorizontal: 20 }}>\n\t\t\t<Card.Title\n\t\t\t\ttitle=\"Luminosidade\"\n\t\t\t\tleft={(props) => <Avatar.Icon {...props} icon=\"lightbulb-on-outline\" />}\n\t\t\t/>\n\t\t\t<Card.Content>\n\t\t\t\t<LinearGaugeChart\n\t\t\t\t\tmin={plant.light_minimum}\n\t\t\t\t\tmax={plant.light_maximum}\n\t\t\t\t\tvalue={luxValue}\n\t\t\t\t\trange={LUX}\n\t\t\t\t/>\n\t\t\t</Card.Content>\n\t\t\t<Card.Actions>\n\t\t\t\t<Text>{luxValue} LUX</Text>\n\t\t\t</Card.Actions>\n\t\t</Card>\n\t);\n};\n\nconst UmidityCard = ({ weather, plant }: WeatherCardProps) => {\n\treturn (\n\t\t<Card style={{ marginVertical: 10, marginHorizontal: 20 }}>\n\t\t\t<Card.Title\n\t\t\t\ttitle=\"Umidade do Ambiente\"\n\t\t\t\tleft={(props) => <Avatar.Icon {...props} icon=\"weather-rainy\" />}\n\t\t\t/>\n\t\t\t<Card.Content>\n\t\t\t\t<LinearGaugeChart\n\t\t\t\t\tmin={plant.atmospheric_humidity_minimum}\n\t\t\t\t\tmax={plant.atmospheric_humidity_maximum}\n\t\t\t\t\tvalue={weather.current.humidity}\n\t\t\t\t\trange={PERCENTAGE}\n\t\t\t\t/>\n\t\t\t</Card.Content>\n\t\t\t<Card.Actions>\n\t\t\t\t<Text>{weather.current.humidity}%</Text>\n\t\t\t</Card.Actions>\n\t\t</Card>\n\t);\n};\n\nconst TemperatureCard = ({ weather, plant }: WeatherCardProps) => {\n\treturn (\n\t\t<Card style={{ marginVertical: 10, marginHorizontal: 20 }}>\n\t\t\t<Card.Title\n\t\t\t\ttitle=\"Temperatura do Ambiente\"\n\t\t\t\tleft={(props) => <Avatar.Icon {...props} icon=\"sun-thermometer-outline\" />}\n\t\t\t/>\n\t\t\t<Card.Content>\n\t\t\t\t<LinearGaugeChart\n\t\t\t\t\tmin={plant.temperature_minimum}\n\t\t\t\t\tmax={plant.temperature_maximum}\n\t\t\t\t\tvalue={weather.current.temperature}\n\t\t\t\t\trange={TEMPERATURE}\n\t\t\t\t\tconversor={temperatureToValue}\n\t\t\t\t/>\n\t\t\t</Card.Content>\n\t\t\t<Card.Actions>\n\t\t\t\t<Text>{weather.current.temperature}°C</Text>\n\t\t\t</Card.Actions>\n\t\t</Card>\n\t);\n};\n","import { Fontisto } from '@expo/vector-icons';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport React, { useLayoutEffect, useContext } from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { Status } from '../screens/Status';\nimport { PlantContext } from '../context';\nimport { RootTabNavigationProps } from '../types/stack';\n\nconst Tab = createMaterialBottomTabNavigator();\n\nexport function RootTabNavigation({ navigation, route }: RootTabNavigationProps) {\n\tconst theme = useTheme();\n\n\tconst plantContext = useContext(PlantContext);\n\tconst plant = plantContext.plant;\n\n\tuseLayoutEffect(() => {\n\t\tnavigation.setOptions({\n\t\t\ttitle: plant.name,\n\t\t});\n\t}, [navigation, route]);\n\n\treturn (\n\t\t<Tab.Navigator>\n\t\t\t<Tab.Screen\n\t\t\t\tname=\"Status\"\n\t\t\t\tcomponent={Status}\n\t\t\t\toptions={{\n\t\t\t\t\ttabBarLabel: 'Status',\n\t\t\t\t\ttabBarIcon: () => (\n\t\t\t\t\t\t<Fontisto name=\"heartbeat-alt\" size={24} color={theme.colors.primary} />\n\t\t\t\t\t),\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Tab.Navigator>\n\t);\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport { Home } from '../screens/Home';\nimport { Header } from '../components/Header';\nimport IdentificationMethod from '../screens/IdentificationMethod';\nimport { ImageMethod } from '../screens/ImageMethod';\nimport { TextMethod } from '../screens/TextMethod';\nimport { Result } from '../screens/Result';\nimport { Name } from '../screens/Name';\nimport { Code } from '../screens/Code';\nimport { RootTabNavigation } from './RootTabNavigation';\n\nconst Stack = createStackNavigator();\n\nexport default function RootStackNavigator() {\n\treturn (\n\t\t<Stack.Navigator\n\t\t\tinitialRouteName=\"Home\"\n\t\t\tscreenOptions={{\n\t\t\t\theader: Header,\n\t\t\t}}>\n\t\t\t<Stack.Screen name=\"Home\" component={Home} options={{ title: 'Suas Plantas' }} />\n\t\t\t<Stack.Screen\n\t\t\t\tname=\"IdentificationMethod\"\n\t\t\t\tcomponent={IdentificationMethod}\n\t\t\t\toptions={{ title: 'Método de Identificação' }}\n\t\t\t/>\n\t\t\t<Stack.Screen\n\t\t\t\tname=\"ImageMethod\"\n\t\t\t\tcomponent={ImageMethod}\n\t\t\t\toptions={{ title: 'Identificação por imagem' }}\n\t\t\t/>\n\t\t\t<Stack.Screen\n\t\t\t\tname=\"TextMethod\"\n\t\t\t\tcomponent={TextMethod}\n\t\t\t\toptions={{ title: 'Identificação por texto' }}\n\t\t\t/>\n\t\t\t<Stack.Screen name=\"Result\" component={Result} options={{ title: 'Resultado' }} />\n\t\t\t<Stack.Screen name=\"Name\" component={Name} options={{ title: 'Nome' }} />\n\t\t\t<Stack.Screen name=\"Code\" component={Code} options={{ title: 'Código' }} />\n\t\t\t<Stack.Screen name=\"RootTabNavigation\" component={RootTabNavigation} />\n\t\t</Stack.Navigator>\n\t);\n}\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Drawer, Switch, Text, TouchableRipple, useTheme } from 'react-native-paper';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { PreferencesContext } from './PreferencesContext';\n\nexport default function DrawerContent() {\n\tconst insets = useSafeAreaInsets();\n\n\tconst { toggleTheme, isThemeDark } = React.useContext(PreferencesContext);\n\tconst theme = useTheme();\n\n\treturn (\n\t\t<Drawer.Section\n\t\t\ttitle=\"Preferences\"\n\t\t\tstyle={{\n\t\t\t\tflex: 1,\n\t\t\t\tpaddingTop: insets.top + 4,\n\t\t\t\tbackgroundColor: theme.colors.background,\n\t\t\t\tmarginBottom: 0,\n\t\t\t}}>\n\t\t\t<TouchableRipple onPress={toggleTheme}>\n\t\t\t\t<View style={[styles.preference]}>\n\t\t\t\t\t<Text variant=\"labelLarge\">Dark Theme</Text>\n\t\t\t\t\t<View pointerEvents=\"none\">\n\t\t\t\t\t\t<Switch value={isThemeDark} testID=\"theme switch\" />\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</TouchableRipple>\n\t\t</Drawer.Section>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tdrawerContent: {\n\t\tflex: 1,\n\t},\n\tpreference: {\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'space-between',\n\t\talignItems: 'center',\n\t\tpaddingVertical: 12,\n\t\tpaddingHorizontal: 16,\n\t},\n\tv3Preference: {\n\t\theight: 56,\n\t\tpaddingHorizontal: 28,\n\t},\n\tbadge: {\n\t\talignSelf: 'center',\n\t},\n});\n","/* eslint-disable react/prop-types */\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport React from 'react';\n\nimport RootStackNavigator from './RootStackNavigator';\nimport DrawerContent from '../components/DrawerContent';\n\nconst Drawer = createDrawerNavigator();\n\nexport default function RootNavigation({ theme }) {\n\treturn (\n\t\t<NavigationContainer theme={theme}>\n\t\t\t<Drawer.Navigator\n\t\t\t\tinitialRouteName=\"Home\"\n\t\t\t\tdrawerContent={DrawerContent}\n\t\t\t\tscreenOptions={{\n\t\t\t\t\theaderShown: false,\n\t\t\t\t\tdrawerPosition: 'right',\n\t\t\t\t}}>\n\t\t\t\t<Drawer.Screen\n\t\t\t\t\tname=\"Root\"\n\t\t\t\t\tcomponent={RootStackNavigator}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\theaderTintColor: theme.colors.onBackground,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Drawer.Navigator>\n\t\t</NavigationContainer>\n\t);\n}\n","export const lightGreenColors = {\n\tcolors: {\n\t\tprimary: 'rgb(0, 107, 86)',\n\t\tonPrimary: 'rgb(255, 255, 255)',\n\t\tprimaryContainer: 'rgb(126, 248, 212)',\n\t\tonPrimaryContainer: 'rgb(0, 32, 24)',\n\t\tsecondary: 'rgb(75, 99, 91)',\n\t\tonSecondary: 'rgb(255, 255, 255)',\n\t\tsecondaryContainer: 'rgb(206, 233, 221)',\n\t\tonSecondaryContainer: 'rgb(7, 32, 25)',\n\t\ttertiary: 'rgb(65, 99, 118)',\n\t\tonTertiary: 'rgb(255, 255, 255)',\n\t\ttertiaryContainer: 'rgb(196, 231, 255)',\n\t\tonTertiaryContainer: 'rgb(0, 30, 44)',\n\t\terror: 'rgb(186, 26, 26)',\n\t\tonError: 'rgb(255, 255, 255)',\n\t\terrorContainer: 'rgb(255, 218, 214)',\n\t\tonErrorContainer: 'rgb(65, 0, 2)',\n\t\tbackground: 'rgb(251, 253, 250)',\n\t\tonBackground: 'rgb(25, 28, 27)',\n\t\tsurface: 'rgb(251, 253, 250)',\n\t\tonSurface: 'rgb(25, 28, 27)',\n\t\tsurfaceVariant: 'rgb(219, 229, 223)',\n\t\tonSurfaceVariant: 'rgb(63, 73, 69)',\n\t\toutline: 'rgb(111, 121, 117)',\n\t\toutlineVariant: 'rgb(191, 201, 195)',\n\t\tshadow: 'rgb(0, 0, 0)',\n\t\tscrim: 'rgb(0, 0, 0)',\n\t\tinverseSurface: 'rgb(46, 49, 47)',\n\t\tinverseOnSurface: 'rgb(239, 241, 238)',\n\t\tinversePrimary: 'rgb(96, 219, 185)',\n\t\televation: {\n\t\t\tlevel0: 'transparent',\n\t\t\tlevel1: 'rgb(238, 246, 242)',\n\t\t\tlevel2: 'rgb(231, 241, 237)',\n\t\t\tlevel3: 'rgb(223, 237, 232)',\n\t\t\tlevel4: 'rgb(221, 236, 230)',\n\t\t\tlevel5: 'rgb(216, 233, 227)',\n\t\t},\n\t\tsurfaceDisabled: 'rgba(25, 28, 27, 0.12)',\n\t\tonSurfaceDisabled: 'rgba(25, 28, 27, 0.38)',\n\t\tbackdrop: 'rgba(41, 50, 47, 0.4)',\n\t},\n};\n\nexport const darkGreenColors = {\n\tcolors: {\n\t\tprimary: 'rgb(96, 219, 185)',\n\t\tonPrimary: 'rgb(0, 56, 43)',\n\t\tprimaryContainer: 'rgb(0, 81, 64)',\n\t\tonPrimaryContainer: 'rgb(126, 248, 212)',\n\t\tsecondary: 'rgb(178, 204, 193)',\n\t\tonSecondary: 'rgb(29, 53, 45)',\n\t\tsecondaryContainer: 'rgb(52, 76, 67)',\n\t\tonSecondaryContainer: 'rgb(206, 233, 221)',\n\t\ttertiary: 'rgb(168, 203, 226)',\n\t\tonTertiary: 'rgb(13, 52, 70)',\n\t\ttertiaryContainer: 'rgb(40, 75, 94)',\n\t\tonTertiaryContainer: 'rgb(196, 231, 255)',\n\t\terror: 'rgb(255, 180, 171)',\n\t\tonError: 'rgb(105, 0, 5)',\n\t\terrorContainer: 'rgb(147, 0, 10)',\n\t\tonErrorContainer: 'rgb(255, 180, 171)',\n\t\tbackground: 'rgb(25, 28, 27)',\n\t\tonBackground: 'rgb(225, 227, 224)',\n\t\tsurface: 'rgb(25, 28, 27)',\n\t\tonSurface: 'rgb(225, 227, 224)',\n\t\tsurfaceVariant: 'rgb(63, 73, 69)',\n\t\tonSurfaceVariant: 'rgb(191, 201, 195)',\n\t\toutline: 'rgb(137, 147, 142)',\n\t\toutlineVariant: 'rgb(63, 73, 69)',\n\t\tshadow: 'rgb(0, 0, 0)',\n\t\tscrim: 'rgb(0, 0, 0)',\n\t\tinverseSurface: 'rgb(225, 227, 224)',\n\t\tinverseOnSurface: 'rgb(46, 49, 47)',\n\t\tinversePrimary: 'rgb(0, 107, 86)',\n\t\televation: {\n\t\t\tlevel0: 'transparent',\n\t\t\tlevel1: 'rgb(29, 38, 35)',\n\t\t\tlevel2: 'rgb(31, 43, 40)',\n\t\t\tlevel3: 'rgb(33, 49, 44)',\n\t\t\tlevel4: 'rgb(34, 51, 46)',\n\t\t\tlevel5: 'rgb(35, 55, 49)',\n\t\t},\n\t\tsurfaceDisabled: 'rgba(225, 227, 224, 0.12)',\n\t\tonSurfaceDisabled: 'rgba(225, 227, 224, 0.38)',\n\t\tbackdrop: 'rgba(41, 50, 47, 0.4)',\n\t},\n};\n","import 'react-native-gesture-handler';\n\nimport {\n\tDarkTheme as NavigationDarkTheme,\n\tDefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { MD3DarkTheme, MD3LightTheme, adaptNavigationTheme } from 'react-native-paper';\n\nimport { darkGreenColors, lightGreenColors } from './colors';\n\nconst { LightTheme, DarkTheme } = adaptNavigationTheme({\n\treactNavigationLight: NavigationDefaultTheme,\n\treactNavigationDark: NavigationDarkTheme,\n});\n\nexport const CombinedDefaultTheme = {\n\t...MD3LightTheme,\n\t...LightTheme,\n\t...lightGreenColors,\n};\n\nexport const CombinedDarkTheme = {\n\t...MD3DarkTheme,\n\t...DarkTheme,\n\t...darkGreenColors,\n};\n","import 'react-native-gesture-handler';\n\nimport { registerRootComponent } from 'expo';\nimport React from 'react';\nimport { Provider as PaperProvider } from 'react-native-paper';\n\nimport { PreferencesContext } from './components/PreferencesContext';\nimport RootNavigation from './navigation/RootNavigation';\nimport { CombinedDarkTheme, CombinedDefaultTheme } from './utils/theme';\nimport { StatusBar } from 'react-native';\nimport { PlantProvider } from './context';\nimport { SocketProvider } from './api/socket';\nimport { WeatherProvider } from './api/weatherstack';\nimport LocationProvider from './api/location';\n\nfunction App() {\n\tconst [isThemeDark, setIsThemeDark] = React.useState(false);\n\n\tconst theme = isThemeDark ? CombinedDarkTheme : CombinedDefaultTheme;\n\n\tconst toggleTheme = React.useCallback(() => {\n\t\treturn setIsThemeDark(!isThemeDark);\n\t}, [isThemeDark]);\n\n\tconst preferences = React.useMemo(\n\t\t() => ({\n\t\t\ttoggleTheme,\n\t\t\tisThemeDark,\n\t\t}),\n\t\t[toggleTheme, isThemeDark]\n\t);\n\n\treturn (\n\t\t<PaperProvider theme={theme}>\n\t\t\t<PreferencesContext.Provider value={preferences}>\n\t\t\t\t<>\n\t\t\t\t\t<LocationProvider>\n\t\t\t\t\t\t<PlantProvider>\n\t\t\t\t\t\t\t<SocketProvider>\n\t\t\t\t\t\t\t\t<WeatherProvider>\n\t\t\t\t\t\t\t\t\t<StatusBar barStyle={isThemeDark ? 'light-content' : 'dark-content'} />\n\t\t\t\t\t\t\t\t\t<RootNavigation theme={theme} />\n\t\t\t\t\t\t\t\t</WeatherProvider>\n\t\t\t\t\t\t\t</SocketProvider>\n\t\t\t\t\t\t</PlantProvider>\n\t\t\t\t\t</LocationProvider>\n\t\t\t\t</>\n\t\t\t</PreferencesContext.Provider>\n\t\t</PaperProvider>\n\t);\n}\n\nexport default registerRootComponent(App);\n"],"sourceRoot":""}