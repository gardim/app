{"version":3,"sources":["src/components/PreferencesContext.tsx","src/storage/index.ts","src/context/index.tsx","src/screens/Home.tsx","src/components/Header.tsx","src/screens/IdentificationMethod.tsx","src/components/DeletableImage.tsx","src/api/plant_id/index.ts","src/screens/ImageMethod.tsx","src/api/trefle/index.ts","src/screens/TextMethod.tsx","src/components/PlantOptionsList.tsx","src/utils/defaults.ts","src/utils/index.ts","src/utils/mapper.ts","src/screens/Result.tsx","src/screens/Name.tsx","src/screens/Code.tsx","src/components/LinearGaugeChart.tsx","src/api/mqtt/index.tsx","src/screens/Status.tsx","src/navigation/RootTabNavigation.tsx","src/navigation/RootStackNavigator.tsx","src/components/DrawerContent.tsx","src/navigation/RootNavigation.tsx","src/utils/colors.ts","src/utils/theme.tsx","src/App.tsx"],"names":["PreferencesContext","React","createContext","toggleTheme","isThemeDark","storeData","value","jsonValue","JSON","stringify","AsyncStorage","setItem","id","e","Error","getAllKeys","filter","it","startsWith","getMultiple","keys","values","multiGet","key","getItem","parse","removeItem","PlantContext","PlantProvider","children","useState","plant","setPlant","updatePlant","updatePlantName","name","updatePlantCode","code","contextValue","useMemo","Provider","Home","navigation","route","params","success","visibleAlert","setVisiblAlert","visible","setVisible","plants","setPlants","plantContext","useContext","useEffect","loadPlants","result","View","style","styles","container","length","flex","justifyContent","map","Item","title","titleStyle","fontSize","fontWeight","description","scientific_name","onPress","navigate","handleOnPress","left","Text","label","size","FAB","icon","compressedFabStyle","variant","onLongPress","s","testID","row","fabStyle","Snackbar","action","onDismiss","marginBottom","StyleSheet","create","flexGrow","padding","flexDirection","alignItems","margin","position","right","bottom","MORE_ICON","Platform","OS","Header","back","options","theme","useTheme","menuVisible","setMenuVisible","Appbar","colors","primary","surface","BackAction","goBack","Content","Menu","anchor","Action","openDrawer","IdentificationMethod","textAlign","paddingHorizontal","fabVariant","DeletableImage","image","remove","Image","source","uri","top","color","containerStyle","badgeContainer","badgeStyle","badge","backgroundColor","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","alignSelf","error","images","Constants","manifest","extra","plantIdApiKey","plantIdApiUrl","base64Images","Promise","all","response","fetch","blob","resolve","reject","reader","FileReader","onerror","onload","readAsDataURL","method","headers","body","modifiers","plant_details","json","ImageMethod","setImages","buttonOnHold","setButtonOnHold","errorMessage","setErrorMessage","pickImage","mediaTypes","ImagePicker","Images","allowsEditing","canceled","newImage","assets","assetId","toString","some","removeImage","newImages","index","findIndex","splice","searchPlants","identifyPlant","is_plant","message","Dimensions","get","alignContent","pagingEnabled","snapEnabled","mode","modeConfig","snapDirection","loop","data","renderItem","item","disabled","query","gardimApiUrl","TextMethod","searchQuery","setSearchQuery","chips","setChips","addChip","queryString","trim","includes","prevChips","Set","Searchbar","placeholder","onChangeText","endsWith","onSubmitEditing","HelperText","type","chipsContainer","chip","Chip","onClose","chipToDelete","currentChip","marginVertical","flexWrap","marginTop","PlantOptionsList","info","onOptionSelect","selectedId","setSelectedId","option","Card","optionId","card","probability","toFixed","PH_MINIMUM","PH_MAXIMUM","LIGHT_MINIMUM","LIGHT_MAXIMUM","ATMOSPHERIC_HUMIDITY_MINIMUM","ATMOSPHERIC_HUMIDITY_MAXIMUM","TEMPERATURE_MINIMUM","TEMPERATURE_MAXIMUM","SOIL_HUMIDITY_MINIMUM","SOIL_HUMIDITY_MAXIMUM","CELL_COUNT","convertScale","num","Math","round","mapToPlant","isTrefle","undefined","plantDetails","common_name","edible_parts","ph_maximum","ph_minimum","light_minimum","light_maximum","atmospheric_humidity_minimum","atmospheric_humidity_maximum","temperature_minimum","temperature_maximum","soil_humidity_minimum","soil_humidity_maximum","trefleData","edible_part","growth","light","atmospheric_humidity","minimum_temperature","deg_c","maximum_temperature","soil_humidity","plantIdData","plant_name","watering","min","max","Result","selectedOption","setSelectedOption","plantResult","suggestions","handleSelect","handleContinue","getPlant","console","alert","plantSelected","find","log","ScrollView","maxHeight","Name","text","setText","handleSubmit","TextInput","Code","setValue","ref","useBlurOnFulfill","cellCount","useClearByFocusCell","props","getCellOnLayoutHandler","rootStyle","codeFieldRoot","keyboardType","textContentType","onEndEditing","renderCell","symbol","isFocused","themedStyles","cell","focusCell","onLayout","display","minWidth","borderColor","secondaryContainer","maxWidth","marginHorizontal","lineHeight","borderWidth","outline","LinearGaugeChart","sliderValue","setSliderValue","sectionColors","Array","from","_","i","sliderRef","useRef","line","section","minimumValue","maximumValue","step","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","thumbStyle","gradientContainer","overflow","myStorage","MQTTContext","MQTTProvider","soilValue","setSoilValue","luxValue","setLuxValue","mqttUrl","mqttPort","isSSL","clientId","random","slice","client","Client","storage","connect","useSSL","then","subscribe","catch","responseObject","errorCode","on","payloadString","destinationName","disconnect","parseInt","Status","Title","Icon","Actions","Tab","createMaterialBottomTabNavigator","RootTabNavigation","useLayoutEffect","setOptions","Navigator","Screen","component","tabBarLabel","tabBarIcon","Fontisto","Stack","createStackNavigator","RootStackNavigator","initialRouteName","screenOptions","header","DrawerContent","insets","useSafeAreaInsets","Section","paddingTop","background","TouchableRipple","preference","pointerEvents","Switch","drawerContent","paddingVertical","v3Preference","Drawer","createDrawerNavigator","RootNavigation","NavigationContainer","headerShown","drawerPosition","headerTintColor","onBackground","lightGreenColors","onPrimary","primaryContainer","onPrimaryContainer","secondary","onSecondary","onSecondaryContainer","tertiary","onTertiary","tertiaryContainer","onTertiaryContainer","onError","errorContainer","onErrorContainer","onSurface","surfaceVariant","onSurfaceVariant","outlineVariant","shadow","scrim","inverseSurface","inverseOnSurface","inversePrimary","level0","level1","level2","level3","level4","level5","surfaceDisabled","onSurfaceDisabled","backdrop","darkGreenColors","adaptNavigationTheme","reactNavigationLight","NavigationDefaultTheme","reactNavigationDark","NavigationDarkTheme","LightTheme","DarkTheme","CombinedDefaultTheme","MD3LightTheme","CombinedDarkTheme","MD3DarkTheme","registerRootComponent","setIsThemeDark","useCallback","preferences","StatusBar","barStyle"],"mappings":"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","file":"static/js/app.e1c98b8d.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\nimport React from 'react';\n\nexport const PreferencesContext = React.createContext({\n\ttoggleTheme: () => {},\n\tisThemeDark: false,\n});\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Plant } from '../types';\n\nexport const storeData = async (value: Plant) => {\n\ttry {\n\t\tconst jsonValue = JSON.stringify(value);\n\t\tawait AsyncStorage.setItem(`@${value.id}`, jsonValue);\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao salvar o objeto');\n\t}\n};\n\nexport const getAllKeys = async () => {\n\ttry {\n\t\treturn (await AsyncStorage.getAllKeys()).filter((it) => it.startsWith('@'));\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao pegar as chaves dos objetos');\n\t}\n};\n\nexport const getMultiple = async (keys: readonly string[]) => {\n\tlet values;\n\ttry {\n\t\tvalues = await AsyncStorage.multiGet(keys);\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao pegar os objetos');\n\t}\n\treturn values;\n};\n\nexport const getOne = async (key: string) => {\n\ttry {\n\t\tconst jsonValue = await AsyncStorage.getItem(key);\n\t\treturn jsonValue != null ? (JSON.parse(jsonValue) as Plant) : null;\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao pegar o objeto');\n\t}\n};\n\nexport const removeValue = async (key: string) => {\n\ttry {\n\t\tawait AsyncStorage.removeItem(key);\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao remover o objeto');\n\t}\n};\n","import React, { createContext, useState, useMemo, ReactNode } from 'react';\nimport { Plant, PlantContextType } from '../types';\n\nexport const PlantContext = createContext<PlantContextType | null>(null);\n\ninterface PlantProviderProps {\n\tchildren: ReactNode;\n}\n\nexport const PlantProvider = ({ children }: PlantProviderProps) => {\n\tconst [plant, setPlant] = useState<Plant>(null);\n\n\tconst updatePlant = (plant: Plant) => {\n\t\tsetPlant(plant);\n\t};\n\n\tconst updatePlantName = (name: string) => {\n\t\tsetPlant({\n\t\t\t...plant,\n\t\t\tname: name,\n\t\t});\n\t};\n\n\tconst updatePlantCode = (code: string) => {\n\t\tsetPlant({\n\t\t\t...plant,\n\t\t\tcode: code,\n\t\t});\n\t};\n\n\tconst contextValue = useMemo(() => {\n\t\treturn { plant, updatePlant, updatePlantName, updatePlantCode };\n\t}, [plant, updatePlantName, updatePlantCode]);\n\n\treturn <PlantContext.Provider value={contextValue}>{children}</PlantContext.Provider>;\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Text, FAB, List, Avatar, Snackbar } from 'react-native-paper';\nimport { Plant } from '../types';\nimport { HomeProps } from '../types/stack';\nimport { getAllKeys } from '../storage';\nimport { getMultiple } from '../storage/index';\nimport { PlantContext } from '../context';\n\nexport function Home({ navigation, route }: HomeProps) {\n\tconst [visibleAlert, setVisiblAlert] = React.useState(route.params?.success ? true : false);\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\n\tconst onDismissSnackBar = () => setVisiblAlert(false);\n\n\tconst [plants, setPlants] = useState([]);\n\n\tconst plantContext = useContext(PlantContext);\n\n\tuseEffect(() => {\n\t\tsetVisiblAlert(route.params?.success ? true : false);\n\t}, [route.params?.success]);\n\n\tuseEffect(() => {\n\t\tconst loadPlants = async () => {\n\t\t\tconst keys = await getAllKeys();\n\t\t\tconst result = await getMultiple(keys);\n\t\t\tsetPlants(result);\n\t\t};\n\n\t\tloadPlants();\n\t}, [visibleAlert]);\n\n\tconst handleOnPress = (plant: Plant) => {\n\t\tplantContext.updatePlant(plant);\n\t\tnavigation.navigate('RootTabNavigation');\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<View style={styles.container}>\n\t\t\t\t{plants.length > 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<View style={{ flex: 1, justifyContent: 'flex-start' }}>\n\t\t\t\t\t\t\t{plants.map((it: [string, string]) => {\n\t\t\t\t\t\t\t\tconst plant = JSON.parse(it[1]) as Plant;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<List.Item\n\t\t\t\t\t\t\t\t\t\tkey={plant.id}\n\t\t\t\t\t\t\t\t\t\ttitle={plant.name}\n\t\t\t\t\t\t\t\t\t\ttitleStyle={{ fontSize: 18, fontWeight: 'bold' }}\n\t\t\t\t\t\t\t\t\t\tdescription={plant.scientific_name}\n\t\t\t\t\t\t\t\t\t\tonPress={() => handleOnPress(plant)}\n\t\t\t\t\t\t\t\t\t\tleft={() => <Avatar.Text label={plant.name[0]} size={40} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t<FAB\n\t\t\t\t\t\t\ticon=\"plus\"\n\t\t\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\t\t\tonPress={() => navigation.navigate('IdentificationMethod')}\n\t\t\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\t\t\ttestID=\"Add Plant\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<View style={styles.row}>\n\t\t\t\t\t\t<FAB\n\t\t\t\t\t\t\ticon=\"plus\"\n\t\t\t\t\t\t\tonPress={() => navigation.navigate('IdentificationMethod')}\n\t\t\t\t\t\t\tvisible\n\t\t\t\t\t\t\tstyle={[styles.fabStyle]}\n\t\t\t\t\t\t\ttestID=\"Add Plant\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Text variant=\"titleSmall\">Adicione sua primeira planta</Text>\n\t\t\t\t\t</View>\n\t\t\t\t)}\n\t\t\t</View>\n\t\t\t<Snackbar\n\t\t\t\tvisible={visibleAlert}\n\t\t\t\taction={{\n\t\t\t\t\tlabel: 'OK',\n\t\t\t\t}}\n\t\t\t\tonDismiss={onDismissSnackBar}\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginBottom: 30,\n\t\t\t\t}}>\n\t\t\t\tSua planta foi salva com sucesso!\n\t\t\t</Snackbar>\n\t\t</>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t\tpadding: 8,\n\t\tjustifyContent: 'center',\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tmarginBottom: 8,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tpadding: 10,\n\t},\n\tfabStyle: {\n\t\tmargin: 20,\n\t},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tright: 0,\n\t\tbottom: 0,\n\t\tmargin: 40,\n\t},\n});\n","import { DrawerNavigationProp } from '@react-navigation/drawer';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport React from 'react';\nimport { Platform } from 'react-native';\nimport { useTheme, Appbar, Menu } from 'react-native-paper';\n\nexport type RootStackParamList = {\n\tApp: undefined;\n};\n\nconst MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\n\nexport const Header = ({ navigation, back, options }: StackHeaderProps) => {\n\tconst theme = useTheme();\n\tconst [menuVisible, setMenuVisible] = React.useState(false);\n\n\treturn (\n\t\t<Appbar.Header\n\t\t\ttheme={{\n\t\t\t\tcolors: {\n\t\t\t\t\tprimary: theme?.colors.surface,\n\t\t\t\t},\n\t\t\t}}>\n\t\t\t{back ? <Appbar.BackAction onPress={navigation.goBack} testID=\"back icon\" /> : null}\n\t\t\t<Appbar.Content title={options.title} />\n\t\t\t<Menu\n\t\t\t\tvisible={menuVisible}\n\t\t\t\tonDismiss={() => setMenuVisible(false)}\n\t\t\t\tanchor={\n\t\t\t\t\t<Appbar.Action\n\t\t\t\t\t\ttestID=\"Appbar Menu\"\n\t\t\t\t\t\ticon={MORE_ICON}\n\t\t\t\t\t\tonPress={() =>\n\t\t\t\t\t\t\t(navigation as unknown as DrawerNavigationProp<{ any }>).openDrawer()\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t}>\n\t\t\t\t<></>\n\t\t\t</Menu>\n\t\t</Appbar.Header>\n\t);\n};\n","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Text, FAB } from 'react-native-paper';\nimport { IdentificationMethodProps } from '../types/stack';\n\nexport default function IdentificationMethod({ navigation }: IdentificationMethodProps) {\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<View style={styles.row}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\t{' '}\n\t\t\t\t\tSelecione o método que deseja seguir para identificar sua plantinha!\n\t\t\t\t</Text>\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"camera\"\n\t\t\t\t\tlabel=\"Identificar por imagem\"\n\t\t\t\t\tonPress={() => navigation.navigate('ImageMethod')}\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tvisible\n\t\t\t\t/>\n\t\t\t\t<Text variant=\"titleMedium\"> ou </Text>\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"clipboard-edit-outline\"\n\t\t\t\t\tlabel=\"Identificar por texto\"\n\t\t\t\t\tonPress={() => navigation.navigate('TextMethod')}\n\t\t\t\t\tvisible\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 0.9,\n\t\tpaddingHorizontal: 8,\n\t\tjustifyContent: 'center',\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tmarginBottom: 8,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'space-evenly',\n\t\talignItems: 'center',\n\t},\n\tfabVariant: {},\n});\n","import React from 'react';\nimport { View, StyleSheet, Image } from 'react-native';\nimport { ImageType } from '../types';\nimport { Badge, Icon } from 'react-native-elements';\nimport { useTheme } from 'react-native-paper';\n\ntype DeletableImageType = {\n\timage: ImageType;\n\tremove: (id: string) => void;\n};\n\nexport function DeletableImage({ image, remove }: DeletableImageType) {\n\tconst theme = useTheme();\n\n\treturn (\n\t\t<View style={styles(theme).container}>\n\t\t\t<Image source={{ uri: image.uri }} style={styles(theme).image} />\n\t\t\t<View style={{ position: 'absolute', top: 0, right: 0 }}>\n\t\t\t\t<Badge\n\t\t\t\t\tvalue={<Icon name=\"close\" size={18} color=\"white\" testID=\"close badge\" />}\n\t\t\t\t\tcontainerStyle={styles(theme).badgeContainer}\n\t\t\t\t\tbadgeStyle={styles(theme).badge}\n\t\t\t\t\tonPress={() => remove(image.id)}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</View>\n\t);\n}\n\nconst styles = (theme) =>\n\tStyleSheet.create({\n\t\tcontainer: {\n\t\t\tbackgroundColor: '#fff',\n\t\t\tborderRadius: 10,\n\t\t\tshadowColor: '#000',\n\t\t\tshadowOffset: { width: 0, height: 2 },\n\t\t\tshadowOpacity: 0.25,\n\t\t\tshadowRadius: 3.84,\n\t\t\televation: 5,\n\t\t\twidth: '70%',\n\t\t\talignSelf: 'center',\n\t\t\theight: 200,\n\t\t\tmargin: 20,\n\t\t},\n\t\timage: {\n\t\t\twidth: '100%',\n\t\t\theight: 200,\n\t\t\tborderRadius: 10,\n\t\t},\n\t\tbadgeContainer: {\n\t\t\tposition: 'relative',\n\t\t\ttop: -10,\n\t\t\tright: -10,\n\t\t\tbackgroundColor: 'transparent',\n\t\t},\n\t\tbadge: {\n\t\t\theight: 30,\n\t\t\twidth: 30,\n\t\t\tbackgroundColor: theme.colors.error,\n\t\t},\n\t});\n","import { ImageType } from '../../types';\nimport { PlantIDResponse } from './types';\nimport Constants from 'expo-constants';\n\nexport async function identifyPlant(images: ImageType[]): Promise<PlantIDResponse> {\n\tconst { plantIdApiKey, plantIdApiUrl } = Constants.manifest.extra;\n\n\tconst base64Images = await Promise.all(\n\t\timages.map(async (image: ImageType) => {\n\t\t\tconst response = await fetch(image.uri);\n\t\t\tconst blob = await response.blob();\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tconst reader = new FileReader();\n\t\t\t\treader.onerror = () => reject('Failed to convert image to base64');\n\t\t\t\treader.onload = () => resolve(reader.result as string);\n\t\t\t\treader.readAsDataURL(blob);\n\t\t\t});\n\t\t})\n\t);\n\n\tconst response = await fetch(`${plantIdApiUrl}/identify`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Api-Key': plantIdApiKey,\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\timages: base64Images,\n\t\t\tmodifiers: ['similar_images'],\n\t\t\tplant_details: [\n\t\t\t\t'common_names',\n\t\t\t\t'wiki_description',\n\t\t\t\t'edible_parts',\n\t\t\t\t'propagation_methods',\n\t\t\t\t'name_authority',\n\t\t\t\t'taxonomy',\n\t\t\t\t'watering',\n\t\t\t],\n\t\t}),\n\t});\n\n\tconst result = await response.json();\n\treturn result;\n}\n","import * as ImagePicker from 'expo-image-picker';\nimport React, { useState } from 'react';\nimport { StyleSheet, View, Dimensions } from 'react-native';\nimport { ImageMethodProps, ImageType } from '../types/stack';\nimport { DeletableImage } from '../components/DeletableImage';\nimport { FAB, Text, Snackbar } from 'react-native-paper';\nimport Carousel from 'react-native-reanimated-carousel';\nimport { identifyPlant } from '../api/plant_id';\n\nexport function ImageMethod({ navigation }: ImageMethodProps) {\n\tconst [images, setImages] = useState<ImageType[]>([]);\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\tconst [buttonOnHold, setButtonOnHold] = React.useState<boolean>(false);\n\tconst [visibleAlert, setVisiblAlert] = React.useState(false);\n\tconst [errorMessage, setErrorMessage] = React.useState('');\n\n\tconst onDismissSnackBar = () => setVisiblAlert(false);\n\n\tconst pickImage = async (method) => {\n\t\tconst options = {\n\t\t\tmediaTypes: ImagePicker.MediaTypeOptions.Images,\n\t\t\tallowsEditing: false,\n\t\t};\n\n\t\tlet result: ImagePicker.ImagePickerResult = null;\n\n\t\tif (method == 'camera') {\n\t\t\tresult = await ImagePicker.launchCameraAsync(options);\n\t\t} else {\n\t\t\tresult = await ImagePicker.launchImageLibraryAsync(options);\n\t\t}\n\n\t\tif (!result.canceled) {\n\t\t\tconst newImage = {\n\t\t\t\tid: result.assets[0].assetId ? result.assets[0].assetId : images.length.toString(),\n\t\t\t\turi: result.assets[0].uri,\n\t\t\t};\n\t\t\tif (!images.some((image) => image.id === newImage.id)) {\n\t\t\t\tsetImages([...images, newImage]);\n\t\t\t}\n\t\t} else {\n\t\t\tsetErrorMessage('Você não adicionou nenhuma imagem.');\n\t\t\tsetVisiblAlert(true);\n\t\t}\n\t};\n\tconst removeImage = (id: string) => {\n\t\tconst newImages = [...images];\n\t\tconst index = newImages.findIndex((image) => image.id === id);\n\t\tif (index !== -1) {\n\t\t\tnewImages.splice(index, 1);\n\t\t\tsetImages(newImages);\n\t\t}\n\t};\n\n\tconst searchPlants = async () => {\n\t\tif (!buttonOnHold) {\n\t\t\tsetButtonOnHold(true);\n\t\t\ttry {\n\t\t\t\tconst result = await identifyPlant(images);\n\t\t\t\tif (result.is_plant) {\n\t\t\t\t\tnavigation.navigate('Result', result);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Nenhuma planta foi encontrada');\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tsetErrorMessage(error.message);\n\t\t\t\tsetVisiblAlert(true);\n\t\t\t} finally {\n\t\t\t\tsetButtonOnHold(false);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst width = Dimensions.get('window').width;\n\n\treturn (\n\t\t<>\n\t\t\t<View style={styles.container}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\tAdicione algumas fotos para podermos identificar sua planta!\n\t\t\t\t</Text>\n\t\t\t\t<View style={styles.row}>\n\t\t\t\t\t<FAB\n\t\t\t\t\t\ticon=\"camera\"\n\t\t\t\t\t\tlabel=\"Tirar foto\"\n\t\t\t\t\t\tonPress={() => pickImage('camera')}\n\t\t\t\t\t\tvisible\n\t\t\t\t\t\tstyle={[styles.fabStyle]}\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\ttestID=\"Tirar foto\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FAB\n\t\t\t\t\t\ticon=\"image\"\n\t\t\t\t\t\tlabel=\"Adicionar da galeria\"\n\t\t\t\t\t\tonPress={() => pickImage('gallery')}\n\t\t\t\t\t\tvisible\n\t\t\t\t\t\tstyle={[styles.fabStyle]}\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\ttestID=\"Adicionar da galeria\"\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t\t{images.length > 0 && (\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\t\talignContent: 'center',\n\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<Carousel\n\t\t\t\t\t\t\tpagingEnabled={true}\n\t\t\t\t\t\t\tsnapEnabled={true}\n\t\t\t\t\t\t\tmode={'horizontal-stack'}\n\t\t\t\t\t\t\tmodeConfig={{\n\t\t\t\t\t\t\t\tsnapDirection: 'left',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tloop={true}\n\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\tdata={images}\n\t\t\t\t\t\t\trenderItem={({ item }) => <DeletableImage image={item} remove={removeImage} />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FAB\n\t\t\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\t\t\tonPress={() => searchPlants()}\n\t\t\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\t\t\tdisabled={buttonOnHold}\n\t\t\t\t\t\t\ttestID=\"Method Continue\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t)}\n\t\t\t</View>\n\t\t\t<Snackbar\n\t\t\t\tvisible={visibleAlert}\n\t\t\t\taction={{\n\t\t\t\t\tlabel: 'OK',\n\t\t\t\t}}\n\t\t\t\tonDismiss={onDismissSnackBar}\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginBottom: 30,\n\t\t\t\t}}>\n\t\t\t\t{errorMessage}\n\t\t\t</Snackbar>\n\t\t</>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t\tpadding: 40,\n\t\tjustifyContent: 'center',\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'space-evenly',\n\t},\n\tfabStyle: {},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tright: 0,\n\t\tbottom: 0,\n\t},\n});\n","import Constants from 'expo-constants';\nimport { TreflePlantSearchResponse, TrefleSpeciesResponse } from './types';\n\nexport async function identifyPlant(query: string[]): Promise<TreflePlantSearchResponse> {\n\tconst { gardimApiUrl } = Constants.manifest.extra;\n\tconst response = await fetch(`${gardimApiUrl}/.netlify/functions/api/trefle`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(query),\n\t});\n\n\tconst result = await response.json();\n\treturn result;\n}\n\nexport async function getPlant(id: number): Promise<TrefleSpeciesResponse> {\n\tconst { gardimApiUrl } = Constants.manifest.extra;\n\tconst response = await fetch(`${gardimApiUrl}/.netlify/functions/api/trefle?id=${id}`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t});\n\n\tconst result = await response.json();\n\treturn result;\n}\n","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Text, Searchbar, Chip, FAB, HelperText, Snackbar } from 'react-native-paper';\nimport { TextMethodProps } from '../types/stack';\nimport { identifyPlant } from '../api/trefle';\n\nexport function TextMethod({ navigation }: TextMethodProps) {\n\tconst [searchQuery, setSearchQuery] = React.useState('');\n\tconst [chips, setChips] = React.useState([]);\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\tconst [buttonOnHold, setButtonOnHold] = React.useState<boolean>(false);\n\tconst [visibleAlert, setVisiblAlert] = React.useState(false);\n\tconst [errorMessage, setErrorMessage] = React.useState('');\n\n\tconst addChip = () => {\n\t\tconst queryString = searchQuery.trim();\n\n\t\tif (!chips.includes(queryString) && queryString) {\n\t\t\tsetChips((prevChips) => [...new Set([...prevChips, queryString])]);\n\t\t}\n\t\tsetSearchQuery('');\n\t};\n\n\tconst onDismissSnackBar = () => setVisiblAlert(false);\n\n\tconst removeChip = (chipToDelete) => {\n\t\tsetChips((prevChips) => prevChips.filter((currentChip) => currentChip !== chipToDelete));\n\t};\n\n\tconst onChangeSearch = (query) => {\n\t\tsetSearchQuery(query);\n\t\tif (query.endsWith(' ')) {\n\t\t\taddChip();\n\t\t}\n\t};\n\n\tconst onSubmit = (query) => {\n\t\tsetSearchQuery(query);\n\t\taddChip();\n\t};\n\n\tconst searchPlants = async () => {\n\t\tif (!buttonOnHold) {\n\t\t\tsetButtonOnHold(true);\n\t\t\ttry {\n\t\t\t\tconst result = await identifyPlant(chips);\n\t\t\t\tif (result.data.length) {\n\t\t\t\t\tnavigation.navigate('Result', result);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Nenhuma planta foi encontrada');\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tsetErrorMessage(error.message);\n\t\t\t\tsetVisiblAlert(true);\n\t\t\t} finally {\n\t\t\t\tsetButtonOnHold(false);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<View style={styles.container}>\n\t\t\t\t<View style={styles.row}>\n\t\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\t\tDigite algumas palavras-chave que nos ajude a identificar sua planta!\n\t\t\t\t\t</Text>\n\n\t\t\t\t\t<Searchbar\n\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\tvalue={searchQuery}\n\t\t\t\t\t\tonChangeText={onChangeSearch}\n\t\t\t\t\t\tstyle={styles.fabVariant}\n\t\t\t\t\t\tonSubmitEditing={onSubmit}\n\t\t\t\t\t/>\n\t\t\t\t\t<HelperText type=\"info\" visible>\n\t\t\t\t\t\tPressione enter ou espaço para dividir as palavras!\n\t\t\t\t\t</HelperText>\n\t\t\t\t\t<View style={styles.chipsContainer}>\n\t\t\t\t\t\t{chips.map((chip) => (\n\t\t\t\t\t\t\t<Chip key={chip} onClose={() => removeChip(chip)} style={styles.chip}>\n\t\t\t\t\t\t\t\t{chip}\n\t\t\t\t\t\t\t</Chip>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.row}>\n\t\t\t\t\t{chips.length > 0 && (\n\t\t\t\t\t\t<FAB\n\t\t\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\t\t\tonPress={() => searchPlants()}\n\t\t\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\t\t\tdisabled={buttonOnHold}\n\t\t\t\t\t\t\ttestID=\"Method Continue\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t\t<Snackbar\n\t\t\t\tvisible={visibleAlert}\n\t\t\t\taction={{\n\t\t\t\t\tlabel: 'OK',\n\t\t\t\t}}\n\t\t\t\tonDismiss={onDismissSnackBar}\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginBottom: 30,\n\t\t\t\t}}>\n\t\t\t\t{errorMessage}\n\t\t\t</Snackbar>\n\t\t</>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t\tpadding: 40,\n\t\tjustifyContent: 'space-around',\n\t},\n\trow: {\n\t\tflex: 1,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t},\n\tfabVariant: {\n\t\tmarginVertical: 20,\n\t},\n\tchipsContainer: {\n\t\tflexDirection: 'row',\n\t\tflexWrap: 'wrap',\n\t\tmarginTop: 8,\n\t\tjustifyContent: 'flex-start',\n\t},\n\tchip: {\n\t\tmargin: 4,\n\t},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tright: 0,\n\t\tbottom: 0,\n\t},\n});\n","import React, { useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, Text } from 'react-native-paper';\n\ntype PlantOptionsListProps = {\n\tinfo: {\n\t\tid: number;\n\t\tname: string;\n\t\tprobability: number | null;\n\t}[];\n\tonOptionSelect: (id: string) => void;\n};\n\nexport const PlantOptionsList = ({ info, onOptionSelect }: PlantOptionsListProps) => {\n\tconst [selectedId, setSelectedId] = useState(null);\n\n\tconst handleOptionSelect = (optionId) => {\n\t\tonOptionSelect(optionId);\n\t\tif (selectedId == optionId) {\n\t\t\tsetSelectedId(null);\n\t\t} else {\n\t\t\tsetSelectedId(optionId);\n\t\t}\n\t};\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t{info.map((option) => (\n\t\t\t\t<Card\n\t\t\t\t\tonPress={() => handleOptionSelect(option.id)}\n\t\t\t\t\tkey={option.id}\n\t\t\t\t\tstyle={styles.card}\n\t\t\t\t\tmode={selectedId === option.id ? 'contained' : 'elevated'}\n\t\t\t\t\ttestID=\"CardComponent\">\n\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t<Text variant=\"titleMedium\">{option.name}</Text>\n\t\t\t\t\t\t{option.probability ? (\n\t\t\t\t\t\t\t<Text style={styles.probability}>\n\t\t\t\t\t\t\t\tProbabilidade de acerto: {option.probability.toFixed(2)}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</Card.Content>\n\t\t\t\t</Card>\n\t\t\t))}\n\t\t</View>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tpadding: 16,\n\t},\n\tcard: {\n\t\tmarginBottom: 8,\n\t},\n\tprobability: {\n\t\tmarginTop: 4,\n\t\tfontSize: 12,\n\t\tcolor: '#666',\n\t},\n});\n","export const PH_MINIMUM = 4;\nexport const PH_MAXIMUM = 5;\n\nexport const LIGHT_MINIMUM = 2;\nexport const LIGHT_MAXIMUM = 8;\n\nexport const ATMOSPHERIC_HUMIDITY_MINIMUM = 5;\nexport const ATMOSPHERIC_HUMIDITY_MAXIMUM = 6;\n\nexport const TEMPERATURE_MINIMUM = 15;\nexport const TEMPERATURE_MAXIMUM = 27;\n\nexport const SOIL_HUMIDITY_MINIMUM = 5;\nexport const SOIL_HUMIDITY_MAXIMUM = 5;\n\nexport const CELL_COUNT = 6;\n","export function convertScale(num: number): number {\n\tnum -= 1;\n\treturn Math.round(num * 3.33) + 1;\n}\n","import { TrefleSpeciesResponse } from '../api/trefle/types';\nimport { Suggestion } from '../api/plant_id/types';\nimport { Plant } from '../types';\nimport {\n\tPH_MINIMUM,\n\tPH_MAXIMUM,\n\tLIGHT_MINIMUM,\n\tLIGHT_MAXIMUM,\n\tATMOSPHERIC_HUMIDITY_MINIMUM,\n\tATMOSPHERIC_HUMIDITY_MAXIMUM,\n\tTEMPERATURE_MINIMUM,\n\tTEMPERATURE_MAXIMUM,\n\tSOIL_HUMIDITY_MINIMUM,\n\tSOIL_HUMIDITY_MAXIMUM,\n} from './defaults';\nimport { convertScale } from '.';\n\nexport const mapToPlant = (info: TrefleSpeciesResponse | Suggestion): Plant => {\n\tconst isTrefle = (info as TrefleSpeciesResponse)?.data !== undefined;\n\tconst plantDetails: Plant = {\n\t\tid: null,\n\t\tname: null,\n\t\tcode: null,\n\t\tcommon_name: null,\n\t\tscientific_name: null,\n\t\tedible_parts: null,\n\t\tph_maximum: PH_MAXIMUM,\n\t\tph_minimum: PH_MINIMUM,\n\t\tlight_minimum: LIGHT_MINIMUM,\n\t\tlight_maximum: LIGHT_MAXIMUM,\n\t\tatmospheric_humidity_minimum: ATMOSPHERIC_HUMIDITY_MINIMUM,\n\t\tatmospheric_humidity_maximum: ATMOSPHERIC_HUMIDITY_MAXIMUM,\n\t\ttemperature_minimum: TEMPERATURE_MINIMUM,\n\t\ttemperature_maximum: TEMPERATURE_MAXIMUM,\n\t\tsoil_humidity_minimum: SOIL_HUMIDITY_MINIMUM,\n\t\tsoil_humidity_maximum: SOIL_HUMIDITY_MAXIMUM,\n\t};\n\n\tif (isTrefle) {\n\t\tconst trefleData = (info as TrefleSpeciesResponse).data;\n\t\tplantDetails.id = trefleData.id.toString();\n\t\tplantDetails.common_name = trefleData.common_name ?? plantDetails.common_name;\n\t\tplantDetails.scientific_name = trefleData.scientific_name ?? plantDetails.scientific_name;\n\t\tplantDetails.edible_parts = trefleData.edible_part ?? plantDetails.edible_parts;\n\t\tplantDetails.ph_maximum = trefleData.growth?.ph_maximum ?? plantDetails.ph_maximum;\n\t\tplantDetails.ph_minimum = trefleData.growth?.ph_minimum ?? plantDetails.ph_minimum;\n\t\tplantDetails.light_minimum = trefleData.growth?.light - 2 ?? plantDetails.light_minimum;\n\t\tplantDetails.light_maximum = trefleData.growth?.light + 2 ?? plantDetails.light_maximum;\n\n\t\tplantDetails.atmospheric_humidity_minimum =\n\t\t\ttrefleData.growth?.atmospheric_humidity - 10 ?? plantDetails.atmospheric_humidity_minimum;\n\n\t\tplantDetails.atmospheric_humidity_maximum =\n\t\t\ttrefleData.growth?.atmospheric_humidity + 10 ?? plantDetails.atmospheric_humidity_maximum;\n\n\t\tplantDetails.temperature_minimum =\n\t\t\ttrefleData.growth?.minimum_temperature?.deg_c ?? plantDetails.temperature_minimum;\n\n\t\tplantDetails.temperature_maximum =\n\t\t\ttrefleData.growth?.maximum_temperature?.deg_c ?? plantDetails.temperature_maximum;\n\n\t\tplantDetails.soil_humidity_minimum = trefleData.growth?.soil_humidity\n\t\t\t? trefleData.growth.soil_humidity - 2\n\t\t\t: plantDetails.soil_humidity_minimum;\n\n\t\tplantDetails.soil_humidity_maximum = trefleData.growth?.soil_humidity\n\t\t\t? trefleData.growth.soil_humidity + 2\n\t\t\t: plantDetails.soil_humidity_maximum;\n\t} else {\n\t\tconst plantIdData = info as Suggestion;\n\t\tplantDetails.id = plantIdData.plant_name;\n\t\tplantDetails.common_name = plantIdData.plant_name ?? plantDetails.common_name;\n\t\tplantDetails.scientific_name =\n\t\t\tplantIdData.plant_details?.scientific_name ?? plantDetails.scientific_name;\n\t\tplantDetails.edible_parts =\n\t\t\tplantIdData.plant_details?.edible_parts ?? plantDetails.edible_parts;\n\t\tplantDetails.soil_humidity_minimum =\n\t\t\tconvertScale(plantIdData.plant_details?.watering?.min) ??\n\t\t\tplantDetails.soil_humidity_minimum;\n\t\tplantDetails.soil_humidity_maximum =\n\t\t\tconvertScale(plantIdData.plant_details?.watering?.max) ??\n\t\t\tplantDetails.soil_humidity_maximum;\n\t}\n\n\treturn plantDetails;\n};\n","import React, { useState, useContext } from 'react';\nimport { View, StyleSheet, ScrollView, Dimensions, Platform } from 'react-native';\nimport { PlantOptionsList } from '../components/PlantOptionsList';\nimport { ResultProps } from '../types/stack';\nimport { Text, FAB } from 'react-native-paper';\nimport { PlantIDResponse } from '../api/plant_id/types';\nimport { TreflePlantSearchResponse } from '../api/trefle/types';\nimport { getPlant } from '../api/trefle';\nimport { PlantContext } from '../context';\nimport { mapToPlant } from '../utils/mapper';\n\nexport function Result({ navigation, route }: ResultProps) {\n\tconst [selectedOption, setSelectedOption] = useState(null);\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\tconst [buttonOnHold, setButtonOnHold] = React.useState<boolean>(false);\n\n\tconst plantResult = route.params;\n\tconst isTrefle = (plantResult as PlantIDResponse).suggestions ? false : true;\n\tlet height = Dimensions.get('window').height;\n\n\tconst plantContext = useContext(PlantContext);\n\n\tif (Platform.OS === 'web') {\n\t\theight -= 100;\n\t}\n\n\tconst handleSelect = (optionId) => {\n\t\tif (selectedOption == optionId) {\n\t\t\tsetSelectedOption(null);\n\t\t} else {\n\t\t\tsetSelectedOption(optionId);\n\t\t}\n\t};\n\n\tconst handleContinue = async () => {\n\t\tlet plant = null;\n\t\tif (isTrefle) {\n\t\t\tif (!buttonOnHold) {\n\t\t\t\tsetButtonOnHold(true);\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await getPlant(selectedOption);\n\t\t\t\t\tif (result.data) {\n\t\t\t\t\t\tplant = mapToPlant(result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Trefle Species not found');\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert('Oops! Algo deu errado');\n\t\t\t\t} finally {\n\t\t\t\t\tsetButtonOnHold(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst plantSelected = (plantResult as PlantIDResponse).suggestions.find(\n\t\t\t\t(it) => it.id === selectedOption\n\t\t\t);\n\n\t\t\tconsole.log(JSON.stringify(plantSelected));\n\n\t\t\tplant = mapToPlant(plantSelected);\n\t\t}\n\n\t\tplantContext.updatePlant(plant);\n\t\tnavigation.navigate('Name');\n\t};\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<View style={styles.row}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\tSelecione o resultado da busca\n\t\t\t\t</Text>\n\t\t\t\t<ScrollView style={{ maxHeight: height }}>\n\t\t\t\t\t{(plantResult as PlantIDResponse).suggestions ? (\n\t\t\t\t\t\t<PlantOptionsList\n\t\t\t\t\t\t\tinfo={(plantResult as PlantIDResponse).suggestions.map((it) => ({\n\t\t\t\t\t\t\t\tid: it.id,\n\t\t\t\t\t\t\t\tname: it.plant_name,\n\t\t\t\t\t\t\t\tprobability: it.probability,\n\t\t\t\t\t\t\t}))}\n\t\t\t\t\t\t\tonOptionSelect={handleSelect}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<PlantOptionsList\n\t\t\t\t\t\t\tinfo={(plantResult as TreflePlantSearchResponse).data\n\t\t\t\t\t\t\t\t.filter((it) => it.common_name != null)\n\t\t\t\t\t\t\t\t.map((it) => ({\n\t\t\t\t\t\t\t\t\tid: it.id,\n\t\t\t\t\t\t\t\t\tname: it.common_name,\n\t\t\t\t\t\t\t\t\tprobability: null,\n\t\t\t\t\t\t\t\t}))}\n\t\t\t\t\t\t\tonOptionSelect={handleSelect}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</ScrollView>\n\t\t\t</View>\n\t\t\t{selectedOption && (\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\tonPress={() => handleContinue()}\n\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\tdisabled={buttonOnHold}\n\t\t\t\t\ttestID=\"Result Continue\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t\tjustifyContent: 'flex-start',\n\t},\n\trow: {\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'space-evenly',\n\t},\n\tfabStyle: {},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tright: 0,\n\t\tbottom: 0,\n\t\tmargin: 40,\n\t},\n});\n","import React, { useContext } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Text, TextInput, FAB } from 'react-native-paper';\nimport { NameProps } from '../types/stack';\nimport { PlantContext } from '../context';\n\nexport function Name({ navigation }: NameProps) {\n\tconst [text, setText] = React.useState('');\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\n\tconst plantContext = useContext(PlantContext);\n\n\tconst handleSubmit = () => {\n\t\tplantContext.updatePlantName(text);\n\t\tnavigation.navigate('Code');\n\t};\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<View style={styles.row}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\t{' '}\n\t\t\t\t\tDê um nome à sua planta!\n\t\t\t\t</Text>\n\t\t\t\t<TextInput\n\t\t\t\t\tmode=\"flat\"\n\t\t\t\t\tvalue={text}\n\t\t\t\t\tonChangeText={(text) => setText(text)}\n\t\t\t\t\tstyle={styles.fabVariant}\n\t\t\t\t\tonSubmitEditing={() => handleSubmit()}\n\t\t\t\t\ttestID=\"input-nome\"\n\t\t\t\t/>\n\t\t\t</View>\n\t\t\t{text.length > 0 && (\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\tonPress={() => handleSubmit()}\n\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\ttestID=\"Name Continue\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t</View>\n\t);\n}\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t\tpadding: 40,\n\t},\n\tfabVariant: {\n\t\tmarginVertical: 20,\n\t},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tmargin: 40,\n\t\tright: 0,\n\t\tbottom: 0,\n\t},\n});\n","import React, { useState, useContext, useEffect } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n\tCodeField,\n\tCursor,\n\tuseBlurOnFulfill,\n\tuseClearByFocusCell,\n} from 'react-native-confirmation-code-field';\nimport { Text, useTheme, FAB } from 'react-native-paper';\nimport { CELL_COUNT } from '../utils/defaults';\nimport { CodeProps } from '../types/stack';\nimport { PlantContext } from '../context';\nimport { storeData } from '../storage/index';\n\nexport function Code({ navigation }: CodeProps) {\n\tconst [value, setValue] = useState('');\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\tconst ref = useBlurOnFulfill({ value, cellCount: CELL_COUNT });\n\tconst [props, getCellOnLayoutHandler] = useClearByFocusCell({\n\t\tvalue,\n\t\tsetValue,\n\t});\n\n\tconst theme = useTheme();\n\tconst plantContext = useContext(PlantContext);\n\n\tuseEffect(() => {\n\t\tif (plantContext.plant && plantContext.plant.code) {\n\t\t\tstoreData(plantContext.plant);\n\t\t}\n\t}, [plantContext.plant]);\n\n\tconst onPress = () => {\n\t\tplantContext.updatePlantCode(value);\n\t\tnavigation.navigate('Home', { success: true });\n\t};\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<View style={styles.row}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\t{' '}\n\t\t\t\t\tDigite o código do componente\n\t\t\t\t</Text>\n\t\t\t\t<CodeField\n\t\t\t\t\tref={ref}\n\t\t\t\t\t{...props}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChangeText={setValue}\n\t\t\t\t\tcellCount={CELL_COUNT}\n\t\t\t\t\trootStyle={styles.codeFieldRoot}\n\t\t\t\t\tkeyboardType=\"numeric\"\n\t\t\t\t\ttextContentType=\"oneTimeCode\"\n\t\t\t\t\tonEndEditing={onPress}\n\t\t\t\t\ttestID=\"code-field\"\n\t\t\t\t\trenderCell={({ index, symbol, isFocused }) => (\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tstyle={[themedStyles(theme).cell, isFocused && themedStyles(theme).focusCell]}\n\t\t\t\t\t\t\tonLayout={getCellOnLayoutHandler(index)}>\n\t\t\t\t\t\t\t{symbol || (isFocused ? <Cursor /> : null)}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t\t{value.length >= 6 && (\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\tonPress={onPress}\n\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\ttestID=\"Code Continue\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t\tpadding: 40,\n\t},\n\tfabVariant: {\n\t\tmarginVertical: 20,\n\t},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tmargin: 40,\n\t\tright: 0,\n\t\tbottom: 0,\n\t},\n\tcodeFieldRoot: { margin: 20, display: 'flex', minWidth: '50%', alignSelf: 'center' },\n});\n\nconst themedStyles = (theme) =>\n\tStyleSheet.create({\n\t\tfocusCell: {\n\t\t\tborderColor: theme.colors.secondaryContainer,\n\t\t},\n\t\tcell: {\n\t\t\tmaxWidth: 40,\n\t\t\twidth: '15%',\n\t\t\tmarginHorizontal: 5,\n\t\t\theight: 50,\n\t\t\tlineHeight: 38,\n\t\t\tfontSize: 24,\n\t\t\tborderWidth: 2,\n\t\t\tborderColor: theme.colors.outline,\n\t\t\tborderRadius: 10,\n\t\t\ttextAlign: 'center',\n\t\t},\n\t});\n","import { Slider } from '@miblanchard/react-native-slider';\nimport React, { useRef, useEffect, useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\n\ntype LinearGaugeChartProps = {\n\tmin: number;\n\tmax: number;\n\tvalue: number;\n};\n\nexport const LinearGaugeChart = ({ min, max, value }: LinearGaugeChartProps) => {\n\tconst [sliderValue, setSliderValue] = useState(value);\n\n\tuseEffect(() => {\n\t\tsetSliderValue(value);\n\t}, [value]);\n\n\tconst sectionColors = Array.from({ length: 10 }, (_, i) => {\n\t\tconst value = i + 1;\n\t\tif (value >= min && value <= max) {\n\t\t\treturn '#B0D8A4'; // Green\n\t\t} else if ((value === min - 1 && value !== 0) || value === max + 1) {\n\t\t\treturn '#FEE191'; // Yellow\n\t\t} else {\n\t\t\treturn '#E84258'; // Red\n\t\t}\n\t});\n\n\tconst sliderRef = useRef(null);\n\n\treturn (\n\t\t<View style={{ position: 'relative' }}>\n\t\t\t<View style={[styles.line]}>\n\t\t\t\t{sectionColors.map((color, i) => (\n\t\t\t\t\t<View key={i} style={[styles.section, { backgroundColor: color }]} />\n\t\t\t\t))}\n\t\t\t</View>\n\t\t\t<Slider\n\t\t\t\tref={sliderRef}\n\t\t\t\tminimumValue={1}\n\t\t\t\tmaximumValue={10}\n\t\t\t\tstep={1}\n\t\t\t\tvalue={sliderValue}\n\t\t\t\tminimumTrackTintColor=\"transparent\"\n\t\t\t\tmaximumTrackTintColor=\"transparent\"\n\t\t\t\tthumbTintColor=\"white\"\n\t\t\t\tthumbStyle={styles.thumbStyle}\n\t\t\t\tdisabled={true}\n\t\t\t/>\n\t\t</View>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tline: {\n\t\tflexDirection: 'row',\n\t\tposition: 'absolute',\n\t\ttop: 16,\n\t\tleft: 0,\n\t\tright: 0,\n\t},\n\tsection: {\n\t\tflex: 1,\n\t\theight: 10,\n\t},\n\tthumbStyle: {\n\t\tbackgroundColor: 'white',\n\t\televation: 5,\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tgradientContainer: {\n\t\tposition: 'absolute',\n\t\ttop: '50%',\n\t\tleft: 0,\n\t\tright: 0,\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\televation: 5,\n\t\toverflow: 'hidden',\n\t},\n});\n","import React, { createContext, useEffect, useState, ReactNode, useMemo } from 'react';\nimport { Client, Message } from 'react-native-paho-mqtt';\nimport { Platform } from 'react-native';\nimport Constants from 'expo-constants';\n\ntype MQTTResponse = {\n\tsoilValue: number;\n\tluxValue: number;\n};\n\nconst myStorage = {\n\tsetItem: (key, item) => {\n\t\tmyStorage[key] = item;\n\t},\n\tgetItem: (key) => myStorage[key],\n\tremoveItem: (key) => {\n\t\tdelete myStorage[key];\n\t},\n};\n\nexport const MQTTContext = createContext<MQTTResponse>(null);\n\ninterface MQTTProviderProps {\n\tchildren: ReactNode;\n}\n\nexport const MQTTProvider = ({ children }: MQTTProviderProps) => {\n\tconst [soilValue, setSoilValue] = useState<string | null>(null);\n\tconst [luxValue, setLuxValue] = useState<string | null>(null);\n\tconst { mqttUrl } = Constants.manifest.extra;\n\n\tlet { mqttPort } = Constants.manifest.extra;\n\n\tlet isSSL = false;\n\n\tconst clientId = `mqtt_${Math.random().toString(16).slice(3)}`;\n\n\tif (Platform.OS === 'web') {\n\t\tmqttPort = 8081;\n\t\tisSSL = true;\n\t}\n\n\tuseEffect(() => {\n\t\tconst client = new Client({\n\t\t\turi: `${mqttUrl}:${mqttPort}/mqtt`,\n\t\t\tclientId: clientId,\n\t\t\tstorage: myStorage,\n\t\t});\n\n\t\tclient\n\t\t\t.connect({ useSSL: isSSL })\n\t\t\t.then(() => {\n\t\t\t\tconsole.log('connected');\n\t\t\t\tclient.subscribe('gardim/esp32/000000/soil');\n\t\t\t\tclient.subscribe('gardim/esp32/000000/lux');\n\t\t\t})\n\t\t\t.catch((responseObject) => {\n\t\t\t\tif (responseObject.errorCode !== 0) {\n\t\t\t\t\tconsole.log('onConnectionLost:' + responseObject);\n\t\t\t\t}\n\t\t\t});\n\n\t\tclient.on('messageReceived', (message: Message) => {\n\t\t\tconst value = message.payloadString;\n\t\t\tif (message.destinationName === 'gardim/esp32/000000/soil') {\n\t\t\t\tsetSoilValue(value);\n\t\t\t} else if (message.destinationName === 'gardim/esp32/000000/lux') {\n\t\t\t\tsetLuxValue(value);\n\t\t\t}\n\n\t\t\tconsole.log(value);\n\t\t});\n\n\t\treturn () => {\n\t\t\tconsole.log('disconnect');\n\t\t\tclient.disconnect();\n\t\t};\n\t}, []);\n\n\tconst contextValue = useMemo(() => {\n\t\treturn {\n\t\t\tsoilValue: parseInt(soilValue),\n\t\t\tluxValue: parseInt(luxValue),\n\t\t};\n\t}, [soilValue, luxValue]);\n\n\treturn <MQTTContext.Provider value={contextValue}>{children}</MQTTContext.Provider>;\n};\n","import React, { useContext } from 'react';\nimport { View } from 'react-native';\nimport { Text, Card, Avatar } from 'react-native-paper';\nimport { LinearGaugeChart } from '../components/LinearGaugeChart';\nimport { PlantContext } from '../context';\nimport { MQTTContext } from '../api/mqtt';\n\nexport function Status() {\n\tconst plantContext = useContext(PlantContext);\n\tconst plant = plantContext.plant;\n\tconst { soilValue, luxValue } = useContext(MQTTContext);\n\n\treturn (\n\t\t<View>\n\t\t\t<Card style={{ marginVertical: 10, marginHorizontal: 20 }}>\n\t\t\t\t<Card.Title\n\t\t\t\t\ttitle=\"Umidade do Solo\"\n\t\t\t\t\tleft={(props) => <Avatar.Icon {...props} icon=\"water-alert-outline\" />}\n\t\t\t\t/>\n\t\t\t\t<Card.Content>\n\t\t\t\t\t<LinearGaugeChart\n\t\t\t\t\t\tmin={plant.soil_humidity_minimum}\n\t\t\t\t\t\tmax={plant.soil_humidity_maximum}\n\t\t\t\t\t\tvalue={soilValue || 1}\n\t\t\t\t\t/>\n\t\t\t\t</Card.Content>\n\t\t\t\t<Card.Actions>\n\t\t\t\t\t<Text>{soilValue || 1}</Text>\n\t\t\t\t</Card.Actions>\n\t\t\t</Card>\n\t\t\t<Card style={{ marginVertical: 10, marginHorizontal: 20 }}>\n\t\t\t\t<Card.Title\n\t\t\t\t\ttitle=\"Luminosidade\"\n\t\t\t\t\tleft={(props) => <Avatar.Icon {...props} icon=\"lightbulb-on-outline\" />}\n\t\t\t\t/>\n\t\t\t\t<Card.Content>\n\t\t\t\t\t<LinearGaugeChart\n\t\t\t\t\t\tmin={plant.light_minimum}\n\t\t\t\t\t\tmax={plant.light_maximum}\n\t\t\t\t\t\tvalue={luxValue || 1}\n\t\t\t\t\t/>\n\t\t\t\t</Card.Content>\n\t\t\t\t<Card.Actions>\n\t\t\t\t\t<Text>{luxValue || 1}</Text>\n\t\t\t\t</Card.Actions>\n\t\t\t</Card>\n\t\t</View>\n\t);\n}\n","import { Fontisto } from '@expo/vector-icons';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport React, { useLayoutEffect, useContext } from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { Status } from '../screens/Status';\nimport { PlantContext } from '../context';\nimport { RootTabNavigationProps } from '../types/stack';\n\nconst Tab = createMaterialBottomTabNavigator();\n\nexport function RootTabNavigation({ navigation, route }: RootTabNavigationProps) {\n\tconst theme = useTheme();\n\n\tconst plantContext = useContext(PlantContext);\n\tconst plant = plantContext.plant;\n\n\tuseLayoutEffect(() => {\n\t\tnavigation.setOptions({\n\t\t\ttitle: plant.name,\n\t\t});\n\t}, [navigation, route]);\n\n\treturn (\n\t\t<Tab.Navigator>\n\t\t\t<Tab.Screen\n\t\t\t\tname=\"Status\"\n\t\t\t\tcomponent={Status}\n\t\t\t\toptions={{\n\t\t\t\t\ttabBarLabel: 'Status',\n\t\t\t\t\ttabBarIcon: () => (\n\t\t\t\t\t\t<Fontisto name=\"heartbeat-alt\" size={24} color={theme.colors.primary} />\n\t\t\t\t\t),\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Tab.Navigator>\n\t);\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport { Home } from '../screens/Home';\nimport { Header } from '../components/Header';\nimport IdentificationMethod from '../screens/IdentificationMethod';\nimport { ImageMethod } from '../screens/ImageMethod';\nimport { TextMethod } from '../screens/TextMethod';\nimport { Result } from '../screens/Result';\nimport { Name } from '../screens/Name';\nimport { Code } from '../screens/Code';\nimport { RootTabNavigation } from './RootTabNavigation';\n\nconst Stack = createStackNavigator();\n\nexport default function RootStackNavigator() {\n\treturn (\n\t\t<Stack.Navigator\n\t\t\tinitialRouteName=\"Home\"\n\t\t\tscreenOptions={{\n\t\t\t\theader: Header,\n\t\t\t}}>\n\t\t\t<Stack.Screen name=\"Home\" component={Home} options={{ title: 'Suas Plantas' }} />\n\t\t\t<Stack.Screen\n\t\t\t\tname=\"IdentificationMethod\"\n\t\t\t\tcomponent={IdentificationMethod}\n\t\t\t\toptions={{ title: 'Método de Identificação' }}\n\t\t\t/>\n\t\t\t<Stack.Screen\n\t\t\t\tname=\"ImageMethod\"\n\t\t\t\tcomponent={ImageMethod}\n\t\t\t\toptions={{ title: 'Identificação por imagem' }}\n\t\t\t/>\n\t\t\t<Stack.Screen\n\t\t\t\tname=\"TextMethod\"\n\t\t\t\tcomponent={TextMethod}\n\t\t\t\toptions={{ title: 'Identificação por texto' }}\n\t\t\t/>\n\t\t\t<Stack.Screen name=\"Result\" component={Result} options={{ title: 'Resultado' }} />\n\t\t\t<Stack.Screen name=\"Name\" component={Name} options={{ title: 'Nome' }} />\n\t\t\t<Stack.Screen name=\"Code\" component={Code} options={{ title: 'Código' }} />\n\t\t\t<Stack.Screen name=\"RootTabNavigation\" component={RootTabNavigation} />\n\t\t</Stack.Navigator>\n\t);\n}\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Drawer, Switch, Text, TouchableRipple, useTheme } from 'react-native-paper';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { PreferencesContext } from './PreferencesContext';\n\nexport default function DrawerContent() {\n\tconst insets = useSafeAreaInsets();\n\n\tconst { toggleTheme, isThemeDark } = React.useContext(PreferencesContext);\n\tconst theme = useTheme();\n\n\treturn (\n\t\t<Drawer.Section\n\t\t\ttitle=\"Preferences\"\n\t\t\tstyle={{\n\t\t\t\tflex: 1,\n\t\t\t\tpaddingTop: insets.top + 4,\n\t\t\t\tbackgroundColor: theme.colors.background,\n\t\t\t\tmarginBottom: 0,\n\t\t\t}}>\n\t\t\t<TouchableRipple onPress={toggleTheme}>\n\t\t\t\t<View style={[styles.preference]}>\n\t\t\t\t\t<Text variant=\"labelLarge\">Dark Theme</Text>\n\t\t\t\t\t<View pointerEvents=\"none\">\n\t\t\t\t\t\t<Switch value={isThemeDark} testID=\"theme switch\" />\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</TouchableRipple>\n\t\t</Drawer.Section>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tdrawerContent: {\n\t\tflex: 1,\n\t},\n\tpreference: {\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'space-between',\n\t\talignItems: 'center',\n\t\tpaddingVertical: 12,\n\t\tpaddingHorizontal: 16,\n\t},\n\tv3Preference: {\n\t\theight: 56,\n\t\tpaddingHorizontal: 28,\n\t},\n\tbadge: {\n\t\talignSelf: 'center',\n\t},\n});\n","/* eslint-disable react/prop-types */\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport React from 'react';\n\nimport RootStackNavigator from './RootStackNavigator';\nimport DrawerContent from '../components/DrawerContent';\n\nconst Drawer = createDrawerNavigator();\n\nexport default function RootNavigation({ theme }) {\n\treturn (\n\t\t<NavigationContainer theme={theme}>\n\t\t\t<Drawer.Navigator\n\t\t\t\tinitialRouteName=\"Home\"\n\t\t\t\tdrawerContent={DrawerContent}\n\t\t\t\tscreenOptions={{\n\t\t\t\t\theaderShown: false,\n\t\t\t\t\tdrawerPosition: 'right',\n\t\t\t\t}}>\n\t\t\t\t<Drawer.Screen\n\t\t\t\t\tname=\"Root\"\n\t\t\t\t\tcomponent={RootStackNavigator}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\theaderTintColor: theme.colors.onBackground,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Drawer.Navigator>\n\t\t</NavigationContainer>\n\t);\n}\n","export const lightGreenColors = {\n\tcolors: {\n\t\tprimary: 'rgb(0, 107, 86)',\n\t\tonPrimary: 'rgb(255, 255, 255)',\n\t\tprimaryContainer: 'rgb(126, 248, 212)',\n\t\tonPrimaryContainer: 'rgb(0, 32, 24)',\n\t\tsecondary: 'rgb(75, 99, 91)',\n\t\tonSecondary: 'rgb(255, 255, 255)',\n\t\tsecondaryContainer: 'rgb(206, 233, 221)',\n\t\tonSecondaryContainer: 'rgb(7, 32, 25)',\n\t\ttertiary: 'rgb(65, 99, 118)',\n\t\tonTertiary: 'rgb(255, 255, 255)',\n\t\ttertiaryContainer: 'rgb(196, 231, 255)',\n\t\tonTertiaryContainer: 'rgb(0, 30, 44)',\n\t\terror: 'rgb(186, 26, 26)',\n\t\tonError: 'rgb(255, 255, 255)',\n\t\terrorContainer: 'rgb(255, 218, 214)',\n\t\tonErrorContainer: 'rgb(65, 0, 2)',\n\t\tbackground: 'rgb(251, 253, 250)',\n\t\tonBackground: 'rgb(25, 28, 27)',\n\t\tsurface: 'rgb(251, 253, 250)',\n\t\tonSurface: 'rgb(25, 28, 27)',\n\t\tsurfaceVariant: 'rgb(219, 229, 223)',\n\t\tonSurfaceVariant: 'rgb(63, 73, 69)',\n\t\toutline: 'rgb(111, 121, 117)',\n\t\toutlineVariant: 'rgb(191, 201, 195)',\n\t\tshadow: 'rgb(0, 0, 0)',\n\t\tscrim: 'rgb(0, 0, 0)',\n\t\tinverseSurface: 'rgb(46, 49, 47)',\n\t\tinverseOnSurface: 'rgb(239, 241, 238)',\n\t\tinversePrimary: 'rgb(96, 219, 185)',\n\t\televation: {\n\t\t\tlevel0: 'transparent',\n\t\t\tlevel1: 'rgb(238, 246, 242)',\n\t\t\tlevel2: 'rgb(231, 241, 237)',\n\t\t\tlevel3: 'rgb(223, 237, 232)',\n\t\t\tlevel4: 'rgb(221, 236, 230)',\n\t\t\tlevel5: 'rgb(216, 233, 227)',\n\t\t},\n\t\tsurfaceDisabled: 'rgba(25, 28, 27, 0.12)',\n\t\tonSurfaceDisabled: 'rgba(25, 28, 27, 0.38)',\n\t\tbackdrop: 'rgba(41, 50, 47, 0.4)',\n\t},\n};\n\nexport const darkGreenColors = {\n\tcolors: {\n\t\tprimary: 'rgb(96, 219, 185)',\n\t\tonPrimary: 'rgb(0, 56, 43)',\n\t\tprimaryContainer: 'rgb(0, 81, 64)',\n\t\tonPrimaryContainer: 'rgb(126, 248, 212)',\n\t\tsecondary: 'rgb(178, 204, 193)',\n\t\tonSecondary: 'rgb(29, 53, 45)',\n\t\tsecondaryContainer: 'rgb(52, 76, 67)',\n\t\tonSecondaryContainer: 'rgb(206, 233, 221)',\n\t\ttertiary: 'rgb(168, 203, 226)',\n\t\tonTertiary: 'rgb(13, 52, 70)',\n\t\ttertiaryContainer: 'rgb(40, 75, 94)',\n\t\tonTertiaryContainer: 'rgb(196, 231, 255)',\n\t\terror: 'rgb(255, 180, 171)',\n\t\tonError: 'rgb(105, 0, 5)',\n\t\terrorContainer: 'rgb(147, 0, 10)',\n\t\tonErrorContainer: 'rgb(255, 180, 171)',\n\t\tbackground: 'rgb(25, 28, 27)',\n\t\tonBackground: 'rgb(225, 227, 224)',\n\t\tsurface: 'rgb(25, 28, 27)',\n\t\tonSurface: 'rgb(225, 227, 224)',\n\t\tsurfaceVariant: 'rgb(63, 73, 69)',\n\t\tonSurfaceVariant: 'rgb(191, 201, 195)',\n\t\toutline: 'rgb(137, 147, 142)',\n\t\toutlineVariant: 'rgb(63, 73, 69)',\n\t\tshadow: 'rgb(0, 0, 0)',\n\t\tscrim: 'rgb(0, 0, 0)',\n\t\tinverseSurface: 'rgb(225, 227, 224)',\n\t\tinverseOnSurface: 'rgb(46, 49, 47)',\n\t\tinversePrimary: 'rgb(0, 107, 86)',\n\t\televation: {\n\t\t\tlevel0: 'transparent',\n\t\t\tlevel1: 'rgb(29, 38, 35)',\n\t\t\tlevel2: 'rgb(31, 43, 40)',\n\t\t\tlevel3: 'rgb(33, 49, 44)',\n\t\t\tlevel4: 'rgb(34, 51, 46)',\n\t\t\tlevel5: 'rgb(35, 55, 49)',\n\t\t},\n\t\tsurfaceDisabled: 'rgba(225, 227, 224, 0.12)',\n\t\tonSurfaceDisabled: 'rgba(225, 227, 224, 0.38)',\n\t\tbackdrop: 'rgba(41, 50, 47, 0.4)',\n\t},\n};\n","import 'react-native-gesture-handler';\n\nimport {\n\tDarkTheme as NavigationDarkTheme,\n\tDefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { MD3DarkTheme, MD3LightTheme, adaptNavigationTheme } from 'react-native-paper';\n\nimport { darkGreenColors, lightGreenColors } from './colors';\n\nconst { LightTheme, DarkTheme } = adaptNavigationTheme({\n\treactNavigationLight: NavigationDefaultTheme,\n\treactNavigationDark: NavigationDarkTheme,\n});\n\nexport const CombinedDefaultTheme = {\n\t...MD3LightTheme,\n\t...LightTheme,\n\t...lightGreenColors,\n};\n\nexport const CombinedDarkTheme = {\n\t...MD3DarkTheme,\n\t...DarkTheme,\n\t...darkGreenColors,\n};\n","import 'react-native-gesture-handler';\n\nimport { registerRootComponent } from 'expo';\nimport React from 'react';\nimport { Provider as PaperProvider } from 'react-native-paper';\n\nimport { PreferencesContext } from './components/PreferencesContext';\nimport RootNavigation from './navigation/RootNavigation';\nimport { CombinedDarkTheme, CombinedDefaultTheme } from './utils/theme';\nimport { StatusBar } from 'react-native';\nimport { PlantProvider } from './context';\nimport { MQTTProvider } from './api/mqtt';\n\nfunction App() {\n\tconst [isThemeDark, setIsThemeDark] = React.useState(false);\n\n\tconst theme = isThemeDark ? CombinedDarkTheme : CombinedDefaultTheme;\n\n\tconst toggleTheme = React.useCallback(() => {\n\t\treturn setIsThemeDark(!isThemeDark);\n\t}, [isThemeDark]);\n\n\tconst preferences = React.useMemo(\n\t\t() => ({\n\t\t\ttoggleTheme,\n\t\t\tisThemeDark,\n\t\t}),\n\t\t[toggleTheme, isThemeDark]\n\t);\n\n\treturn (\n\t\t<PaperProvider theme={theme}>\n\t\t\t<PreferencesContext.Provider value={preferences}>\n\t\t\t\t<>\n\t\t\t\t\t<PlantProvider>\n\t\t\t\t\t\t<MQTTProvider>\n\t\t\t\t\t\t\t<StatusBar barStyle={isThemeDark ? 'light-content' : 'dark-content'} />\n\t\t\t\t\t\t\t<RootNavigation theme={theme} />\n\t\t\t\t\t\t</MQTTProvider>\n\t\t\t\t\t</PlantProvider>\n\t\t\t\t</>\n\t\t\t</PreferencesContext.Provider>\n\t\t</PaperProvider>\n\t);\n}\n\nexport default registerRootComponent(App);\n"],"sourceRoot":""}