{"version":3,"sources":["src/components/PreferencesContext.tsx","src/screens/Home.tsx","src/components/Header.tsx","src/screens/IdentificationMethod.tsx","src/components/DeletableImage.tsx","src/screens/ImageMethod.tsx","src/navigation/RootStackNavigator.tsx","src/components/DrawerContent.tsx","src/navigation/RootNavigation.tsx","src/utils/colors.ts","src/utils/theme.tsx","src/App.tsx"],"names":["PreferencesContext","React","createContext","toggleTheme","isThemeDark","Home","navigation","SafeAreaView","style","styles","container","View","row","FAB","icon","onPress","navigate","visible","fabStyle","Text","variant","StyleSheet","create","flexGrow","padding","justifyContent","flex","marginBottom","flexDirection","alignItems","margin","MORE_ICON","Platform","OS","Header","back","options","theme","useTheme","useState","menuVisible","setMenuVisible","Appbar","colors","primary","surface","BackAction","goBack","Content","title","Menu","onDismiss","s","anchor","Action","openDrawer","IdentificationMethod","textAlign","label","size","console","log","paddingHorizontal","fabVariant","DeletableImage","image","remove","Image","source","uri","position","top","right","value","name","color","containerStyle","badgeContainer","badgeStyle","badge","id","backgroundColor","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","error","ImageMethod","images","setImages","setVisible","pickImage","method","mediaTypes","ImagePicker","Images","allowsEditing","result","canceled","alert","newImage","assets","assetId","length","toString","some","removeImage","newImages","index","findIndex","splice","Dimensions","get","alignContent","pagingEnabled","snapEnabled","mode","modeConfig","snapDirection","loop","data","renderItem","item","compressedFabStyle","onLongPress","bottom","Stack","createStackNavigator","RootStackNavigator","Navigator","initialRouteName","screenOptions","header","Screen","component","DrawerContent","insets","useSafeAreaInsets","Section","paddingTop","background","TouchableRipple","preference","pointerEvents","Switch","drawerContent","paddingVertical","v3Preference","alignSelf","Drawer","createDrawerNavigator","RootNavigation","NavigationContainer","headerShown","drawerPosition","headerTintColor","onBackground","lightGreenColors","onPrimary","primaryContainer","onPrimaryContainer","secondary","onSecondary","secondaryContainer","onSecondaryContainer","tertiary","onTertiary","tertiaryContainer","onTertiaryContainer","onError","errorContainer","onErrorContainer","onSurface","surfaceVariant","onSurfaceVariant","outline","outlineVariant","shadow","scrim","inverseSurface","inverseOnSurface","inversePrimary","level0","level1","level2","level3","level4","level5","surfaceDisabled","onSurfaceDisabled","backdrop","darkGreenColors","adaptNavigationTheme","reactNavigationLight","NavigationDefaultTheme","reactNavigationDark","NavigationDarkTheme","LightTheme","DarkTheme","CombinedDefaultTheme","MD3LightTheme","CombinedDarkTheme","MD3DarkTheme","registerRootComponent","setIsThemeDark","useCallback","preferences","useMemo","Provider"],"mappings":"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","file":"static/js/app.f9434505.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\nimport React from 'react';\n\nexport const PreferencesContext = React.createContext({\n\ttoggleTheme: () => {},\n\tisThemeDark: false,\n});\n","import React from 'react';\nimport { SafeAreaView, View, StyleSheet } from 'react-native';\nimport { Text, FAB } from 'react-native-paper';\nimport { HomeProps } from '../types/index';\n\nexport function Home({ navigation }: HomeProps) {\n\treturn (\n\t\t<SafeAreaView style={styles.container}>\n\t\t\t<View style={styles.row}>\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"plus\"\n\t\t\t\t\tonPress={() => navigation.navigate('IdentificationMethod')}\n\t\t\t\t\tvisible\n\t\t\t\t\tstyle={[styles.fabStyle]}\n\t\t\t\t/>\n\t\t\t\t<Text variant=\"titleSmall\">Adicione sua primeira planta</Text>\n\t\t\t</View>\n\t\t</SafeAreaView>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t\tpadding: 8,\n\t\tjustifyContent: 'center',\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tmarginBottom: 8,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tpadding: 10,\n\t},\n\tfabStyle: {\n\t\tmargin: 20,\n\t},\n});\n","import { DrawerNavigationProp } from '@react-navigation/drawer';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport React from 'react';\nimport { Platform } from 'react-native';\nimport { useTheme, Appbar, Menu } from 'react-native-paper';\n\nexport type RootStackParamList = {\n\tApp: undefined;\n};\n\nconst MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\n\nexport const Header = ({ navigation, back, options }: StackHeaderProps) => {\n\tconst theme = useTheme();\n\tconst [menuVisible, setMenuVisible] = React.useState(false);\n\n\treturn (\n\t\t<Appbar.Header\n\t\t\ttheme={{\n\t\t\t\tcolors: {\n\t\t\t\t\tprimary: theme?.colors.surface,\n\t\t\t\t},\n\t\t\t}}>\n\t\t\t{back ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n\t\t\t<Appbar.Content title={options.title} />\n\t\t\t<Menu\n\t\t\t\tvisible={menuVisible}\n\t\t\t\tonDismiss={() => setMenuVisible(false)}\n\t\t\t\tanchor={\n\t\t\t\t\t<Appbar.Action\n\t\t\t\t\t\ticon={MORE_ICON}\n\t\t\t\t\t\tonPress={() =>\n\t\t\t\t\t\t\t(navigation as unknown as DrawerNavigationProp<{ any }>).openDrawer()\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t}>\n\t\t\t\t<></>\n\t\t\t</Menu>\n\t\t</Appbar.Header>\n\t);\n};\n","import React from 'react';\nimport { SafeAreaView, View, StyleSheet } from 'react-native';\nimport { Text, FAB } from 'react-native-paper';\nimport { IdentificationMethodProps } from '../types/index';\n\nexport default function IdentificationMethod({ navigation }: IdentificationMethodProps) {\n\treturn (\n\t\t<SafeAreaView style={styles.container}>\n\t\t\t<View style={styles.row}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\t{' '}\n\t\t\t\t\tSelecione o método que deseja seguir para identificar sua plantinha!\n\t\t\t\t</Text>\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"camera\"\n\t\t\t\t\tlabel=\"Identificar por imagem\"\n\t\t\t\t\tonPress={() => navigation.navigate('ImageMethod')}\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tvisible\n\t\t\t\t/>\n\t\t\t\t<Text variant=\"titleMedium\"> ou </Text>\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"clipboard-edit-outline\"\n\t\t\t\t\tlabel=\"Buscar manualmente\"\n\t\t\t\t\tonPress={() => console.log('search')}\n\t\t\t\t\tvisible\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</SafeAreaView>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 0.9,\n\t\tpaddingHorizontal: 8,\n\t\tjustifyContent: 'center',\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tmarginBottom: 8,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'space-evenly',\n\t\talignItems: 'center',\n\t},\n\tfabVariant: {},\n});\n","import React from 'react';\nimport { View, StyleSheet, Image } from 'react-native';\nimport { ImageType } from '../types/index';\nimport { Badge, Icon } from 'react-native-elements';\nimport { useTheme } from 'react-native-paper';\n\ntype DeletableImageType = {\n\timage: ImageType;\n\tremove: (id: string) => void;\n};\n\nexport function DeletableImage({ image, remove }: DeletableImageType) {\n\tconst theme = useTheme();\n\n\treturn (\n\t\t<View style={styles(theme).container}>\n\t\t\t<Image source={{ uri: image.uri }} style={styles(theme).image} />\n\t\t\t<View style={{ position: 'absolute', top: 0, right: 0 }}>\n\t\t\t\t<Badge\n\t\t\t\t\tvalue={<Icon name=\"close\" size={18} color=\"white\" />}\n\t\t\t\t\tcontainerStyle={styles(theme).badgeContainer}\n\t\t\t\t\tbadgeStyle={styles(theme).badge}\n\t\t\t\t\tonPress={() => remove(image.id)}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</View>\n\t);\n}\n\nconst styles = (theme) =>\n\tStyleSheet.create({\n\t\tcontainer: {\n\t\t\tbackgroundColor: '#fff',\n\t\t\tborderRadius: 10,\n\t\t\tshadowColor: '#000',\n\t\t\tshadowOffset: { width: 0, height: 2 },\n\t\t\tshadowOpacity: 0.25,\n\t\t\tshadowRadius: 3.84,\n\t\t\televation: 5,\n\t\t\twidth: '70%',\n\t\t\theight: 200,\n\t\t\tmargin: 20,\n\t\t},\n\t\timage: {\n\t\t\twidth: '100%',\n\t\t\theight: 200,\n\t\t\tborderRadius: 10,\n\t\t},\n\t\tbadgeContainer: {\n\t\t\tposition: 'relative',\n\t\t\ttop: -10,\n\t\t\tright: -10,\n\t\t\tbackgroundColor: 'transparent',\n\t\t},\n\t\tbadge: {\n\t\t\theight: 30,\n\t\t\twidth: 30,\n\t\t\tbackgroundColor: theme.colors.error,\n\t\t},\n\t});\n","import * as ImagePicker from 'expo-image-picker';\nimport React, { useState } from 'react';\nimport { StyleSheet, View, SafeAreaView, Dimensions } from 'react-native';\nimport { ImageMethodProps, ImageType } from '../types/index';\nimport { DeletableImage } from '../components/DeletableImage';\nimport { FAB, Text } from 'react-native-paper';\nimport Carousel from 'react-native-reanimated-carousel';\n\nexport function ImageMethod({ navigation }: ImageMethodProps) {\n\tconst [images, setImages] = useState<ImageType[]>([]);\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\n\tconst pickImage = async (method) => {\n\t\tconst options = {\n\t\t\tmediaTypes: ImagePicker.MediaTypeOptions.Images,\n\t\t\tallowsEditing: false,\n\t\t};\n\n\t\tlet result: ImagePicker.ImagePickerResult = null;\n\n\t\tif (method == 'camera') {\n\t\t\tresult = await ImagePicker.launchCameraAsync(options);\n\t\t} else {\n\t\t\tresult = await ImagePicker.launchImageLibraryAsync(options);\n\t\t}\n\n\t\tif (!result.canceled) {\n\t\t\tconst newImage = {\n\t\t\t\tid: result.assets[0].assetId ? result.assets[0].assetId : images.length.toString(),\n\t\t\t\turi: result.assets[0].uri,\n\t\t\t};\n\t\t\tif (!images.some((image) => image.id === newImage.id)) {\n\t\t\t\tsetImages([...images, newImage]);\n\t\t\t}\n\t\t} else {\n\t\t\talert('Você não adicionou nenhuma imagem.');\n\t\t}\n\t};\n\tconst removeImage = (id: string) => {\n\t\tconst newImages = [...images];\n\t\tconst index = newImages.findIndex((image) => image.id === id);\n\t\tif (index !== -1) {\n\t\t\tnewImages.splice(index, 1);\n\t\t\tsetImages(newImages);\n\t\t}\n\t};\n\n\tconst width = Dimensions.get('window').width;\n\n\treturn (\n\t\t<SafeAreaView style={styles.container}>\n\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\tAdicione algumas fotos para podermos identificar sua planta!\n\t\t\t</Text>\n\t\t\t<View style={styles.row}>\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"camera\"\n\t\t\t\t\tlabel=\"Tirar foto\"\n\t\t\t\t\tonPress={() => pickImage('camera')}\n\t\t\t\t\tvisible\n\t\t\t\t\tstyle={[styles.fabStyle]}\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t/>\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"image\"\n\t\t\t\t\tlabel=\"Adicionar da galeria\"\n\t\t\t\t\tonPress={() => pickImage('gallery')}\n\t\t\t\t\tvisible\n\t\t\t\t\tstyle={[styles.fabStyle]}\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t/>\n\t\t\t</View>\n\t\t\t{images.length > 0 ? (\n\t\t\t\t<View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\talignContent: 'center',\n\t\t\t\t\t}}>\n\t\t\t\t\t<Carousel\n\t\t\t\t\t\tpagingEnabled={true}\n\t\t\t\t\t\tsnapEnabled={true}\n\t\t\t\t\t\tmode={'horizontal-stack'}\n\t\t\t\t\t\tmodeConfig={{\n\t\t\t\t\t\t\tsnapDirection: 'left',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tloop={true}\n\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\tdata={images}\n\t\t\t\t\t\trenderItem={({ item }) => <DeletableImage image={item} remove={removeImage} />}\n\t\t\t\t\t/>\n\t\t\t\t\t<FAB\n\t\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\t\tonPress={() => console.log('click')}\n\t\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t) : (\n\t\t\t\t<></>\n\t\t\t)}\n\t\t</SafeAreaView>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t\tpadding: 40,\n\t\tjustifyContent: 'center',\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'space-evenly',\n\t},\n\tfabStyle: {},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tright: 0,\n\t\tbottom: 0,\n\t},\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport { Home } from '../screens/Home';\nimport { Header } from '../components/Header';\nimport IdentificationMethod from '../screens/IdentificationMethod';\nimport { ImageMethod } from '../screens/ImageMethod';\n\nconst Stack = createStackNavigator();\n\nexport default function RootStackNavigator() {\n\treturn (\n\t\t<Stack.Navigator\n\t\t\tinitialRouteName=\"Home\"\n\t\t\tscreenOptions={{\n\t\t\t\theader: Header,\n\t\t\t}}>\n\t\t\t<Stack.Screen name=\"Home\" component={Home} options={{ title: 'Suas Plantas' }} />\n\t\t\t<Stack.Screen\n\t\t\t\tname=\"IdentificationMethod\"\n\t\t\t\tcomponent={IdentificationMethod}\n\t\t\t\toptions={{ title: 'Método de Identificação' }}\n\t\t\t/>\n\t\t\t<Stack.Screen\n\t\t\t\tname=\"ImageMethod\"\n\t\t\t\tcomponent={ImageMethod}\n\t\t\t\toptions={{ title: 'Identificação por imagem' }}\n\t\t\t/>\n\t\t</Stack.Navigator>\n\t);\n}\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Drawer, Switch, Text, TouchableRipple, useTheme } from 'react-native-paper';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { PreferencesContext } from './PreferencesContext';\n\nexport default function DrawerContent() {\n\tconst insets = useSafeAreaInsets();\n\n\tconst { toggleTheme, isThemeDark } = React.useContext(PreferencesContext);\n\tconst theme = useTheme();\n\n\treturn (\n\t\t<Drawer.Section\n\t\t\ttitle=\"Preferences\"\n\t\t\tstyle={{\n\t\t\t\tflex: 1,\n\t\t\t\tpaddingTop: insets.top + 4,\n\t\t\t\tbackgroundColor: theme.colors.background,\n\t\t\t}}>\n\t\t\t<TouchableRipple onPress={toggleTheme}>\n\t\t\t\t<View style={[styles.preference]}>\n\t\t\t\t\t<Text variant=\"labelLarge\">Dark Theme</Text>\n\t\t\t\t\t<View pointerEvents=\"none\">\n\t\t\t\t\t\t<Switch value={isThemeDark} />\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</TouchableRipple>\n\t\t</Drawer.Section>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tdrawerContent: {\n\t\tflex: 1,\n\t},\n\tpreference: {\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'space-between',\n\t\talignItems: 'center',\n\t\tpaddingVertical: 12,\n\t\tpaddingHorizontal: 16,\n\t},\n\tv3Preference: {\n\t\theight: 56,\n\t\tpaddingHorizontal: 28,\n\t},\n\tbadge: {\n\t\talignSelf: 'center',\n\t},\n});\n","/* eslint-disable react/prop-types */\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport React from 'react';\n\nimport RootStackNavigator from './RootStackNavigator';\nimport DrawerContent from '../components/DrawerContent';\n\nconst Drawer = createDrawerNavigator();\n\nexport default function RootNavigation({ theme }) {\n\treturn (\n\t\t<NavigationContainer theme={theme}>\n\t\t\t<Drawer.Navigator\n\t\t\t\tinitialRouteName=\"Home\"\n\t\t\t\tdrawerContent={DrawerContent}\n\t\t\t\tscreenOptions={{\n\t\t\t\t\theaderShown: false,\n\t\t\t\t\tdrawerPosition: 'right',\n\t\t\t\t}}>\n\t\t\t\t<Drawer.Screen\n\t\t\t\t\tname=\"Root\"\n\t\t\t\t\tcomponent={RootStackNavigator}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\theaderTintColor: theme.colors.onBackground,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Drawer.Navigator>\n\t\t</NavigationContainer>\n\t);\n}\n","export const lightGreenColors = {\n\tcolors: {\n\t\tprimary: 'rgb(0, 107, 86)',\n\t\tonPrimary: 'rgb(255, 255, 255)',\n\t\tprimaryContainer: 'rgb(126, 248, 212)',\n\t\tonPrimaryContainer: 'rgb(0, 32, 24)',\n\t\tsecondary: 'rgb(75, 99, 91)',\n\t\tonSecondary: 'rgb(255, 255, 255)',\n\t\tsecondaryContainer: 'rgb(206, 233, 221)',\n\t\tonSecondaryContainer: 'rgb(7, 32, 25)',\n\t\ttertiary: 'rgb(65, 99, 118)',\n\t\tonTertiary: 'rgb(255, 255, 255)',\n\t\ttertiaryContainer: 'rgb(196, 231, 255)',\n\t\tonTertiaryContainer: 'rgb(0, 30, 44)',\n\t\terror: 'rgb(186, 26, 26)',\n\t\tonError: 'rgb(255, 255, 255)',\n\t\terrorContainer: 'rgb(255, 218, 214)',\n\t\tonErrorContainer: 'rgb(65, 0, 2)',\n\t\tbackground: 'rgb(251, 253, 250)',\n\t\tonBackground: 'rgb(25, 28, 27)',\n\t\tsurface: 'rgb(251, 253, 250)',\n\t\tonSurface: 'rgb(25, 28, 27)',\n\t\tsurfaceVariant: 'rgb(219, 229, 223)',\n\t\tonSurfaceVariant: 'rgb(63, 73, 69)',\n\t\toutline: 'rgb(111, 121, 117)',\n\t\toutlineVariant: 'rgb(191, 201, 195)',\n\t\tshadow: 'rgb(0, 0, 0)',\n\t\tscrim: 'rgb(0, 0, 0)',\n\t\tinverseSurface: 'rgb(46, 49, 47)',\n\t\tinverseOnSurface: 'rgb(239, 241, 238)',\n\t\tinversePrimary: 'rgb(96, 219, 185)',\n\t\televation: {\n\t\t\tlevel0: 'transparent',\n\t\t\tlevel1: 'rgb(238, 246, 242)',\n\t\t\tlevel2: 'rgb(231, 241, 237)',\n\t\t\tlevel3: 'rgb(223, 237, 232)',\n\t\t\tlevel4: 'rgb(221, 236, 230)',\n\t\t\tlevel5: 'rgb(216, 233, 227)',\n\t\t},\n\t\tsurfaceDisabled: 'rgba(25, 28, 27, 0.12)',\n\t\tonSurfaceDisabled: 'rgba(25, 28, 27, 0.38)',\n\t\tbackdrop: 'rgba(41, 50, 47, 0.4)',\n\t},\n};\n\nexport const darkGreenColors = {\n\tcolors: {\n\t\tprimary: 'rgb(96, 219, 185)',\n\t\tonPrimary: 'rgb(0, 56, 43)',\n\t\tprimaryContainer: 'rgb(0, 81, 64)',\n\t\tonPrimaryContainer: 'rgb(126, 248, 212)',\n\t\tsecondary: 'rgb(178, 204, 193)',\n\t\tonSecondary: 'rgb(29, 53, 45)',\n\t\tsecondaryContainer: 'rgb(52, 76, 67)',\n\t\tonSecondaryContainer: 'rgb(206, 233, 221)',\n\t\ttertiary: 'rgb(168, 203, 226)',\n\t\tonTertiary: 'rgb(13, 52, 70)',\n\t\ttertiaryContainer: 'rgb(40, 75, 94)',\n\t\tonTertiaryContainer: 'rgb(196, 231, 255)',\n\t\terror: 'rgb(255, 180, 171)',\n\t\tonError: 'rgb(105, 0, 5)',\n\t\terrorContainer: 'rgb(147, 0, 10)',\n\t\tonErrorContainer: 'rgb(255, 180, 171)',\n\t\tbackground: 'rgb(25, 28, 27)',\n\t\tonBackground: 'rgb(225, 227, 224)',\n\t\tsurface: 'rgb(25, 28, 27)',\n\t\tonSurface: 'rgb(225, 227, 224)',\n\t\tsurfaceVariant: 'rgb(63, 73, 69)',\n\t\tonSurfaceVariant: 'rgb(191, 201, 195)',\n\t\toutline: 'rgb(137, 147, 142)',\n\t\toutlineVariant: 'rgb(63, 73, 69)',\n\t\tshadow: 'rgb(0, 0, 0)',\n\t\tscrim: 'rgb(0, 0, 0)',\n\t\tinverseSurface: 'rgb(225, 227, 224)',\n\t\tinverseOnSurface: 'rgb(46, 49, 47)',\n\t\tinversePrimary: 'rgb(0, 107, 86)',\n\t\televation: {\n\t\t\tlevel0: 'transparent',\n\t\t\tlevel1: 'rgb(29, 38, 35)',\n\t\t\tlevel2: 'rgb(31, 43, 40)',\n\t\t\tlevel3: 'rgb(33, 49, 44)',\n\t\t\tlevel4: 'rgb(34, 51, 46)',\n\t\t\tlevel5: 'rgb(35, 55, 49)',\n\t\t},\n\t\tsurfaceDisabled: 'rgba(225, 227, 224, 0.12)',\n\t\tonSurfaceDisabled: 'rgba(225, 227, 224, 0.38)',\n\t\tbackdrop: 'rgba(41, 50, 47, 0.4)',\n\t},\n};\n","import 'react-native-gesture-handler';\n\nimport {\n\tDarkTheme as NavigationDarkTheme,\n\tDefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { MD3DarkTheme, MD3LightTheme, adaptNavigationTheme } from 'react-native-paper';\n\nimport { darkGreenColors, lightGreenColors } from './colors';\n\nconst { LightTheme, DarkTheme } = adaptNavigationTheme({\n\treactNavigationLight: NavigationDefaultTheme,\n\treactNavigationDark: NavigationDarkTheme,\n});\n\nexport const CombinedDefaultTheme = {\n\t...MD3LightTheme,\n\t...LightTheme,\n\t...lightGreenColors,\n};\n\nexport const CombinedDarkTheme = {\n\t...MD3DarkTheme,\n\t...DarkTheme,\n\t...darkGreenColors,\n};\n","import 'react-native-gesture-handler';\n\nimport { registerRootComponent } from 'expo';\nimport React from 'react';\nimport { Provider as PaperProvider } from 'react-native-paper';\n\nimport { PreferencesContext } from './components/PreferencesContext';\nimport RootNavigation from './navigation/RootNavigation';\nimport { CombinedDarkTheme, CombinedDefaultTheme } from './utils/theme';\n\nfunction App() {\n\tconst [isThemeDark, setIsThemeDark] = React.useState(false);\n\n\tconst theme = isThemeDark ? CombinedDarkTheme : CombinedDefaultTheme;\n\n\tconst toggleTheme = React.useCallback(() => {\n\t\treturn setIsThemeDark(!isThemeDark);\n\t}, [isThemeDark]);\n\n\tconst preferences = React.useMemo(\n\t\t() => ({\n\t\t\ttoggleTheme,\n\t\t\tisThemeDark,\n\t\t}),\n\t\t[toggleTheme, isThemeDark]\n\t);\n\n\treturn (\n\t\t<PaperProvider theme={theme}>\n\t\t\t<PreferencesContext.Provider value={preferences}>\n\t\t\t\t<>\n\t\t\t\t\t<RootNavigation theme={theme} />\n\t\t\t\t</>\n\t\t\t</PreferencesContext.Provider>\n\t\t</PaperProvider>\n\t);\n}\n\nexport default registerRootComponent(App);\n"],"sourceRoot":""}