{"version":3,"file":"static/js/main.96823518.js","mappings":"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","sources":["src/components/PreferencesContext.tsx","src/storage/index.ts","src/context/index.tsx","src/screens/Home.tsx","src/components/Header.tsx","src/screens/IdentificationMethod.tsx","src/components/DeletableImage.tsx","src/api/plant_id/index.ts","src/api/location/index.tsx","src/screens/ImageMethod.tsx","src/api/trefle/index.ts","src/screens/TextMethod.tsx","src/components/PlantOptionsList.tsx","src/utils/defaults.ts","src/utils/index.ts","src/utils/mapper.ts","src/screens/Result.tsx","src/screens/Name.tsx","src/api/notification/index.tsx","src/screens/Code.tsx","src/components/LinearGaugeChart.tsx","src/api/socket/index.tsx","src/api/weatherstack/index.tsx","src/screens/Status.tsx","src/screens/Configurations.tsx","src/navigation/RootTabNavigation.tsx","src/navigation/RootStackNavigator.tsx","src/components/DrawerContent.tsx","src/navigation/RootNavigation.tsx","src/utils/colors.ts","src/utils/theme.tsx","src/App.tsx","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\nimport * as React from 'react';\n\nexport const PreferencesContext = React.createContext({\n\ttoggleTheme: () => {},\n\tisThemeDark: false,\n});\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Plant } from '../types';\n\nexport const storeData = async (value: Plant) => {\n\ttry {\n\t\tconst jsonValue = JSON.stringify(value);\n\t\tawait AsyncStorage.setItem(`@${value.id}`, jsonValue);\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao salvar o objeto');\n\t}\n};\n\nexport const getAllKeys = async () => {\n\ttry {\n\t\treturn (await AsyncStorage.getAllKeys()).filter((it) => it.startsWith('@'));\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao pegar as chaves dos objetos');\n\t}\n};\n\nexport const getMultiple = async (keys: readonly string[]) => {\n\tlet values;\n\ttry {\n\t\tvalues = await AsyncStorage.multiGet(keys);\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao pegar os objetos');\n\t}\n\treturn values;\n};\n\nexport const getOne = async (key: string) => {\n\ttry {\n\t\tconst jsonValue = await AsyncStorage.getItem(key);\n\t\treturn jsonValue != null ? (JSON.parse(jsonValue) as Plant) : null;\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao pegar o objeto');\n\t}\n};\n\nexport const removeValue = async (key: string) => {\n\ttry {\n\t\tawait AsyncStorage.removeItem(key);\n\t} catch (e) {\n\t\tthrow new Error('Ocorreu um erro ao remover o objeto');\n\t}\n};\n","import React, { createContext, useState, useMemo, ReactNode } from 'react';\nimport { Plant, PlantContextType } from '../types';\n\nexport const PlantContext = createContext<PlantContextType | null>(null);\n\ninterface PlantProviderProps {\n\tchildren: ReactNode;\n}\n\nexport const PlantProvider = ({ children }: PlantProviderProps) => {\n\tconst [plant, setPlant] = useState<Plant>(null);\n\n\tconst updatePlant = (plant: Plant) => {\n\t\tsetPlant(plant);\n\t};\n\n\tconst updatePlantName = (name: string) => {\n\t\tsetPlant({\n\t\t\t...plant,\n\t\t\tname: name,\n\t\t});\n\t};\n\n\tconst updatePlantCode = (code: string) => {\n\t\tsetPlant({\n\t\t\t...plant,\n\t\t\tcode: code,\n\t\t});\n\t};\n\n\tconst resetContext = () => {\n\t\tsetPlant(null);\n\t};\n\n\tconst contextValue = useMemo(() => {\n\t\treturn { plant, updatePlant, updatePlantName, updatePlantCode, resetPlant: resetContext };\n\t}, [plant, updatePlant, updatePlantName, updatePlantCode, resetContext]);\n\n\treturn <PlantContext.Provider value={contextValue}>{children}</PlantContext.Provider>;\n};\n","import { useState, useEffect, useContext } from 'react';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Text, FAB, List, Avatar, Snackbar } from 'react-native-paper';\nimport { Plant } from '../types';\nimport { HomeProps } from '../types/stack';\nimport { getAllKeys, getMultiple } from '../storage';\nimport { PlantContext } from '../context';\n\nexport function Home({ navigation, route }: HomeProps) {\n\tconst [visibleAlert, setVisiblAlert] = React.useState(route.params?.success ? true : false);\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\n\tconst onDismissSnackBar = () => setVisiblAlert(false);\n\n\tconst [plants, setPlants] = useState([]);\n\n\tconst plantContext = useContext(PlantContext);\n\n\tuseEffect(() => {\n\t\tsetVisiblAlert(route.params?.success ? true : false);\n\t}, [route.params?.success]);\n\n\tuseEffect(() => {\n\t\tconst loadPlants = async () => {\n\t\t\tconst keys = await getAllKeys();\n\t\t\tconst result = await getMultiple(keys);\n\t\t\tsetPlants(result);\n\t\t};\n\n\t\tloadPlants();\n\t}, [visibleAlert, plantContext]);\n\n\tconst handleOnPress = (plant: Plant) => {\n\t\tplantContext.updatePlant(plant);\n\t\tnavigation.navigate('RootTabNavigation');\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<View style={styles.container}>\n\t\t\t\t{plants.length > 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<View style={{ flex: 1, justifyContent: 'flex-start' }}>\n\t\t\t\t\t\t\t{plants.map((it: [string, string]) => {\n\t\t\t\t\t\t\t\tconst plant = JSON.parse(it[1]) as Plant;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<List.Item\n\t\t\t\t\t\t\t\t\t\tkey={plant.id}\n\t\t\t\t\t\t\t\t\t\ttitle={plant.name}\n\t\t\t\t\t\t\t\t\t\ttitleStyle={{ fontSize: 18, fontWeight: 'bold' }}\n\t\t\t\t\t\t\t\t\t\tdescription={plant.scientific_name}\n\t\t\t\t\t\t\t\t\t\tonPress={() => handleOnPress(plant)}\n\t\t\t\t\t\t\t\t\t\tleft={() => <Avatar.Text label={plant.name[0]} size={40} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t<FAB\n\t\t\t\t\t\t\ticon=\"plus\"\n\t\t\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\t\t\tonPress={() => navigation.navigate('IdentificationMethod')}\n\t\t\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\t\t\ttestID=\"Add Plant\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<View style={styles.row}>\n\t\t\t\t\t\t<FAB\n\t\t\t\t\t\t\ticon=\"plus\"\n\t\t\t\t\t\t\tonPress={() => navigation.navigate('IdentificationMethod')}\n\t\t\t\t\t\t\tvisible\n\t\t\t\t\t\t\tstyle={[styles.fabStyle]}\n\t\t\t\t\t\t\ttestID=\"Add Plant\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Text variant=\"titleSmall\">Adicione sua primeira planta</Text>\n\t\t\t\t\t</View>\n\t\t\t\t)}\n\t\t\t</View>\n\t\t\t<Snackbar\n\t\t\t\tvisible={visibleAlert}\n\t\t\t\taction={{\n\t\t\t\t\tlabel: 'OK',\n\t\t\t\t}}\n\t\t\t\tonDismiss={onDismissSnackBar}\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginBottom: 30,\n\t\t\t\t}}>\n\t\t\t\tSua planta foi salva com sucesso!\n\t\t\t</Snackbar>\n\t\t</>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t\tpadding: 8,\n\t\tjustifyContent: 'center',\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tmarginBottom: 8,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tpadding: 10,\n\t},\n\tfabStyle: {\n\t\tmargin: 20,\n\t},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tright: 0,\n\t\tbottom: 0,\n\t\tmargin: 40,\n\t},\n});\n","import { DrawerNavigationProp } from '@react-navigation/drawer';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport { useTheme, Appbar, Menu } from 'react-native-paper';\n\nexport type RootStackParamList = {\n\tApp: undefined;\n};\n\nconst MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\n\nexport const Header = ({ navigation, back, options }: StackHeaderProps) => {\n\tconst theme = useTheme();\n\tconst [menuVisible, setMenuVisible] = React.useState(false);\n\n\treturn (\n\t\t<Appbar.Header\n\t\t\ttheme={{\n\t\t\t\tcolors: {\n\t\t\t\t\tprimary: theme?.colors.surface,\n\t\t\t\t},\n\t\t\t}}>\n\t\t\t{back ? <Appbar.BackAction onPress={navigation.goBack} testID=\"back icon\" /> : null}\n\t\t\t<Appbar.Content title={options.title} />\n\t\t\t<Menu\n\t\t\t\tvisible={menuVisible}\n\t\t\t\tonDismiss={() => setMenuVisible(false)}\n\t\t\t\tanchor={\n\t\t\t\t\t<Appbar.Action\n\t\t\t\t\t\ttestID=\"Appbar Menu\"\n\t\t\t\t\t\ticon={MORE_ICON}\n\t\t\t\t\t\tonPress={() =>\n\t\t\t\t\t\t\t(navigation as unknown as DrawerNavigationProp<{ any }>).openDrawer()\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t}>\n\t\t\t\t<></>\n\t\t\t</Menu>\n\t\t</Appbar.Header>\n\t);\n};\n","import * as React from 'react';\n\nimport { View, StyleSheet } from 'react-native';\nimport { Text, FAB } from 'react-native-paper';\nimport { IdentificationMethodProps } from '../types/stack';\n\nexport default function IdentificationMethod({ navigation }: IdentificationMethodProps) {\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<View style={styles.row}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\t{' '}\n\t\t\t\t\tSelecione o método que deseja seguir para identificar sua plantinha!\n\t\t\t\t</Text>\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"camera\"\n\t\t\t\t\tlabel=\"Identificar por imagem\"\n\t\t\t\t\tonPress={() => navigation.navigate('ImageMethod')}\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tvisible\n\t\t\t\t/>\n\t\t\t\t<Text variant=\"titleMedium\"> ou </Text>\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"clipboard-edit-outline\"\n\t\t\t\t\tlabel=\"Identificar por texto\"\n\t\t\t\t\tonPress={() => navigation.navigate('TextMethod')}\n\t\t\t\t\tvisible\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 0.9,\n\t\tpaddingHorizontal: 8,\n\t\tjustifyContent: 'center',\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tmarginBottom: 8,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'space-evenly',\n\t\talignItems: 'center',\n\t},\n\tfabVariant: {},\n});\n","import * as React from 'react';\nimport { View, StyleSheet, Image } from 'react-native';\nimport { ImageType } from '../types';\nimport { Badge, Icon } from 'react-native-elements';\nimport { useTheme } from 'react-native-paper';\n\ntype DeletableImageType = {\n\timage: ImageType;\n\tremove: (id: string) => void;\n};\n\nexport function DeletableImage({ image, remove }: DeletableImageType) {\n\tconst theme = useTheme();\n\n\treturn (\n\t\t<View style={styles(theme).container}>\n\t\t\t<Image source={{ uri: image.uri }} style={styles(theme).image} />\n\t\t\t<View style={{ position: 'absolute', top: 0, right: 0 }}>\n\t\t\t\t<Badge\n\t\t\t\t\tvalue={<Icon name=\"close\" size={18} color=\"white\" testID=\"close badge\" />}\n\t\t\t\t\tcontainerStyle={styles(theme).badgeContainer}\n\t\t\t\t\tbadgeStyle={styles(theme).badge}\n\t\t\t\t\tonPress={() => remove(image.id)}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</View>\n\t);\n}\n\nconst styles = (theme) =>\n\tStyleSheet.create({\n\t\tcontainer: {\n\t\t\tbackgroundColor: '#fff',\n\t\t\tborderRadius: 10,\n\t\t\tshadowColor: '#000',\n\t\t\tshadowOffset: { width: 0, height: 2 },\n\t\t\tshadowOpacity: 0.25,\n\t\t\tshadowRadius: 3.84,\n\t\t\televation: 5,\n\t\t\twidth: '70%',\n\t\t\talignSelf: 'center',\n\t\t\theight: 200,\n\t\t\tmargin: 20,\n\t\t},\n\t\timage: {\n\t\t\twidth: '100%',\n\t\t\theight: 200,\n\t\t\tborderRadius: 10,\n\t\t},\n\t\tbadgeContainer: {\n\t\t\tposition: 'relative',\n\t\t\ttop: -10,\n\t\t\tright: -10,\n\t\t\tbackgroundColor: 'transparent',\n\t\t},\n\t\tbadge: {\n\t\t\theight: 30,\n\t\t\twidth: 30,\n\t\t\tbackgroundColor: theme.colors.error,\n\t\t},\n\t});\n","import { ImageType } from '../../types';\nimport { PlantIDResponse } from './types';\nimport Constants from 'expo-constants';\n\ninterface RequestBody {\n\timages: string[];\n\tlatitude?: string;\n\tlongitude?: string;\n\tmodifiers: string[];\n\tplant_details: string[];\n\tplant_language: string;\n}\n\nexport async function identifyPlant(\n\timages: ImageType[],\n\tlatitude?: string,\n\tlongitude?: string\n): Promise<PlantIDResponse> {\n\tconst { plantIdApiKey, plantIdApiUrl } = Constants;\n\n\tconst base64Images: string[] = await Promise.all(\n\t\timages.map(async (image: ImageType) => {\n\t\t\tconst response = await fetch(image.uri);\n\t\t\tconst blob = await response.blob();\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tconst reader = new FileReader();\n\t\t\t\treader.onerror = () => reject('Failed to convert image to base64');\n\t\t\t\treader.onload = () => resolve(reader.result as string);\n\t\t\t\treader.readAsDataURL(blob);\n\t\t\t});\n\t\t})\n\t);\n\n\tconst requestBody: RequestBody = {\n\t\timages: base64Images,\n\t\tmodifiers: ['similar_images'],\n\t\tplant_details: [\n\t\t\t'common_names',\n\t\t\t'wiki_description',\n\t\t\t'edible_parts',\n\t\t\t'propagation_methods',\n\t\t\t'name_authority',\n\t\t\t'taxonomy',\n\t\t\t'watering',\n\t\t],\n\t\tplant_language: 'pt',\n\t};\n\n\tif (latitude !== undefined && longitude !== undefined) {\n\t\trequestBody.latitude = latitude;\n\t\trequestBody.longitude = longitude;\n\t}\n\n\tconst response = await fetch(`${plantIdApiUrl}/identify`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Api-Key': plantIdApiKey,\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(requestBody),\n\t});\n\n\tconst result = await response.json();\n\treturn result;\n}\n","import { createContext, useState, useEffect, ReactNode, useMemo } from 'react';\nimport * as React from 'react';\nimport { requestForegroundPermissionsAsync, getCurrentPositionAsync } from 'expo-location';\n\ntype Location = {\n\tlatitude: string;\n\tlongitude: string;\n\tgranted: boolean;\n};\n\nexport const LocationContext = createContext<Location>({\n\tlatitude: null,\n\tlongitude: null,\n\tgranted: false,\n});\n\ninterface LocationProviderProps {\n\tchildren: ReactNode;\n}\n\nconst LocationProvider = ({ children }: LocationProviderProps) => {\n\tconst [location, setLocation] = useState(null);\n\tconst [granted, setGranted] = useState(null);\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tconst { status } = await requestForegroundPermissionsAsync();\n\t\t\tif (status !== 'granted') {\n\t\t\t\tconsole.log('Permission to access location was denied');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetGranted(true);\n\t\t\tconst location = await getCurrentPositionAsync({});\n\t\t\tsetLocation(location);\n\t\t})();\n\t}, []);\n\n\tconst latitude = location?.coords?.latitude;\n\tconst longitude = location?.coords?.longitude;\n\n\tconst contextValue = useMemo(() => {\n\t\treturn { latitude: latitude, longitude: longitude, granted: granted };\n\t}, [location]);\n\n\treturn <LocationContext.Provider value={contextValue}>{children}</LocationContext.Provider>;\n};\n\nexport default LocationProvider;\n","import * as ImagePicker from 'expo-image-picker';\nimport { useState, useContext } from 'react';\nimport * as React from 'react';\nimport { StyleSheet, View, Dimensions } from 'react-native';\nimport { ImageMethodProps, ImageType } from '../types/stack';\nimport { DeletableImage } from '../components/DeletableImage';\nimport { FAB, Text, Snackbar } from 'react-native-paper';\nimport Carousel from 'react-native-reanimated-carousel';\nimport { identifyPlant } from '../api/plant_id';\nimport { LocationContext } from '../api/location';\n\nexport function ImageMethod({ navigation }: ImageMethodProps) {\n\tconst [images, setImages] = useState<ImageType[]>([]);\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\tconst [buttonOnHold, setButtonOnHold] = React.useState<boolean>(false);\n\tconst [visibleAlert, setVisiblAlert] = React.useState(false);\n\tconst [errorMessage, setErrorMessage] = React.useState('');\n\tconst locationContext = useContext(LocationContext);\n\n\tconst onDismissSnackBar = () => setVisiblAlert(false);\n\n\tconst pickImage = async (method) => {\n\t\tconst options = {\n\t\t\tmediaTypes: ImagePicker.MediaTypeOptions.Images,\n\t\t\tallowsEditing: false,\n\t\t};\n\n\t\tlet result: ImagePicker.ImagePickerResult = null;\n\n\t\tif (method == 'camera') {\n\t\t\tresult = await ImagePicker.launchCameraAsync(options);\n\t\t} else {\n\t\t\tresult = await ImagePicker.launchImageLibraryAsync(options);\n\t\t}\n\n\t\tif (!result.canceled) {\n\t\t\tconst newImage = {\n\t\t\t\tid: result.assets[0].assetId ? result.assets[0].assetId : images.length.toString(),\n\t\t\t\turi: result.assets[0].uri,\n\t\t\t};\n\t\t\tif (!images.some((image) => image.id === newImage.id)) {\n\t\t\t\tsetImages([...images, newImage]);\n\t\t\t}\n\t\t} else {\n\t\t\tsetErrorMessage('Você não adicionou nenhuma imagem.');\n\t\t\tsetVisiblAlert(true);\n\t\t}\n\t};\n\tconst removeImage = (id: string) => {\n\t\tconst newImages = [...images];\n\t\tconst index = newImages.findIndex((image) => image.id === id);\n\t\tif (index !== -1) {\n\t\t\tnewImages.splice(index, 1);\n\t\t\tsetImages(newImages);\n\t\t}\n\t};\n\n\tconst searchPlants = async () => {\n\t\tif (!buttonOnHold) {\n\t\t\tsetButtonOnHold(true);\n\t\t\ttry {\n\t\t\t\tconst result = await identifyPlant(\n\t\t\t\t\timages,\n\t\t\t\t\tlocationContext.latitude,\n\t\t\t\t\tlocationContext.longitude\n\t\t\t\t);\n\t\t\t\tif (result.is_plant) {\n\t\t\t\t\tnavigation.navigate('Result', result);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Nenhuma planta foi encontrada');\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tsetErrorMessage(error.message);\n\t\t\t\tsetVisiblAlert(true);\n\t\t\t} finally {\n\t\t\t\tsetButtonOnHold(false);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst width = Dimensions.get('window').width;\n\n\treturn (\n\t\t<>\n\t\t\t<View style={styles.container}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\tAdicione algumas fotos para podermos identificar sua planta!\n\t\t\t\t</Text>\n\t\t\t\t<View style={styles.row}>\n\t\t\t\t\t<FAB\n\t\t\t\t\t\ticon=\"camera\"\n\t\t\t\t\t\tlabel=\"Tirar foto\"\n\t\t\t\t\t\tonPress={() => pickImage('camera')}\n\t\t\t\t\t\tvisible\n\t\t\t\t\t\tstyle={[styles.fabStyle]}\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\ttestID=\"Tirar foto\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FAB\n\t\t\t\t\t\ticon=\"image\"\n\t\t\t\t\t\tlabel=\"Adicionar da galeria\"\n\t\t\t\t\t\tonPress={() => pickImage('gallery')}\n\t\t\t\t\t\tvisible\n\t\t\t\t\t\tstyle={[styles.fabStyle]}\n\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\ttestID=\"Adicionar da galeria\"\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t\t{images.length > 0 && (\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\t\talignContent: 'center',\n\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<Carousel\n\t\t\t\t\t\t\tpagingEnabled={true}\n\t\t\t\t\t\t\tsnapEnabled={true}\n\t\t\t\t\t\t\tmode={'horizontal-stack'}\n\t\t\t\t\t\t\tmodeConfig={{\n\t\t\t\t\t\t\t\tsnapDirection: 'left',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tloop={true}\n\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\tdata={images}\n\t\t\t\t\t\t\trenderItem={({ item }) => <DeletableImage image={item} remove={removeImage} />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FAB\n\t\t\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\t\t\tonPress={() => searchPlants()}\n\t\t\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\t\t\tdisabled={buttonOnHold}\n\t\t\t\t\t\t\ttestID=\"Method Continue\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t)}\n\t\t\t</View>\n\t\t\t<Snackbar\n\t\t\t\tvisible={visibleAlert}\n\t\t\t\taction={{\n\t\t\t\t\tlabel: 'OK',\n\t\t\t\t}}\n\t\t\t\tonDismiss={onDismissSnackBar}\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginBottom: 30,\n\t\t\t\t}}>\n\t\t\t\t{errorMessage}\n\t\t\t</Snackbar>\n\t\t</>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t\tpadding: 40,\n\t\tjustifyContent: 'center',\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'space-evenly',\n\t},\n\tfabStyle: {},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tright: 0,\n\t\tbottom: 0,\n\t},\n});\n","import Constants from 'expo-constants';\nimport { TreflePlantSearchResponse, TrefleSpeciesResponse } from './types';\n\nexport async function identifyPlant(query: string[]): Promise<TreflePlantSearchResponse> {\n\tconst { gardimApiUrl } = Constants;\n\tconst response = await fetch(`${gardimApiUrl}/.netlify/functions/api/trefle`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(query),\n\t});\n\n\tconst result = await response.json();\n\treturn result;\n}\n\nexport async function getPlant(id: number): Promise<TrefleSpeciesResponse> {\n\tconst { gardimApiUrl } = Constants;\n\tconst response = await fetch(`${gardimApiUrl}/.netlify/functions/api/trefle?id=${id}`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t});\n\n\tconst result = await response.json();\n\treturn result;\n}\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Text, Searchbar, Chip, FAB, HelperText, Snackbar } from 'react-native-paper';\nimport { TextMethodProps } from '../types/stack';\nimport { identifyPlant } from '../api/trefle';\n\nexport function TextMethod({ navigation }: TextMethodProps) {\n\tconst [searchQuery, setSearchQuery] = React.useState('');\n\tconst [chips, setChips] = React.useState([]);\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\tconst [buttonOnHold, setButtonOnHold] = React.useState<boolean>(false);\n\tconst [visibleAlert, setVisiblAlert] = React.useState(false);\n\tconst [errorMessage, setErrorMessage] = React.useState('');\n\n\tconst addChip = () => {\n\t\tconst queryString = searchQuery.trim();\n\n\t\tif (!chips.includes(queryString) && queryString) {\n\t\t\tsetChips((prevChips) => [...new Set([...prevChips, queryString])]);\n\t\t}\n\t\tsetSearchQuery('');\n\t};\n\n\tconst onDismissSnackBar = () => setVisiblAlert(false);\n\n\tconst removeChip = (chipToDelete) => {\n\t\tsetChips((prevChips) => prevChips.filter((currentChip) => currentChip !== chipToDelete));\n\t};\n\n\tconst onChangeSearch = (query) => {\n\t\tsetSearchQuery(query);\n\t\tif (query.endsWith(' ')) {\n\t\t\taddChip();\n\t\t}\n\t};\n\n\tconst onSubmit = (query) => {\n\t\tsetSearchQuery(query);\n\t\taddChip();\n\t};\n\n\tconst searchPlants = async () => {\n\t\tif (!buttonOnHold) {\n\t\t\tsetButtonOnHold(true);\n\t\t\ttry {\n\t\t\t\tconst result = await identifyPlant(chips);\n\t\t\t\tif (result.data.length) {\n\t\t\t\t\tnavigation.navigate('Result', result);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Nenhuma planta foi encontrada');\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tsetErrorMessage(error.message);\n\t\t\t\tsetVisiblAlert(true);\n\t\t\t} finally {\n\t\t\t\tsetButtonOnHold(false);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<View style={styles.container}>\n\t\t\t\t<View style={styles.row}>\n\t\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\t\tDigite algumas palavras-chave que nos ajude a identificar sua planta!\n\t\t\t\t\t</Text>\n\n\t\t\t\t\t<Searchbar\n\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\tvalue={searchQuery}\n\t\t\t\t\t\tonChangeText={onChangeSearch}\n\t\t\t\t\t\tstyle={styles.fabVariant}\n\t\t\t\t\t\tonSubmitEditing={onSubmit}\n\t\t\t\t\t/>\n\t\t\t\t\t<HelperText type=\"info\" visible>\n\t\t\t\t\t\tPressione enter ou espaço para dividir as palavras!\n\t\t\t\t\t</HelperText>\n\t\t\t\t\t<View style={styles.chipsContainer}>\n\t\t\t\t\t\t{chips.map((chip) => (\n\t\t\t\t\t\t\t<Chip key={chip} onClose={() => removeChip(chip)} style={styles.chip}>\n\t\t\t\t\t\t\t\t{chip}\n\t\t\t\t\t\t\t</Chip>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.row}>\n\t\t\t\t\t{chips.length > 0 && (\n\t\t\t\t\t\t<FAB\n\t\t\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\t\t\tonPress={() => searchPlants()}\n\t\t\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\t\t\tdisabled={buttonOnHold}\n\t\t\t\t\t\t\ttestID=\"Method Continue\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t\t<Snackbar\n\t\t\t\tvisible={visibleAlert}\n\t\t\t\taction={{\n\t\t\t\t\tlabel: 'OK',\n\t\t\t\t}}\n\t\t\t\tonDismiss={onDismissSnackBar}\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginBottom: 30,\n\t\t\t\t}}>\n\t\t\t\t{errorMessage}\n\t\t\t</Snackbar>\n\t\t</>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t\tpadding: 40,\n\t\tjustifyContent: 'space-around',\n\t},\n\trow: {\n\t\tflex: 1,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t},\n\tfabVariant: {\n\t\tmarginVertical: 20,\n\t},\n\tchipsContainer: {\n\t\tflexDirection: 'row',\n\t\tflexWrap: 'wrap',\n\t\tmarginTop: 8,\n\t\tjustifyContent: 'flex-start',\n\t},\n\tchip: {\n\t\tmargin: 4,\n\t},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tright: 0,\n\t\tbottom: 0,\n\t},\n});\n","import { useState } from 'react';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, Text } from 'react-native-paper';\n\ntype PlantOptionsListProps = {\n\tinfo: {\n\t\tid: number;\n\t\tname: string;\n\t\tprobability: number | null;\n\t}[];\n\tonOptionSelect: (id: string) => void;\n};\n\nexport const PlantOptionsList = ({ info, onOptionSelect }: PlantOptionsListProps) => {\n\tconst [selectedId, setSelectedId] = useState(null);\n\n\tconst handleOptionSelect = (optionId) => {\n\t\tonOptionSelect(optionId);\n\t\tif (selectedId == optionId) {\n\t\t\tsetSelectedId(null);\n\t\t} else {\n\t\t\tsetSelectedId(optionId);\n\t\t}\n\t};\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t{info.map((option) => (\n\t\t\t\t<Card\n\t\t\t\t\tonPress={() => handleOptionSelect(option.id)}\n\t\t\t\t\tkey={option.id}\n\t\t\t\t\tstyle={styles.card}\n\t\t\t\t\tmode={selectedId === option.id ? 'contained' : 'elevated'}\n\t\t\t\t\ttestID=\"CardComponent\">\n\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t<Text variant=\"titleMedium\">{option.name}</Text>\n\t\t\t\t\t\t{option.probability ? (\n\t\t\t\t\t\t\t<Text style={styles.probability}>\n\t\t\t\t\t\t\t\tProbabilidade de acerto: {option.probability.toFixed(2)}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</Card.Content>\n\t\t\t\t</Card>\n\t\t\t))}\n\t\t</View>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tpadding: 16,\n\t},\n\tcard: {\n\t\tmarginBottom: 8,\n\t},\n\tprobability: {\n\t\tmarginTop: 4,\n\t\tfontSize: 12,\n\t\tcolor: '#666',\n\t},\n});\n","import { Range } from '../types';\n\nexport const PH_MINIMUM = 4;\nexport const PH_MAXIMUM = 5;\n\nexport const LIGHT_MINIMUM = 1000;\nexport const LIGHT_MAXIMUM = 10000;\n\nexport const ATMOSPHERIC_HUMIDITY_MINIMUM = 7;\nexport const ATMOSPHERIC_HUMIDITY_MAXIMUM = 4;\n\nexport const TEMPERATURE_MINIMUM = 15;\nexport const TEMPERATURE_MAXIMUM = 27;\n\nexport const SOIL_HUMIDITY_MINIMUM = 4;\nexport const SOIL_HUMIDITY_MAXIMUM = 6;\n\nexport const CELL_COUNT = 6;\n\nexport const PERCENTAGE: Range = {\n\tmin: 0,\n\tmax: 100,\n};\n\nexport const LUX: Range = {\n\tmin: 0,\n\tmax: 100000,\n};\n\nexport const TEMPERATURE: Range = {\n\tmin: -60,\n\tmax: 60,\n};\n","import { Range } from '../types';\nimport { TEMPERATURE } from './defaults';\n\nexport function convertScale(num: number): number {\n\tnum -= 1;\n\treturn Math.round(num * 3.33) + 1;\n}\n\nexport function temperatureToValue(temperature: number): number {\n\tconst minTemp = TEMPERATURE.min;\n\tconst maxTemp = TEMPERATURE.max;\n\n\tif (temperature < minTemp || temperature > maxTemp) {\n\t\tthrow new Error(`Temperature value ${temperature} is out of range.`);\n\t}\n\n\tconst t = (temperature - minTemp) / (maxTemp - minTemp);\n\n\tconst value = 1 + t * 9;\n\n\treturn Math.round(value);\n}\n\nexport function percentageToValue(value: number): number {\n\tconst base10 = Math.round(value / 10);\n\treturn Math.max(base10, 1);\n}\n\nexport function scaleRange(range: Range): Range {\n\tconst rangeSize = range.max - range.min;\n\tconst scaleFactor = 10 / rangeSize;\n\treturn {\n\t\tmin: 0,\n\t\tmax: Math.ceil((range.max - range.min) * scaleFactor),\n\t};\n}\n\nexport function luxToValue(value: number): number {\n\tlet scaleValue = value / 10000;\n\tif (scaleValue > 10) {\n\t\tscaleValue = 10;\n\t}\n\treturn scaleValue;\n}\n\nexport function rangeToSeconds(value: number): number {\n\tconst secondsInDay = 24 * 60 * 60;\n\treturn value * secondsInDay;\n}\n","import { TrefleSpeciesResponse } from '../api/trefle/types';\nimport { Suggestion } from '../api/plant_id/types';\n\nimport { Plant } from '../types';\nimport {\n\tPH_MINIMUM,\n\tPH_MAXIMUM,\n\tLIGHT_MINIMUM,\n\tLIGHT_MAXIMUM,\n\tATMOSPHERIC_HUMIDITY_MINIMUM,\n\tATMOSPHERIC_HUMIDITY_MAXIMUM,\n\tTEMPERATURE_MINIMUM,\n\tTEMPERATURE_MAXIMUM,\n\tSOIL_HUMIDITY_MINIMUM,\n\tSOIL_HUMIDITY_MAXIMUM,\n} from './defaults';\nimport { convertScale } from '.';\n\nexport const mapToPlant = (info: TrefleSpeciesResponse | Suggestion): Plant => {\n\tconst isTrefle = (info as TrefleSpeciesResponse)?.data !== undefined;\n\tconst plantDetails: Plant = {\n\t\tid: '1',\n\t\tname: null,\n\t\tcode: null,\n\t\tcommon_name: null,\n\t\tscientific_name: null,\n\t\tedible_parts: null,\n\t\tph_maximum: PH_MAXIMUM,\n\t\tph_minimum: PH_MINIMUM,\n\t\tlight_minimum: LIGHT_MINIMUM,\n\t\tlight_maximum: LIGHT_MAXIMUM,\n\t\tatmospheric_humidity_minimum: ATMOSPHERIC_HUMIDITY_MINIMUM,\n\t\tatmospheric_humidity_maximum: ATMOSPHERIC_HUMIDITY_MAXIMUM,\n\t\ttemperature_minimum: TEMPERATURE_MINIMUM,\n\t\ttemperature_maximum: TEMPERATURE_MAXIMUM,\n\t\tsoil_humidity_minimum: SOIL_HUMIDITY_MINIMUM,\n\t\tsoil_humidity_maximum: SOIL_HUMIDITY_MAXIMUM,\n\t};\n\n\tif (isTrefle) {\n\t\tconst trefleData = (info as TrefleSpeciesResponse).data;\n\t\tplantDetails.id = '1';\n\t\tplantDetails.common_name = trefleData.common_name ?? plantDetails.common_name;\n\t\tplantDetails.scientific_name = trefleData.scientific_name ?? plantDetails.scientific_name;\n\t\tplantDetails.edible_parts = trefleData.edible_part ?? plantDetails.edible_parts;\n\t\tplantDetails.ph_maximum = trefleData.growth?.ph_maximum ?? plantDetails.ph_maximum;\n\t\tplantDetails.ph_minimum = trefleData.growth?.ph_minimum ?? plantDetails.ph_minimum;\n\t\tplantDetails.light_minimum = trefleData.growth?.light - 2 ?? plantDetails.light_minimum;\n\t\tplantDetails.light_maximum = trefleData.growth?.light + 2 ?? plantDetails.light_maximum;\n\n\t\tplantDetails.atmospheric_humidity_minimum =\n\t\t\ttrefleData.growth?.atmospheric_humidity - 2 ?? plantDetails.atmospheric_humidity_minimum;\n\n\t\tplantDetails.atmospheric_humidity_maximum =\n\t\t\ttrefleData.growth?.atmospheric_humidity + 2 ?? plantDetails.atmospheric_humidity_maximum;\n\n\t\tplantDetails.temperature_minimum =\n\t\t\ttrefleData.growth?.minimum_temperature?.deg_c ?? plantDetails.temperature_minimum;\n\n\t\tplantDetails.temperature_maximum =\n\t\t\ttrefleData.growth?.maximum_temperature?.deg_c ?? plantDetails.temperature_maximum;\n\n\t\tplantDetails.soil_humidity_minimum = trefleData.growth?.soil_humidity\n\t\t\t? trefleData.growth.soil_humidity - 2\n\t\t\t: plantDetails.soil_humidity_minimum;\n\n\t\tplantDetails.soil_humidity_maximum = trefleData.growth?.soil_humidity\n\t\t\t? trefleData.growth.soil_humidity + 2\n\t\t\t: plantDetails.soil_humidity_maximum;\n\t} else {\n\t\tconst plantIdData = info as Suggestion;\n\t\tplantDetails.id = plantIdData.plant_name;\n\t\tplantDetails.common_name = plantIdData.plant_name ?? plantDetails.common_name;\n\t\tplantDetails.scientific_name =\n\t\t\tplantIdData.plant_details?.scientific_name ?? plantDetails.scientific_name;\n\t\tplantDetails.edible_parts =\n\t\t\tplantIdData.plant_details?.edible_parts ?? plantDetails.edible_parts;\n\t\tplantDetails.soil_humidity_minimum =\n\t\t\tconvertScale(plantIdData.plant_details?.watering?.min) ??\n\t\t\tplantDetails.soil_humidity_minimum;\n\t\tplantDetails.soil_humidity_maximum =\n\t\t\tconvertScale(plantIdData.plant_details?.watering?.max) ??\n\t\t\tplantDetails.soil_humidity_maximum;\n\t}\n\n\treturn plantDetails;\n};\n","import { useState, useContext } from 'react';\nimport * as React from 'react';\nimport { View, StyleSheet, ScrollView, Dimensions, Platform } from 'react-native';\nimport { PlantOptionsList } from '../components/PlantOptionsList';\nimport { ResultProps } from '../types/stack';\nimport { Text, FAB } from 'react-native-paper';\nimport { PlantIDResponse } from '../api/plant_id/types';\nimport { TreflePlantSearchResponse } from '../api/trefle/types';\nimport { getPlant } from '../api/trefle';\nimport { PlantContext } from '../context';\nimport { mapToPlant } from '../utils/mapper';\n\nexport function Result({ navigation, route }: ResultProps) {\n\tconst [selectedOption, setSelectedOption] = useState(null);\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\tconst [buttonOnHold, setButtonOnHold] = React.useState<boolean>(false);\n\n\tconst plantResult = route.params;\n\tconst isTrefle = (plantResult as PlantIDResponse).suggestions ? false : true;\n\tlet height = Dimensions.get('window').height;\n\n\tconst plantContext = useContext(PlantContext);\n\n\tif (Platform.OS === 'web') {\n\t\theight -= 100;\n\t}\n\n\tconst handleSelect = (optionId) => {\n\t\tif (selectedOption == optionId) {\n\t\t\tsetSelectedOption(null);\n\t\t} else {\n\t\t\tsetSelectedOption(optionId);\n\t\t}\n\t};\n\n\tconst handleContinue = async () => {\n\t\tlet plant = null;\n\t\tif (isTrefle) {\n\t\t\tif (!buttonOnHold) {\n\t\t\t\tsetButtonOnHold(true);\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await getPlant(selectedOption);\n\t\t\t\t\tif (result.data) {\n\t\t\t\t\t\tplant = mapToPlant(result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Trefle Species not found');\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\talert('Oops! Algo deu errado');\n\t\t\t\t} finally {\n\t\t\t\t\tsetButtonOnHold(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst plantSelected = (plantResult as PlantIDResponse).suggestions.find(\n\t\t\t\t(it) => it.id === selectedOption\n\t\t\t);\n\n\t\t\tconsole.log(JSON.stringify(plantSelected));\n\n\t\t\tplant = mapToPlant(plantSelected);\n\t\t}\n\n\t\tplantContext.updatePlant(plant);\n\t\tnavigation.navigate('Name');\n\t};\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<View style={styles.row}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\tSelecione o resultado da busca\n\t\t\t\t</Text>\n\t\t\t\t<ScrollView style={{ maxHeight: height }}>\n\t\t\t\t\t{(plantResult as PlantIDResponse).suggestions ? (\n\t\t\t\t\t\t<PlantOptionsList\n\t\t\t\t\t\t\tinfo={(plantResult as PlantIDResponse).suggestions.map((it) => ({\n\t\t\t\t\t\t\t\tid: it.id,\n\t\t\t\t\t\t\t\tname: it.plant_name,\n\t\t\t\t\t\t\t\tprobability: it.probability,\n\t\t\t\t\t\t\t}))}\n\t\t\t\t\t\t\tonOptionSelect={handleSelect}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<PlantOptionsList\n\t\t\t\t\t\t\tinfo={(plantResult as TreflePlantSearchResponse).data\n\t\t\t\t\t\t\t\t.filter((it) => it.common_name != null)\n\t\t\t\t\t\t\t\t.map((it) => ({\n\t\t\t\t\t\t\t\t\tid: it.id,\n\t\t\t\t\t\t\t\t\tname: it.common_name,\n\t\t\t\t\t\t\t\t\tprobability: null,\n\t\t\t\t\t\t\t\t}))}\n\t\t\t\t\t\t\tonOptionSelect={handleSelect}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</ScrollView>\n\t\t\t</View>\n\t\t\t{selectedOption && (\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\tonPress={() => handleContinue()}\n\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\tdisabled={buttonOnHold}\n\t\t\t\t\ttestID=\"Result Continue\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t\tjustifyContent: 'flex-start',\n\t},\n\trow: {\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'space-evenly',\n\t},\n\tfabStyle: {},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tright: 0,\n\t\tbottom: 0,\n\t\tmargin: 40,\n\t},\n});\n","import { useContext } from 'react';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Text, TextInput, FAB } from 'react-native-paper';\nimport { NameProps } from '../types/stack';\nimport { PlantContext } from '../context';\n\nexport function Name({ navigation }: NameProps) {\n\tconst [text, setText] = React.useState('');\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\n\tconst plantContext = useContext(PlantContext);\n\n\tconst handleSubmit = () => {\n\t\tplantContext.updatePlantName(text);\n\t\tnavigation.navigate('Code');\n\t};\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<View style={styles.row}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\t{' '}\n\t\t\t\t\tDê um nome à sua planta!\n\t\t\t\t</Text>\n\t\t\t\t<TextInput\n\t\t\t\t\tmode=\"flat\"\n\t\t\t\t\tvalue={text}\n\t\t\t\t\tonChangeText={(text) => setText(text)}\n\t\t\t\t\tstyle={styles.fabVariant}\n\t\t\t\t\tonSubmitEditing={() => handleSubmit()}\n\t\t\t\t\ttestID=\"input-nome\"\n\t\t\t\t/>\n\t\t\t</View>\n\t\t\t{text.length > 0 && (\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\tonPress={() => handleSubmit()}\n\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\ttestID=\"Name Continue\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t</View>\n\t);\n}\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexGrow: 1,\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t\tpadding: 40,\n\t},\n\tfabVariant: {\n\t\tmarginVertical: 20,\n\t},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tmargin: 40,\n\t\tright: 0,\n\t\tbottom: 0,\n\t},\n});\n","import React, { createContext, useContext, useEffect, useState, ReactNode, useMemo } from 'react';\nimport * as Notifications from 'expo-notifications';\nimport { NotificationContentInput, TimeIntervalTriggerInput } from 'expo-notifications';\nimport { getAllKeys, getMultiple } from '../../storage';\nimport { Plant } from '../../types';\nimport { rangeToSeconds } from '../../utils';\nimport * as Device from 'expo-device';\nimport { Platform } from 'react-native';\n\nNotifications.setNotificationHandler({\n\thandleNotification: async () => ({\n\t\tshouldShowAlert: true,\n\t\tshouldPlaySound: false,\n\t\tshouldSetBadge: false,\n\t}),\n});\n\ntype NotificationResponse = {\n\tscheduleWateringNotifications: () => void;\n\tcancelNotifications: () => void;\n\tsendOneTimeWateringNotification: (plant: Plant) => void;\n\ttoggleNotifications: () => void;\n\thasScheduledNotifications: boolean;\n};\n\nexport const NotificationsContext = createContext<NotificationResponse>({\n\tscheduleWateringNotifications: null,\n\tcancelNotifications: null,\n\tsendOneTimeWateringNotification: null,\n\ttoggleNotifications: null,\n\thasScheduledNotifications: null,\n});\n\ninterface NotificationProviderProps {\n\tchildren: ReactNode;\n}\n\nexport function NotificationsProvider({ children }: NotificationProviderProps) {\n\tconst [hasScheduledNotifications, setHasScheduledNotifications] = useState(false);\n\tconst [plants, setPlants] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst loadPlants = async () => {\n\t\t\tconst keys = await getAllKeys();\n\t\t\tconst result = await getMultiple(keys);\n\t\t\tsetPlants(result);\n\t\t};\n\n\t\tloadPlants();\n\t\tgetNotificationPermissions();\n\t\tcheckScheduledNotifications();\n\t}, []);\n\n\tasync function getNotificationPermissions() {\n\t\tif (Device.isDevice) {\n\t\t\tconst { status: existingStatus } = await Notifications.getPermissionsAsync();\n\t\t\tlet finalStatus = existingStatus;\n\t\t\tif (existingStatus !== 'granted') {\n\t\t\t\tconst { status } = await Notifications.requestPermissionsAsync();\n\t\t\t\tfinalStatus = status;\n\t\t\t}\n\t\t\tif (finalStatus !== 'granted') {\n\t\t\t\tconsole.log('Failed to get push token for push notification!');\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log('Must use physical device for Push Notifications');\n\t\t}\n\n\t\tif (Platform.OS === 'android') {\n\t\t\tNotifications.setNotificationChannelAsync('default', {\n\t\t\t\tname: 'default',\n\t\t\t\timportance: Notifications.AndroidImportance.MAX,\n\t\t\t\tvibrationPattern: [0, 250, 250, 250],\n\t\t\t\tlightColor: '#FF231F7C',\n\t\t\t});\n\t\t}\n\t}\n\n\tasync function checkScheduledNotifications() {\n\t\tif (Platform.OS !== 'web') {\n\t\t\tconst scheduledNotifications = await Notifications.getAllScheduledNotificationsAsync();\n\t\t\tsetHasScheduledNotifications(scheduledNotifications.length > 0);\n\t\t}\n\t}\n\n\tconst scheduleWateringNotifications = async () => {\n\t\tif (Platform.OS !== 'web') {\n\t\t\tplants.forEach((it: [string, string]) => {\n\t\t\t\tconst plant = JSON.parse(it[1]) as Plant;\n\t\t\t\tconst content: NotificationContentInput = {\n\t\t\t\t\ttitle: `${plant.name} está precisando de sua atenção!`,\n\t\t\t\t\tbody: 'Dê água à sua plantinha!',\n\t\t\t\t\tsound: true,\n\t\t\t\t};\n\n\t\t\t\tconst trigger: TimeIntervalTriggerInput = {\n\t\t\t\t\tseconds: rangeToSeconds(plant.soil_humidity_minimum),\n\t\t\t\t\trepeats: true,\n\t\t\t\t};\n\n\t\t\t\tNotifications.scheduleNotificationAsync({ content, trigger });\n\t\t\t});\n\t\t\tsetHasScheduledNotifications(true);\n\t\t}\n\t};\n\n\tconst sendOneTimeWateringNotification = async (plant: Plant) => {\n\t\tif (Platform.OS !== 'web') {\n\t\t\tconst content: NotificationContentInput = {\n\t\t\t\ttitle: `${plant.name} está precisando de sua atenção!`,\n\t\t\t\tbody: 'Dê água à sua plantinha!',\n\t\t\t\tsound: true,\n\t\t\t};\n\n\t\t\tconst trigger = null;\n\t\t\tNotifications.scheduleNotificationAsync({ content, trigger });\n\t\t}\n\t};\n\n\tconst toggleNotifications = async () => {\n\t\tif (!hasScheduledNotifications) {\n\t\t\tscheduleWateringNotifications();\n\t\t} else {\n\t\t\tcancelNotifications();\n\t\t}\n\t};\n\n\tconst cancelNotifications = () => {\n\t\tif (Platform.OS !== 'web') {\n\t\t\tNotifications.cancelAllScheduledNotificationsAsync();\n\t\t\tsetHasScheduledNotifications(false);\n\t\t}\n\t};\n\n\tconst notificationsValue = useMemo(() => {\n\t\treturn {\n\t\t\tscheduleWateringNotifications,\n\t\t\tcancelNotifications,\n\t\t\tsendOneTimeWateringNotification,\n\t\t\thasScheduledNotifications,\n\t\t\ttoggleNotifications,\n\t\t};\n\t}, [\n\t\tscheduleWateringNotifications,\n\t\tcancelNotifications,\n\t\tsendOneTimeWateringNotification,\n\t\thasScheduledNotifications,\n\t\ttoggleNotifications,\n\t]);\n\n\treturn (\n\t\t<NotificationsContext.Provider value={notificationsValue}>\n\t\t\t{children}\n\t\t</NotificationsContext.Provider>\n\t);\n}\n\nexport function useNotifications() {\n\tconst context = useContext(NotificationsContext);\n\tif (!context) {\n\t\tthrow new Error('useNotifications must be used within a NotificationsProvider');\n\t}\n\treturn context;\n}\n","import { useState, useContext, useEffect } from 'react';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n\tCodeField,\n\tCursor,\n\tuseBlurOnFulfill,\n\tuseClearByFocusCell,\n} from 'react-native-confirmation-code-field';\nimport { Text, useTheme, FAB, Button } from 'react-native-paper';\nimport { CELL_COUNT } from '../utils/defaults';\nimport { CodeProps } from '../types/stack';\nimport { PlantContext } from '../context';\nimport { storeData } from '../storage/index';\nimport { useNotifications } from '../api/notification';\n\nexport function Code({ navigation }: CodeProps) {\n\tconst [value, setValue] = useState('');\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\tconst ref = useBlurOnFulfill({ value, cellCount: CELL_COUNT });\n\tconst [props, getCellOnLayoutHandler] = useClearByFocusCell({\n\t\tvalue,\n\t\tsetValue,\n\t});\n\n\tconst theme = useTheme();\n\tconst plantContext = useContext(PlantContext);\n\tconst { scheduleWateringNotifications, sendOneTimeWateringNotification } = useNotifications();\n\n\tconst handlePlantData = async () => {\n\t\tif (plantContext.plant && plantContext.plant.code) {\n\t\t\tawait storeData(plantContext.plant);\n\t\t\tscheduleWateringNotifications();\n\t\t\tsendOneTimeWateringNotification(plantContext.plant);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\thandlePlantData();\n\t}, [plantContext.plant]);\n\n\tconst onPress = () => {\n\t\tplantContext.updatePlantCode(value);\n\t\tnavigation.navigate('Home', { success: true });\n\t};\n\n\tconst onPressEmpty = () => {\n\t\tplantContext.updatePlantCode('empty');\n\t\tnavigation.navigate('Home', { success: true });\n\t};\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<View style={styles.row}>\n\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center' }}>\n\t\t\t\t\t{' '}\n\t\t\t\t\tDigite o código do componente\n\t\t\t\t</Text>\n\t\t\t\t<CodeField\n\t\t\t\t\tref={ref}\n\t\t\t\t\t{...props}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChangeText={setValue}\n\t\t\t\t\tcellCount={CELL_COUNT}\n\t\t\t\t\trootStyle={styles.codeFieldRoot}\n\t\t\t\t\tkeyboardType=\"numeric\"\n\t\t\t\t\ttextContentType=\"oneTimeCode\"\n\t\t\t\t\tonEndEditing={onPress}\n\t\t\t\t\ttestID=\"code-field\"\n\t\t\t\t\trenderCell={({ index, symbol, isFocused }) => (\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tstyle={[themedStyles(theme).cell, isFocused && themedStyles(theme).focusCell]}\n\t\t\t\t\t\t\tonLayout={getCellOnLayoutHandler(index)}>\n\t\t\t\t\t\t\t{symbol || (isFocused ? <Cursor /> : null)}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t\t<Text style={{ textAlign: 'center' }}>\n\t\t\t\t\tNão tem o dispositivo ainda? Clique\n\t\t\t\t\t<Button mode=\"text\" onPress={onPressEmpty} style={{ margin: 0 }}>\n\t\t\t\t\t\taqui\n\t\t\t\t\t</Button>\n\t\t\t\t\tpara continuar sem adicionar.\n\t\t\t\t</Text>\n\t\t\t</View>\n\t\t\t{value.length >= 6 && (\n\t\t\t\t<FAB\n\t\t\t\t\ticon=\"arrow-right\"\n\t\t\t\t\tlabel={visible ? 'Continuar' : ''}\n\t\t\t\t\tonPress={onPress}\n\t\t\t\t\tstyle={[styles.compressedFabStyle]}\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tonLongPress={() => setVisible(!visible)}\n\t\t\t\t\ttestID=\"Code Continue\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t},\n\trow: {\n\t\tflex: 0.5,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t\tpadding: 40,\n\t},\n\tfabVariant: {\n\t\tmarginVertical: 20,\n\t},\n\tcompressedFabStyle: {\n\t\tposition: 'absolute',\n\t\tmargin: 40,\n\t\tright: 0,\n\t\tbottom: 0,\n\t},\n\tcodeFieldRoot: { margin: 20, display: 'flex', minWidth: '50%', alignSelf: 'center' },\n});\n\nconst themedStyles = (theme) =>\n\tStyleSheet.create({\n\t\tfocusCell: {\n\t\t\tborderColor: theme.colors.secondaryContainer,\n\t\t},\n\t\tcell: {\n\t\t\tmaxWidth: 40,\n\t\t\twidth: '15%',\n\t\t\tmarginHorizontal: 5,\n\t\t\theight: 50,\n\t\t\tlineHeight: 38,\n\t\t\tfontSize: 24,\n\t\t\tborderWidth: 2,\n\t\t\tborderColor: theme.colors.outline,\n\t\t\tborderRadius: 10,\n\t\t\ttextAlign: 'center',\n\t\t},\n\t});\n","import { Slider } from '@miblanchard/react-native-slider';\nimport { useRef, useEffect, useState } from 'react';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Range } from '../types';\nimport { scaleRange } from '../utils';\n\ntype LinearGaugeChartProps = {\n\tmin: number;\n\tmax: number;\n\tvalue: number;\n\trange: Range;\n\tconversor?: (value: number) => number | null;\n};\n\nexport const LinearGaugeChart = ({ min, max, value, range, conversor }: LinearGaugeChartProps) => {\n\tconst [sliderValue, setSliderValue] = useState(value);\n\n\tuseEffect(() => {\n\t\tsetSliderValue(value);\n\t}, [value]);\n\n\tconst scaledRange = scaleRange(range);\n\n\tlet scaledMin = min;\n\tlet scaledMax = max;\n\n\tif (conversor) {\n\t\tscaledMin = conversor(min);\n\t\tscaledMax = conversor(max);\n\t}\n\n\tconst sectionColors = Array.from({ length: scaledRange.max }, (_, i) => {\n\t\tconst value = i + 1;\n\t\tif (value >= scaledMin && value <= scaledMax) {\n\t\t\treturn '#B0D8A4';\n\t\t} else if ((value === scaledMin - 1 && value !== 0) || value === scaledMax + 1) {\n\t\t\treturn '#FEE191';\n\t\t} else {\n\t\t\treturn '#E84258';\n\t\t}\n\t});\n\n\tconst sliderRef = useRef(null);\n\n\treturn (\n\t\t<View style={{ position: 'relative' }}>\n\t\t\t<View style={[styles.line]}>\n\t\t\t\t{sectionColors.map((color, i) => (\n\t\t\t\t\t<View key={i} style={[styles.section, { backgroundColor: color }]} />\n\t\t\t\t))}\n\t\t\t</View>\n\t\t\t<Slider\n\t\t\t\tref={sliderRef}\n\t\t\t\tminimumValue={range.min}\n\t\t\t\tmaximumValue={range.max}\n\t\t\t\tstep={1}\n\t\t\t\tvalue={sliderValue}\n\t\t\t\tminimumTrackTintColor=\"transparent\"\n\t\t\t\tmaximumTrackTintColor=\"transparent\"\n\t\t\t\tthumbTintColor=\"white\"\n\t\t\t\tthumbStyle={styles.thumbStyle}\n\t\t\t\tdisabled={true}\n\t\t\t/>\n\t\t</View>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tline: {\n\t\tflexDirection: 'row',\n\t\tposition: 'absolute',\n\t\ttop: 16,\n\t\tleft: 0,\n\t\tright: 0,\n\t},\n\tsection: {\n\t\tflex: 1,\n\t\theight: 10,\n\t},\n\tthumbStyle: {\n\t\tbackgroundColor: 'white',\n\t\televation: 5,\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tgradientContainer: {\n\t\tposition: 'absolute',\n\t\ttop: '50%',\n\t\tleft: 0,\n\t\tright: 0,\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\televation: 5,\n\t\toverflow: 'hidden',\n\t},\n});\n","import { createContext, useEffect, useState, ReactNode, useMemo, useContext } from 'react';\nimport * as React from 'react';\nimport io from 'socket.io-client';\nimport Constants from 'expo-constants';\nimport { SocketPayload } from './types';\nimport { PlantContext } from '../../context';\n\ntype SocketResponse = {\n\tsoilValue: number;\n\tluxValue: number;\n\tcode: string;\n};\n\nexport const SocketContext = createContext<SocketResponse>({\n\tsoilValue: null,\n\tluxValue: null,\n\tcode: null,\n});\n\ninterface SocketProviderProps {\n\tchildren: ReactNode;\n}\n\nexport const SocketProvider = ({ children }: SocketProviderProps) => {\n\tconst [soilValue, setSoilValue] = useState<number>(null);\n\tconst [luxValue, setLuxValue] = useState<number>(null);\n\tconst [code, setCode] = useState<string>(null);\n\tconst { socketUrl, enableSocket } = Constants;\n\tconst plantContext = useContext(PlantContext);\n\n\tconst userId = '1';\n\n\tconst socket =\n\t\tenableSocket != 'false'\n\t\t\t? io(socketUrl, { transports: ['websocket'], query: { userId: userId } })\n\t\t\t: null;\n\n\tuseEffect(() => {\n\t\tconsole.log(enableSocket);\n\t\tconsole.log(enableSocket != 'false');\n\t\tif (enableSocket != 'false') {\n\t\t\tsocket.on('connect', () => {\n\t\t\t\tconsole.log('Connected to server');\n\t\t\t});\n\n\t\t\tsocket.on('disconnect', () => {\n\t\t\t\tconsole.log('Disconnected from server');\n\t\t\t});\n\n\t\t\tif (plantContext.plant?.code) {\n\t\t\t\tconsole.log(plantContext.plant.code);\n\t\t\t\tsetCode(plantContext.plant.code);\n\t\t\t\tsocket.on(`gardim/esp32/${plantContext.plant.code}/soil`, (data: SocketPayload) => {\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\tconst parsedData = data;\n\t\t\t\t\tsetSoilValue(Number(parsedData.parsed.toFixed(2)));\n\t\t\t\t});\n\n\t\t\t\tsocket.on(`gardim/esp32/${plantContext.plant.code}/lux`, (data: SocketPayload) => {\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\tconst parsedData = data;\n\t\t\t\t\tsetLuxValue(parsedData.parsed);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsocket.on('error', (error: unknown) => {\n\t\t\t\tconsole.log('Socket error:', error);\n\t\t\t});\n\n\t\t\treturn () => {\n\t\t\t\tsocket.disconnect();\n\t\t\t};\n\t\t}\n\t}, [plantContext.plant?.code]);\n\n\tconst contextValue = useMemo(() => {\n\t\treturn {\n\t\t\tsoilValue,\n\t\t\tluxValue,\n\t\t\tcode,\n\t\t};\n\t}, [soilValue, luxValue]);\n\n\treturn <SocketContext.Provider value={contextValue}>{children}</SocketContext.Provider>;\n};\n","import { createContext, useEffect, useState, ReactNode, useMemo, useContext } from 'react';\nimport * as React from 'react';\nimport Constants from 'expo-constants';\nimport { WeatherstackResponse } from './types';\nimport { LocationContext } from '../location';\n\nasync function getWeather(latitude: string, longitude: string): Promise<WeatherstackResponse> {\n\tconst { gardimApiUrl } = Constants;\n\tconst response = await fetch(`${gardimApiUrl}/.netlify/functions/api/weather`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'text/plain',\n\t\t},\n\t\tbody: `${latitude},${longitude}`,\n\t});\n\n\tconst result = await response.json();\n\tconsole.log(result);\n\treturn result;\n}\n\ntype WeatherContextType = {\n\tweather: WeatherstackResponse | null;\n\tisLoading: boolean;\n\terror: Error | null;\n};\n\nexport const WeahterContext = createContext<WeatherContextType>({\n\tweather: null,\n\tisLoading: null,\n\terror: null,\n});\n\ninterface WeatherProviderProps {\n\tchildren: ReactNode;\n}\n\nexport const WeatherProvider = ({ children }: WeatherProviderProps) => {\n\tconst [weather, setWeather] = useState<WeatherstackResponse | null>(null);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [error, setError] = useState<Error | null>(null);\n\tconst { latitude, longitude, granted } = useContext(LocationContext);\n\n\tuseEffect(() => {\n\t\tasync function fetchWeather() {\n\t\t\ttry {\n\t\t\t\tif (latitude != undefined && longitude != undefined) {\n\t\t\t\t\tconst result = await getWeather(latitude, longitude);\n\t\t\t\t\tconsole.log(result);\n\t\t\t\t\tsetWeather(result);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tsetError(err);\n\t\t\t} finally {\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t}\n\t\tif (granted) {\n\t\t\tsetIsLoading(true);\n\t\t\tfetchWeather();\n\t\t}\n\t}, [latitude, longitude, granted]);\n\n\tconst contextValue = useMemo(() => {\n\t\treturn { weather, isLoading, error };\n\t}, [weather, isLoading, error]);\n\n\treturn <WeahterContext.Provider value={contextValue}>{children}</WeahterContext.Provider>;\n};\n","import { useContext } from 'react';\nimport * as React from 'react';\nimport { View, ScrollView } from 'react-native';\nimport { Text, Card, Avatar, ActivityIndicator } from 'react-native-paper';\nimport { LinearGaugeChart } from '../components/LinearGaugeChart';\nimport { PlantContext } from '../context';\nimport { SocketContext } from '../api/socket';\nimport { WeahterContext } from '../api/weatherstack';\nimport { temperatureToValue } from '../utils/index';\nimport { LUX, PERCENTAGE, TEMPERATURE } from '../utils/defaults';\nimport { AntDesign } from '@expo/vector-icons';\nimport { Plant } from '../types';\nimport { WeatherstackResponse } from '../api/weatherstack/types';\n\nexport function Status() {\n\tconst { plant } = useContext(PlantContext);\n\tconst { soilValue, luxValue, code } = useContext(SocketContext);\n\tconst { weather, isLoading } = useContext(WeahterContext);\n\n\tconst renderSoil = !!(soilValue && code == plant.code);\n\tconst renderLux = !!(luxValue && code == plant.code);\n\n\treturn (\n\t\t<View style={{ flex: 1 }}>\n\t\t\t{!renderLux && !renderSoil && !weather ? (\n\t\t\t\t(isLoading && <Loading />) || <NoData />\n\t\t\t) : (\n\t\t\t\t<ScrollView>\n\t\t\t\t\t{renderSoil && <SoilCard plant={plant} soilValue={soilValue} />}\n\t\t\t\t\t{renderLux && <LuxCard plant={plant} luxValue={luxValue} />}\n\t\t\t\t\t{weather && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<UmidityCard weather={weather} plant={plant} />\n\t\t\t\t\t\t\t<TemperatureCard weather={weather} plant={plant} />\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</ScrollView>\n\t\t\t)}\n\t\t</View>\n\t);\n}\n\ninterface SoilCardProps {\n\tsoilValue: number;\n\tplant: Plant;\n}\n\ninterface LuxCardProps {\n\tluxValue: number;\n\tplant: Plant;\n}\n\ninterface WeatherCardProps {\n\tweather: WeatherstackResponse;\n\tplant: Plant;\n}\n\nconst Loading = () => {\n\treturn (\n\t\t<View\n\t\t\tstyle={{\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\talignContent: 'center',\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tflex: 1,\n\t\t\t\tflexDirection: 'column',\n\t\t\t}}>\n\t\t\t<ActivityIndicator animating={true} size={'large'} />\n\t\t</View>\n\t);\n};\n\nconst NoData = () => {\n\treturn (\n\t\t<View\n\t\t\tstyle={{\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\talignContent: 'center',\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tflex: 1,\n\t\t\t\tflexDirection: 'column',\n\t\t\t}}>\n\t\t\t<AntDesign name=\"frowno\" size={24} color=\"black\" style={{ alignSelf: 'center' }} />\n\t\t\t<Text variant=\"titleLarge\" style={{ alignSelf: 'center', textAlign: 'center' }}>\n\t\t\t\tOops! Parece que você não tem nada habilitado para essa planta\n\t\t\t</Text>\n\t\t</View>\n\t);\n};\n\nconst SoilCard = ({ soilValue, plant }: SoilCardProps) => {\n\treturn (\n\t\t<Card style={{ marginVertical: 10, marginHorizontal: 20 }}>\n\t\t\t<Card.Title\n\t\t\t\ttitle=\"Umidade do Solo\"\n\t\t\t\tleft={(props) => <Avatar.Icon {...props} icon=\"water-alert-outline\" />}\n\t\t\t/>\n\t\t\t<Card.Content>\n\t\t\t\t<LinearGaugeChart\n\t\t\t\t\tmin={plant.soil_humidity_minimum}\n\t\t\t\t\tmax={plant.soil_humidity_maximum}\n\t\t\t\t\tvalue={soilValue}\n\t\t\t\t\trange={PERCENTAGE}\n\t\t\t\t/>\n\t\t\t</Card.Content>\n\t\t\t<Card.Actions>\n\t\t\t\t<Text>{soilValue}%</Text>\n\t\t\t</Card.Actions>\n\t\t</Card>\n\t);\n};\n\nconst LuxCard = ({ luxValue, plant }: LuxCardProps) => {\n\treturn (\n\t\t<Card style={{ marginVertical: 10, marginHorizontal: 20 }}>\n\t\t\t<Card.Title\n\t\t\t\ttitle=\"Luminosidade\"\n\t\t\t\tleft={(props) => <Avatar.Icon {...props} icon=\"lightbulb-on-outline\" />}\n\t\t\t/>\n\t\t\t<Card.Content>\n\t\t\t\t<LinearGaugeChart\n\t\t\t\t\tmin={plant.light_minimum}\n\t\t\t\t\tmax={plant.light_maximum}\n\t\t\t\t\tvalue={luxValue}\n\t\t\t\t\trange={LUX}\n\t\t\t\t/>\n\t\t\t</Card.Content>\n\t\t\t<Card.Actions>\n\t\t\t\t<Text>{luxValue} LUX</Text>\n\t\t\t</Card.Actions>\n\t\t</Card>\n\t);\n};\n\nconst UmidityCard = ({ weather, plant }: WeatherCardProps) => {\n\treturn (\n\t\t<Card style={{ marginVertical: 10, marginHorizontal: 20 }}>\n\t\t\t<Card.Title\n\t\t\t\ttitle=\"Umidade do Ambiente\"\n\t\t\t\tleft={(props) => <Avatar.Icon {...props} icon=\"weather-rainy\" />}\n\t\t\t/>\n\t\t\t<Card.Content>\n\t\t\t\t<LinearGaugeChart\n\t\t\t\t\tmin={plant.atmospheric_humidity_minimum}\n\t\t\t\t\tmax={plant.atmospheric_humidity_maximum}\n\t\t\t\t\tvalue={weather.current.humidity}\n\t\t\t\t\trange={PERCENTAGE}\n\t\t\t\t/>\n\t\t\t</Card.Content>\n\t\t\t<Card.Actions>\n\t\t\t\t<Text>{weather.current.humidity}%</Text>\n\t\t\t</Card.Actions>\n\t\t</Card>\n\t);\n};\n\nconst TemperatureCard = ({ weather, plant }: WeatherCardProps) => {\n\treturn (\n\t\t<Card style={{ marginVertical: 10, marginHorizontal: 20 }}>\n\t\t\t<Card.Title\n\t\t\t\ttitle=\"Temperatura do Ambiente\"\n\t\t\t\tleft={(props) => <Avatar.Icon {...props} icon=\"sun-thermometer-outline\" />}\n\t\t\t/>\n\t\t\t<Card.Content>\n\t\t\t\t<LinearGaugeChart\n\t\t\t\t\tmin={plant.temperature_minimum}\n\t\t\t\t\tmax={plant.temperature_maximum}\n\t\t\t\t\tvalue={weather.current.temperature}\n\t\t\t\t\trange={TEMPERATURE}\n\t\t\t\t\tconversor={temperatureToValue}\n\t\t\t\t/>\n\t\t\t</Card.Content>\n\t\t\t<Card.Actions>\n\t\t\t\t<Text>{weather.current.temperature}°C</Text>\n\t\t\t</Card.Actions>\n\t\t</Card>\n\t);\n};\n","import { useContext, useEffect } from 'react';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { PlantContext } from '../context';\nimport { List, Dialog, Portal, Text, Button, TextInput } from 'react-native-paper';\nimport { storeData, removeValue } from '../storage/index';\nimport { ConfigurationsProps } from '../types/tab';\n\nexport function Configurations({ navigation }: ConfigurationsProps) {\n\tconst [editVisible, setEditVisible] = React.useState(false);\n\tconst [deleteVisible, setDeleteVisible] = React.useState(false);\n\tconst [text, setText] = React.useState('');\n\tconst plantContext = useContext(PlantContext);\n\n\tuseEffect(() => {\n\t\tif (plantContext.plant) {\n\t\t\tstoreData(plantContext.plant);\n\t\t}\n\t}, [plantContext.plant?.name]);\n\n\tconst showEditDialog = () => setEditVisible(true);\n\tconst hideEditDialog = () => setEditVisible(false);\n\n\tconst showDeleteDialog = () => setDeleteVisible(true);\n\tconst hideDeleteDialog = () => setDeleteVisible(false);\n\n\tconst handleOnEdit = async () => {\n\t\tplantContext.updatePlantName(text);\n\t\thideEditDialog();\n\t};\n\tconst handleOnDelete = () => {\n\t\tremoveValue(`@${plantContext.plant.id}`);\n\t\tplantContext.resetPlant();\n\t\tnavigation.navigate('Home');\n\t};\n\n\treturn (\n\t\t<View style={{ flex: 1 }}>\n\t\t\t<Portal>\n\t\t\t\t<Dialog visible={editVisible} onDismiss={hideEditDialog}>\n\t\t\t\t\t<Dialog.Title style={styles.title}>Editar</Dialog.Title>\n\t\t\t\t\t<Dialog.Content>\n\t\t\t\t\t\t<Text variant=\"titleMedium\" style={{ textAlign: 'center', margin: 20 }}>\n\t\t\t\t\t\t\tDê um nome à sua planta!\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tmode=\"flat\"\n\t\t\t\t\t\t\tvalue={text}\n\t\t\t\t\t\t\tonChangeText={(text) => setText(text)}\n\t\t\t\t\t\t\ttestID=\"input-nome\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Dialog.Content>\n\t\t\t\t\t<Dialog.Actions>\n\t\t\t\t\t\t<Button onPress={handleOnEdit}>Done</Button>\n\t\t\t\t\t</Dialog.Actions>\n\t\t\t\t</Dialog>\n\t\t\t</Portal>\n\t\t\t<Portal>\n\t\t\t\t<Dialog visible={deleteVisible} onDismiss={hideDeleteDialog}>\n\t\t\t\t\t<Dialog.Icon icon=\"alert\" />\n\t\t\t\t\t<Dialog.Title style={styles.title}>Cuidado</Dialog.Title>\n\t\t\t\t\t<Dialog.Content>\n\t\t\t\t\t\t<Text style={{ textAlign: 'center' }} variant=\"bodyMedium\">\n\t\t\t\t\t\t\tVocê está prestes a deletar todos os dados relacionados à essa planta. Você tem\n\t\t\t\t\t\t\tcerteza?\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Dialog.Content>\n\t\t\t\t\t<Dialog.Actions>\n\t\t\t\t\t\t<Button onPress={hideDeleteDialog}>Cancelar</Button>\n\t\t\t\t\t\t<Button onPress={handleOnDelete}>Prosseguir</Button>\n\t\t\t\t\t</Dialog.Actions>\n\t\t\t\t</Dialog>\n\t\t\t</Portal>\n\t\t\t<List.Item\n\t\t\t\ttitle=\"Editar nome\"\n\t\t\t\tdescription=\"Aqui você pode alterar o nome da sua plantinha\"\n\t\t\t\ttitleStyle={{ fontSize: 18, fontWeight: 'bold' }}\n\t\t\t\tleft={(props) => <List.Icon {...props} icon=\"pencil-outline\" />}\n\t\t\t\tonPress={showEditDialog}\n\t\t\t/>\n\t\t\t<List.Item\n\t\t\t\ttitle=\"Apagar\"\n\t\t\t\tdescription=\"Todos os dados relacionados a essa planta serão removidos\"\n\t\t\t\ttitleStyle={{ fontSize: 18, fontWeight: 'bold' }}\n\t\t\t\tleft={(props) => <List.Icon {...props} icon=\"trash-can\" />}\n\t\t\t\tonPress={showDeleteDialog}\n\t\t\t/>\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\ttitle: {\n\t\ttextAlign: 'center',\n\t},\n});\n","import { Feather, Fontisto } from '@expo/vector-icons';\nimport { createMaterialBottomTabNavigator } from 'react-native-paper/react-navigation';\nimport { useLayoutEffect, useContext } from 'react';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { Status } from '../screens/Status';\nimport { PlantContext } from '../context';\nimport { RootTabNavigationProps } from '../types/stack';\nimport { Configurations } from '../screens/Configurations';\n\nconst Tab = createMaterialBottomTabNavigator();\n\nexport function RootTabNavigation({ navigation, route }: RootTabNavigationProps) {\n\tconst theme = useTheme();\n\n\tconst plantContext = useContext(PlantContext);\n\tconst plant = plantContext.plant;\n\n\tuseLayoutEffect(() => {\n\t\tif (plantContext.plant) {\n\t\t\tnavigation.setOptions({\n\t\t\t\ttitle: plant.name,\n\t\t\t});\n\t\t}\n\t}, [navigation, route, plant]);\n\n\treturn (\n\t\t<Tab.Navigator>\n\t\t\t<Tab.Screen\n\t\t\t\tname=\"Status\"\n\t\t\t\tcomponent={Status}\n\t\t\t\toptions={{\n\t\t\t\t\ttabBarLabel: 'Status',\n\t\t\t\t\ttabBarIcon: () => (\n\t\t\t\t\t\t<Fontisto name=\"heartbeat-alt\" size={24} color={theme.colors.primary} />\n\t\t\t\t\t),\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Tab.Screen\n\t\t\t\tname=\"Configurations\"\n\t\t\t\tcomponent={Configurations}\n\t\t\t\toptions={{\n\t\t\t\t\ttabBarLabel: 'Configurações',\n\t\t\t\t\ttabBarIcon: () => <Feather name=\"settings\" size={24} color={theme.colors.primary} />,\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Tab.Navigator>\n\t);\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport { Home } from '../screens/Home';\nimport { Header } from '../components/Header';\nimport IdentificationMethod from '../screens/IdentificationMethod';\nimport { ImageMethod } from '../screens/ImageMethod';\nimport { TextMethod } from '../screens/TextMethod';\nimport { Result } from '../screens/Result';\nimport { Name } from '../screens/Name';\nimport { Code } from '../screens/Code';\nimport { RootTabNavigation } from './RootTabNavigation';\n\nconst Stack = createStackNavigator();\n\nexport default function RootStackNavigator() {\n\treturn (\n\t\t<Stack.Navigator\n\t\t\tinitialRouteName=\"Home\"\n\t\t\tscreenOptions={{\n\t\t\t\theader: Header,\n\t\t\t}}>\n\t\t\t<Stack.Screen name=\"Home\" component={Home} options={{ title: 'Suas Plantas' }} />\n\t\t\t<Stack.Screen\n\t\t\t\tname=\"IdentificationMethod\"\n\t\t\t\tcomponent={IdentificationMethod}\n\t\t\t\toptions={{ title: 'Método de Identificação' }}\n\t\t\t/>\n\t\t\t<Stack.Screen\n\t\t\t\tname=\"ImageMethod\"\n\t\t\t\tcomponent={ImageMethod}\n\t\t\t\toptions={{ title: 'Identificação por imagem' }}\n\t\t\t/>\n\t\t\t<Stack.Screen\n\t\t\t\tname=\"TextMethod\"\n\t\t\t\tcomponent={TextMethod}\n\t\t\t\toptions={{ title: 'Identificação por texto' }}\n\t\t\t/>\n\t\t\t<Stack.Screen name=\"Result\" component={Result} options={{ title: 'Resultado' }} />\n\t\t\t<Stack.Screen name=\"Name\" component={Name} options={{ title: 'Nome' }} />\n\t\t\t<Stack.Screen name=\"Code\" component={Code} options={{ title: 'Código' }} />\n\t\t\t<Stack.Screen name=\"RootTabNavigation\" component={RootTabNavigation} />\n\t\t</Stack.Navigator>\n\t);\n}\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Drawer, Switch, Text, TouchableRipple, useTheme } from 'react-native-paper';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { PreferencesContext } from './PreferencesContext';\nimport { useNotifications } from '../api/notification';\n\nexport default function DrawerContent() {\n\tconst insets = useSafeAreaInsets();\n\n\tconst { toggleTheme, isThemeDark } = React.useContext(PreferencesContext);\n\tconst { hasScheduledNotifications, toggleNotifications } = useNotifications();\n\tconst theme = useTheme();\n\n\treturn (\n\t\t<Drawer.Section\n\t\t\ttitle=\"Preferences\"\n\t\t\tstyle={{\n\t\t\t\tflex: 1,\n\t\t\t\tpaddingTop: insets.top + 4,\n\t\t\t\tbackgroundColor: theme.colors.background,\n\t\t\t\tmarginBottom: 0,\n\t\t\t}}>\n\t\t\t<TouchableRipple onPress={toggleTheme}>\n\t\t\t\t<View style={[styles.preference]}>\n\t\t\t\t\t<Text variant=\"labelLarge\">Dark Theme</Text>\n\t\t\t\t\t<View pointerEvents=\"none\">\n\t\t\t\t\t\t<Switch value={isThemeDark} testID=\"theme switch\" />\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</TouchableRipple>\n\t\t\t<TouchableRipple onPress={toggleNotifications}>\n\t\t\t\t<View style={[styles.preference]}>\n\t\t\t\t\t<Text variant=\"labelLarge\">Notification</Text>\n\t\t\t\t\t<View pointerEvents=\"none\">\n\t\t\t\t\t\t<Switch value={hasScheduledNotifications} testID=\"theme switch\" />\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</TouchableRipple>\n\t\t</Drawer.Section>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tdrawerContent: {\n\t\tflex: 1,\n\t},\n\tpreference: {\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'space-between',\n\t\talignItems: 'center',\n\t\tpaddingVertical: 12,\n\t\tpaddingHorizontal: 16,\n\t},\n\tv3Preference: {\n\t\theight: 56,\n\t\tpaddingHorizontal: 28,\n\t},\n\tbadge: {\n\t\talignSelf: 'center',\n\t},\n});\n","/* eslint-disable react/prop-types */\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport * as React from 'react';\n\nimport RootStackNavigator from './RootStackNavigator';\nimport DrawerContent from '../components/DrawerContent';\n\nconst Drawer = createDrawerNavigator();\n\nexport default function RootNavigation({ theme }) {\n\treturn (\n\t\t<NavigationContainer theme={theme}>\n\t\t\t<Drawer.Navigator\n\t\t\t\tinitialRouteName=\"Home\"\n\t\t\t\tdrawerContent={DrawerContent}\n\t\t\t\tscreenOptions={{\n\t\t\t\t\theaderShown: false,\n\t\t\t\t\tdrawerPosition: 'right',\n\t\t\t\t}}>\n\t\t\t\t<Drawer.Screen\n\t\t\t\t\tname=\"Root\"\n\t\t\t\t\tcomponent={RootStackNavigator}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\theaderTintColor: theme.colors.onBackground,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Drawer.Navigator>\n\t\t</NavigationContainer>\n\t);\n}\n","export const lightGreenColors = {\n\tcolors: {\n\t\tprimary: 'rgb(0, 107, 86)',\n\t\tonPrimary: 'rgb(255, 255, 255)',\n\t\tprimaryContainer: 'rgb(126, 248, 212)',\n\t\tonPrimaryContainer: 'rgb(0, 32, 24)',\n\t\tsecondary: 'rgb(75, 99, 91)',\n\t\tonSecondary: 'rgb(255, 255, 255)',\n\t\tsecondaryContainer: 'rgb(206, 233, 221)',\n\t\tonSecondaryContainer: 'rgb(7, 32, 25)',\n\t\ttertiary: 'rgb(65, 99, 118)',\n\t\tonTertiary: 'rgb(255, 255, 255)',\n\t\ttertiaryContainer: 'rgb(196, 231, 255)',\n\t\tonTertiaryContainer: 'rgb(0, 30, 44)',\n\t\terror: 'rgb(186, 26, 26)',\n\t\tonError: 'rgb(255, 255, 255)',\n\t\terrorContainer: 'rgb(255, 218, 214)',\n\t\tonErrorContainer: 'rgb(65, 0, 2)',\n\t\tbackground: 'rgb(251, 253, 250)',\n\t\tonBackground: 'rgb(25, 28, 27)',\n\t\tsurface: 'rgb(251, 253, 250)',\n\t\tonSurface: 'rgb(25, 28, 27)',\n\t\tsurfaceVariant: 'rgb(219, 229, 223)',\n\t\tonSurfaceVariant: 'rgb(63, 73, 69)',\n\t\toutline: 'rgb(111, 121, 117)',\n\t\toutlineVariant: 'rgb(191, 201, 195)',\n\t\tshadow: 'rgb(0, 0, 0)',\n\t\tscrim: 'rgb(0, 0, 0)',\n\t\tinverseSurface: 'rgb(46, 49, 47)',\n\t\tinverseOnSurface: 'rgb(239, 241, 238)',\n\t\tinversePrimary: 'rgb(96, 219, 185)',\n\t\televation: {\n\t\t\tlevel0: 'transparent',\n\t\t\tlevel1: 'rgb(238, 246, 242)',\n\t\t\tlevel2: 'rgb(231, 241, 237)',\n\t\t\tlevel3: 'rgb(223, 237, 232)',\n\t\t\tlevel4: 'rgb(221, 236, 230)',\n\t\t\tlevel5: 'rgb(216, 233, 227)',\n\t\t},\n\t\tsurfaceDisabled: 'rgba(25, 28, 27, 0.12)',\n\t\tonSurfaceDisabled: 'rgba(25, 28, 27, 0.38)',\n\t\tbackdrop: 'rgba(41, 50, 47, 0.4)',\n\t},\n};\n\nexport const darkGreenColors = {\n\tcolors: {\n\t\tprimary: 'rgb(96, 219, 185)',\n\t\tonPrimary: 'rgb(0, 56, 43)',\n\t\tprimaryContainer: 'rgb(0, 81, 64)',\n\t\tonPrimaryContainer: 'rgb(126, 248, 212)',\n\t\tsecondary: 'rgb(178, 204, 193)',\n\t\tonSecondary: 'rgb(29, 53, 45)',\n\t\tsecondaryContainer: 'rgb(52, 76, 67)',\n\t\tonSecondaryContainer: 'rgb(206, 233, 221)',\n\t\ttertiary: 'rgb(168, 203, 226)',\n\t\tonTertiary: 'rgb(13, 52, 70)',\n\t\ttertiaryContainer: 'rgb(40, 75, 94)',\n\t\tonTertiaryContainer: 'rgb(196, 231, 255)',\n\t\terror: 'rgb(255, 180, 171)',\n\t\tonError: 'rgb(105, 0, 5)',\n\t\terrorContainer: 'rgb(147, 0, 10)',\n\t\tonErrorContainer: 'rgb(255, 180, 171)',\n\t\tbackground: 'rgb(25, 28, 27)',\n\t\tonBackground: 'rgb(225, 227, 224)',\n\t\tsurface: 'rgb(25, 28, 27)',\n\t\tonSurface: 'rgb(225, 227, 224)',\n\t\tsurfaceVariant: 'rgb(63, 73, 69)',\n\t\tonSurfaceVariant: 'rgb(191, 201, 195)',\n\t\toutline: 'rgb(137, 147, 142)',\n\t\toutlineVariant: 'rgb(63, 73, 69)',\n\t\tshadow: 'rgb(0, 0, 0)',\n\t\tscrim: 'rgb(0, 0, 0)',\n\t\tinverseSurface: 'rgb(225, 227, 224)',\n\t\tinverseOnSurface: 'rgb(46, 49, 47)',\n\t\tinversePrimary: 'rgb(0, 107, 86)',\n\t\televation: {\n\t\t\tlevel0: 'transparent',\n\t\t\tlevel1: 'rgb(29, 38, 35)',\n\t\t\tlevel2: 'rgb(31, 43, 40)',\n\t\t\tlevel3: 'rgb(33, 49, 44)',\n\t\t\tlevel4: 'rgb(34, 51, 46)',\n\t\t\tlevel5: 'rgb(35, 55, 49)',\n\t\t},\n\t\tsurfaceDisabled: 'rgba(225, 227, 224, 0.12)',\n\t\tonSurfaceDisabled: 'rgba(225, 227, 224, 0.38)',\n\t\tbackdrop: 'rgba(41, 50, 47, 0.4)',\n\t},\n};\n","import 'react-native-gesture-handler';\n\nimport {\n\tDarkTheme as NavigationDarkTheme,\n\tDefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { MD3DarkTheme, MD3LightTheme, adaptNavigationTheme } from 'react-native-paper';\n\nimport { darkGreenColors, lightGreenColors } from './colors';\n\nconst { LightTheme, DarkTheme } = adaptNavigationTheme({\n\treactNavigationLight: NavigationDefaultTheme,\n\treactNavigationDark: NavigationDarkTheme,\n});\n\nexport const CombinedDefaultTheme = {\n\t...MD3LightTheme,\n\t...LightTheme,\n\t...lightGreenColors,\n};\n\nexport const CombinedDarkTheme = {\n\t...MD3DarkTheme,\n\t...DarkTheme,\n\t...darkGreenColors,\n};\n","import 'react-native-gesture-handler';\n\nimport { registerRootComponent } from 'expo';\nimport * as React from 'react';\nimport { Provider as PaperProvider } from 'react-native-paper';\n\nimport { PreferencesContext } from './components/PreferencesContext';\nimport RootNavigation from './navigation/RootNavigation';\nimport { CombinedDarkTheme, CombinedDefaultTheme } from './utils/theme';\nimport { StatusBar } from 'react-native';\nimport { PlantProvider } from './context';\nimport { SocketProvider } from './api/socket';\nimport LocationProvider from './api/location';\nimport { NotificationsProvider } from './api/notification';\n\nfunction App() {\n\tconst [isThemeDark, setIsThemeDark] = React.useState(false);\n\n\tconst theme = isThemeDark ? CombinedDarkTheme : CombinedDefaultTheme;\n\n\tconst toggleTheme = React.useCallback(() => {\n\t\treturn setIsThemeDark(!isThemeDark);\n\t}, [isThemeDark]);\n\n\tconst preferences = React.useMemo(\n\t\t() => ({\n\t\t\ttoggleTheme,\n\t\t\tisThemeDark,\n\t\t}),\n\t\t[toggleTheme, isThemeDark]\n\t);\n\n\treturn (\n\t\t<PaperProvider theme={theme}>\n\t\t\t<PreferencesContext.Provider value={preferences}>\n\t\t\t\t<>\n\t\t\t\t\t<LocationProvider>\n\t\t\t\t\t\t<PlantProvider>\n\t\t\t\t\t\t\t<SocketProvider>\n\t\t\t\t\t\t\t\t<NotificationsProvider>\n\t\t\t\t\t\t\t\t\t<StatusBar barStyle={isThemeDark ? 'light-content' : 'dark-content'} />\n\t\t\t\t\t\t\t\t\t<RootNavigation theme={theme} />\n\t\t\t\t\t\t\t\t</NotificationsProvider>\n\t\t\t\t\t\t\t</SocketProvider>\n\t\t\t\t\t\t</PlantProvider>\n\t\t\t\t\t</LocationProvider>\n\t\t\t\t</>\n\t\t\t</PreferencesContext.Provider>\n\t\t</PaperProvider>\n\t);\n}\n\nexport default registerRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/gardim/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t590: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [577], () => (__webpack_require__(1728)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["PreferencesContext","cov_cojgqhldw","s","React","toggleTheme","f","isThemeDark","cov_2ayx7ky3rv","storeData","_ref","_asyncToGenerator","value","jsonValue","JSON","stringify","AsyncStorage","setItem","id","e","Error","_x","apply","arguments","getAllKeys","_ref2","filter","it","startsWith","getMultiple","_ref3","keys","values","multiGet","_x2","_ref4","key","getItem","b","parse","removeValue","_ref5","removeItem","_x4","PlantContext","cov_232jeeggcc","createContext","PlantProvider","children","useState","_slicedToArray","plant","setPlant","updatePlant","updatePlantName","name","_objectSpread","updatePlantCode","code","resetContext","contextValue","useMemo","resetPlant","_jsx","Provider","Home","_route$params","_route$params3","navigation","route","cov_22824mx2wa","params","success","visibleAlert","setVisiblAlert","visible","setVisible","_ref6","_ref7","plants","setPlants","plantContext","useContext","useEffect","_route$params2","loadPlants","_ref8","result","_jsxs","_Fragment","View","style","styles","container","length","flex","justifyContent","map","List","title","titleStyle","fontSize","fontWeight","description","scientific_name","onPress","navigate","handleOnPress","left","Avatar","label","size","FAB","icon","compressedFabStyle","variant","onLongPress","testID","row","fabStyle","Text","Snackbar","action","onDismiss","marginBottom","StyleSheet","create","flexGrow","padding","flexDirection","alignItems","margin","position","right","bottom","MORE_ICON","cov_2iddqvookk","Header","back","options","theme","useTheme","menuVisible","setMenuVisible","Appbar","colors","primary","surface","BackAction","goBack","Content","Menu","anchor","Action","openDrawer","IdentificationMethod","cov_2n4obwl208","textAlign","paddingHorizontal","fabVariant","DeletableImage","image","remove","cov_czsak4jyq","Image","source","uri","top","Badge","Icon","color","containerStyle","badgeContainer","badgeStyle","badge","backgroundColor","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","alignSelf","error","_identifyPlant","images","latitude","longitude","cov_2bon6uc50f","Constants","plantIdApiKey","plantIdApiUrl","base64Images","Promise","all","response","fetch","blob","resolve","reject","reader","FileReader","onerror","onload","readAsDataURL","requestBody","modifiers","plant_details","plant_language","undefined","method","headers","body","json","LocationContext","cov_8yd8n5hmv","granted","_location$coords","_location$coords2","location","setLocation","setGranted","status","requestForegroundPermissionsAsync","console","log","getCurrentPositionAsync","coords","ImageMethod","cov_qvhdg76b0","setImages","buttonOnHold","setButtonOnHold","_ref9","_ref10","_ref11","errorMessage","setErrorMessage","locationContext","pickImage","_ref12","mediaTypes","ImagePicker","Images","allowsEditing","launchCameraAsync","launchImageLibraryAsync","canceled","newImage","assets","assetId","toString","some","concat","_toConsumableArray","removeImage","newImages","index","findIndex","splice","searchPlants","_ref13","_x3","identifyPlant","is_plant","message","Dimensions","get","alignContent","Carousel","pagingEnabled","snapEnabled","mode","modeConfig","snapDirection","loop","data","renderItem","_ref14","item","disabled","query","cov_7ps32p0l7","gardimApiUrl","_getPlant","TextMethod","cov_1d09imgczc","searchQuery","setSearchQuery","chips","setChips","addChip","queryString","trim","includes","prevChips","Set","Searchbar","placeholder","onChangeText","endsWith","onSubmitEditing","HelperText","type","chipsContainer","chip","Chip","onClose","chipToDelete","currentChip","marginVertical","flexWrap","marginTop","cov_1n8ko3ewhg","PlantOptionsList","info","onOptionSelect","selectedId","setSelectedId","option","Card","optionId","card","probability","toFixed","PH_MINIMUM","cov_168utwx8hj","PH_MAXIMUM","LIGHT_MINIMUM","LIGHT_MAXIMUM","ATMOSPHERIC_HUMIDITY_MINIMUM","ATMOSPHERIC_HUMIDITY_MAXIMUM","TEMPERATURE_MINIMUM","TEMPERATURE_MAXIMUM","SOIL_HUMIDITY_MINIMUM","SOIL_HUMIDITY_MAXIMUM","CELL_COUNT","PERCENTAGE","min","max","LUX","TEMPERATURE","convertScale","num","cov_1cjuc5f2ux","Math","round","temperatureToValue","temperature","minTemp","maxTemp","t","cov_porm154rq","mapToPlant","isTrefle","plantDetails","common_name","edible_parts","ph_maximum","ph_minimum","light_minimum","light_maximum","atmospheric_humidity_minimum","atmospheric_humidity_maximum","temperature_minimum","temperature_maximum","soil_humidity_minimum","soil_humidity_maximum","_trefleData$growth","_trefleData$growth2","_trefleData$growth3","_trefleData$growth4","_trefleData$growth5","_trefleData$growth6","_trefleData$growth7","_trefleData$growth7$m","_trefleData$growth8","_trefleData$growth8$m","_trefleData$growth9","_trefleData$growth10","trefleData","edible_part","growth","light","atmospheric_humidity","minimum_temperature","deg_c","maximum_temperature","soil_humidity","_plantIdData$plant_de","_plantIdData$plant_de2","_ref15","_plantIdData$plant_de3","_plantIdData$plant_de4","_ref16","_plantIdData$plant_de5","_plantIdData$plant_de6","plantIdData","plant_name","watering","Result","cov_8aj0ath1r","selectedOption","setSelectedOption","plantResult","suggestions","handleSelect","handleContinue","getPlant","alert","plantSelected","find","ScrollView","maxHeight","Name","cov_1cospcv9d","text","setText","handleSubmit","TextInput","cov_2xjmau88m","Notifications","handleNotification","_handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","NotificationsContext","scheduleWateringNotifications","cancelNotifications","sendOneTimeWateringNotification","toggleNotifications","hasScheduledNotifications","NotificationsProvider","_getNotificationPermissions","Device","isDevice","existingStatus","finalStatus","_checkScheduledNotifications","getNotificationPermissions","checkScheduledNotifications","notificationsValue","useNotifications","context","Code","cov_1svsgh3rh5","setValue","ref","useBlurOnFulfill","cellCount","useClearByFocusCell","props","getCellOnLayoutHandler","handlePlantData","CodeField","rootStyle","codeFieldRoot","keyboardType","textContentType","onEndEditing","renderCell","symbol","isFocused","themedStyles","cell","focusCell","onLayout","Cursor","Button","display","minWidth","borderColor","secondaryContainer","maxWidth","marginHorizontal","lineHeight","borderWidth","outline","cov_2bszhesyxp","LinearGaugeChart","range","conversor","sliderValue","setSliderValue","scaledRange","rangeSize","scaleFactor","ceil","scaleRange","scaledMin","scaledMax","sectionColors","Array","from","_","i","sliderRef","useRef","line","section","Slider","minimumValue","maximumValue","step","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","thumbStyle","gradientContainer","overflow","SocketContext","cov_ggrr2kneb","soilValue","luxValue","SocketProvider","_plantContext$plant2","setSoilValue","setLuxValue","setCode","socketUrl","enableSocket","userId","socket","io","transports","_plantContext$plant","on","parsedData","Number","parsed","disconnect","WeahterContext","cov_gf0984331","weather","isLoading","Status","cov_9d5gif9a1","renderSoil","renderLux","SoilCard","LuxCard","UmidityCard","TemperatureCard","Loading","NoData","ActivityIndicator","animating","AntDesign","Title","Actions","current","humidity","Configurations","cov_2ftvi5q1ws","editVisible","setEditVisible","deleteVisible","setDeleteVisible","hideEditDialog","hideDeleteDialog","handleOnEdit","Portal","Dialog","Tab","cov_5c2mrq5aj","createMaterialBottomTabNavigator","RootTabNavigation","useLayoutEffect","setOptions","Navigator","Screen","component","tabBarLabel","tabBarIcon","Fontisto","Feather","Stack","cov_ux3lav0f5","createStackNavigator","RootStackNavigator","initialRouteName","screenOptions","header","DrawerContent","cov_2iewhoy4wl","insets","useSafeAreaInsets","Drawer","paddingTop","background","TouchableRipple","preference","pointerEvents","Switch","drawerContent","paddingVertical","v3Preference","cov_2oaiwxhslo","createDrawerNavigator","RootNavigation","NavigationContainer","headerShown","drawerPosition","headerTintColor","onBackground","lightGreenColors","cov_1gb5qka6wt","onPrimary","primaryContainer","onPrimaryContainer","secondary","onSecondary","onSecondaryContainer","tertiary","onTertiary","tertiaryContainer","onTertiaryContainer","onError","errorContainer","onErrorContainer","onSurface","surfaceVariant","onSurfaceVariant","outlineVariant","shadow","scrim","inverseSurface","inverseOnSurface","inversePrimary","level0","level1","level2","level3","level4","level5","surfaceDisabled","onSurfaceDisabled","backdrop","darkGreenColors","cov_1i0iyuss7k","adaptNavigationTheme","reactNavigationLight","NavigationDefaultTheme","reactNavigationDark","NavigationDarkTheme","LightTheme","DarkTheme","CombinedDefaultTheme","MD3LightTheme","CombinedDarkTheme","MD3DarkTheme","registerRootComponent","cov_16nnmm1b6d","setIsThemeDark","preferences","PaperProvider","LocationProvider","StatusBar","barStyle","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","every","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","this","then","ns","def","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","g","globalThis","Function","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}